// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

package com.dunkware.net.proto.core;

/**
 * Protobuf enum {@code dunkware.core.GDataType}
 */
public enum GDataType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>STRING_TYPE = 0;</code>
   */
  STRING_TYPE(0),
  /**
   * <code>INT_TYPE = 1;</code>
   */
  INT_TYPE(1),
  /**
   * <code>LONG_TYPE = 2;</code>
   */
  LONG_TYPE(2),
  /**
   * <code>DOUBLE_TYPE = 3;</code>
   */
  DOUBLE_TYPE(3),
  /**
   * <code>BOOL_TYPE = 4;</code>
   */
  BOOL_TYPE(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>STRING_TYPE = 0;</code>
   */
  public static final int STRING_TYPE_VALUE = 0;
  /**
   * <code>INT_TYPE = 1;</code>
   */
  public static final int INT_TYPE_VALUE = 1;
  /**
   * <code>LONG_TYPE = 2;</code>
   */
  public static final int LONG_TYPE_VALUE = 2;
  /**
   * <code>DOUBLE_TYPE = 3;</code>
   */
  public static final int DOUBLE_TYPE_VALUE = 3;
  /**
   * <code>BOOL_TYPE = 4;</code>
   */
  public static final int BOOL_TYPE_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static GDataType valueOf(int value) {
    return forNumber(value);
  }

  public static GDataType forNumber(int value) {
    switch (value) {
      case 0: return STRING_TYPE;
      case 1: return INT_TYPE;
      case 2: return LONG_TYPE;
      case 3: return DOUBLE_TYPE;
      case 4: return BOOL_TYPE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GDataType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GDataType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GDataType>() {
          public GDataType findValueByNumber(int number) {
            return GDataType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dunkware.net.proto.core.GCoreProto.getDescriptor().getEnumTypes().get(5);
  }

  private static final GDataType[] VALUES = values();

  public static GDataType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GDataType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dunkware.core.GDataType)
}

