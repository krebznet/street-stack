// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

package com.dunkware.net.proto.core;

/**
 * <pre>
 * Data Field Types Enum
 * </pre>
 *
 * Protobuf enum {@code dunkware.core.GFieldType}
 */
public enum GFieldType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>INT = 0;</code>
   */
  INT(0),
  /**
   * <code>DOUBLE = 1;</code>
   */
  DOUBLE(1),
  /**
   * <code>BOOL = 2;</code>
   */
  BOOL(2),
  /**
   * <code>STRING = 3;</code>
   */
  STRING(3),
  /**
   * <code>BYTES = 4;</code>
   */
  BYTES(4),
  /**
   * <code>BEAN = 5;</code>
   */
  BEAN(5),
  /**
   * <code>LIST = 6;</code>
   */
  LIST(6),
  /**
   * <code>DATE = 7;</code>
   */
  DATE(7),
  /**
   * <code>TIME = 8;</code>
   */
  TIME(8),
  /**
   * <code>DATE_TIME = 9;</code>
   */
  DATE_TIME(9),
  /**
   * <code>CALENDAR_RAGE = 10;</code>
   */
  CALENDAR_RAGE(10),
  /**
   * <code>LONG = 11;</code>
   */
  LONG(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>INT = 0;</code>
   */
  public static final int INT_VALUE = 0;
  /**
   * <code>DOUBLE = 1;</code>
   */
  public static final int DOUBLE_VALUE = 1;
  /**
   * <code>BOOL = 2;</code>
   */
  public static final int BOOL_VALUE = 2;
  /**
   * <code>STRING = 3;</code>
   */
  public static final int STRING_VALUE = 3;
  /**
   * <code>BYTES = 4;</code>
   */
  public static final int BYTES_VALUE = 4;
  /**
   * <code>BEAN = 5;</code>
   */
  public static final int BEAN_VALUE = 5;
  /**
   * <code>LIST = 6;</code>
   */
  public static final int LIST_VALUE = 6;
  /**
   * <code>DATE = 7;</code>
   */
  public static final int DATE_VALUE = 7;
  /**
   * <code>TIME = 8;</code>
   */
  public static final int TIME_VALUE = 8;
  /**
   * <code>DATE_TIME = 9;</code>
   */
  public static final int DATE_TIME_VALUE = 9;
  /**
   * <code>CALENDAR_RAGE = 10;</code>
   */
  public static final int CALENDAR_RAGE_VALUE = 10;
  /**
   * <code>LONG = 11;</code>
   */
  public static final int LONG_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static GFieldType valueOf(int value) {
    return forNumber(value);
  }

  public static GFieldType forNumber(int value) {
    switch (value) {
      case 0: return INT;
      case 1: return DOUBLE;
      case 2: return BOOL;
      case 3: return STRING;
      case 4: return BYTES;
      case 5: return BEAN;
      case 6: return LIST;
      case 7: return DATE;
      case 8: return TIME;
      case 9: return DATE_TIME;
      case 10: return CALENDAR_RAGE;
      case 11: return LONG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GFieldType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GFieldType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GFieldType>() {
          public GFieldType findValueByNumber(int number) {
            return GFieldType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dunkware.net.proto.core.GCoreProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final GFieldType[] VALUES = values();

  public static GFieldType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GFieldType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dunkware.core.GFieldType)
}

