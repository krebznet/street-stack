// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

package com.dunkware.net.proto.core;

/**
 * <pre>
 * Dat Field that has either a int or string id and a value of one type
 * </pre>
 *
 * Protobuf type {@code dunkware.core.GField}
 */
public  final class GField extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dunkware.core.GField)
    GFieldOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GField.newBuilder() to construct.
  private GField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GField() {
    id_ = 0;
    name_ = "";
    type_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GField(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            id_ = input.readInt32();
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 24: {
            dataCase_ = 3;
            data_ = input.readInt32();
            break;
          }
          case 32: {
            dataCase_ = 4;
            data_ = input.readInt64();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            dataCase_ = 5;
            data_ = s;
            break;
          }
          case 49: {
            dataCase_ = 6;
            data_ = input.readDouble();
            break;
          }
          case 56: {
            dataCase_ = 7;
            data_ = input.readBool();
            break;
          }
          case 66: {
            dataCase_ = 8;
            data_ = input.readBytes();
            break;
          }
          case 74: {
            com.dunkware.net.proto.core.GBean.Builder subBuilder = null;
            if (dataCase_ == 9) {
              subBuilder = ((com.dunkware.net.proto.core.GBean) data_).toBuilder();
            }
            data_ =
                input.readMessage(com.dunkware.net.proto.core.GBean.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.core.GBean) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 9;
            break;
          }
          case 82: {
            com.dunkware.net.proto.core.GList.Builder subBuilder = null;
            if (dataCase_ == 10) {
              subBuilder = ((com.dunkware.net.proto.core.GList) data_).toBuilder();
            }
            data_ =
                input.readMessage(com.dunkware.net.proto.core.GList.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.core.GList) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 10;
            break;
          }
          case 88: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 98: {
            com.dunkware.net.proto.core.GTime.Builder subBuilder = null;
            if (dataCase_ == 12) {
              subBuilder = ((com.dunkware.net.proto.core.GTime) data_).toBuilder();
            }
            data_ =
                input.readMessage(com.dunkware.net.proto.core.GTime.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.core.GTime) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 12;
            break;
          }
          case 106: {
            com.dunkware.net.proto.core.GDate.Builder subBuilder = null;
            if (dataCase_ == 13) {
              subBuilder = ((com.dunkware.net.proto.core.GDate) data_).toBuilder();
            }
            data_ =
                input.readMessage(com.dunkware.net.proto.core.GDate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.core.GDate) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 13;
            break;
          }
          case 114: {
            com.dunkware.net.proto.core.GDateTime.Builder subBuilder = null;
            if (dataCase_ == 14) {
              subBuilder = ((com.dunkware.net.proto.core.GDateTime) data_).toBuilder();
            }
            data_ =
                input.readMessage(com.dunkware.net.proto.core.GDateTime.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.core.GDateTime) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 14;
            break;
          }
          case 122: {
            com.dunkware.net.proto.core.GCalendarRange.Builder subBuilder = null;
            if (dataCase_ == 15) {
              subBuilder = ((com.dunkware.net.proto.core.GCalendarRange) data_).toBuilder();
            }
            data_ =
                input.readMessage(com.dunkware.net.proto.core.GCalendarRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.core.GCalendarRange) data_);
              data_ = subBuilder.buildPartial();
            }
            dataCase_ = 15;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dunkware.net.proto.core.GCoreProto.internal_static_dunkware_core_GField_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dunkware.net.proto.core.GCoreProto.internal_static_dunkware_core_GField_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dunkware.net.proto.core.GField.class, com.dunkware.net.proto.core.GField.Builder.class);
  }

  private int dataCase_ = 0;
  private java.lang.Object data_;
  public enum DataCase
      implements com.google.protobuf.Internal.EnumLite {
    INTVALUE(3),
    LONGVALUE(4),
    STRINGVALUE(5),
    DOUBLEVALUE(6),
    BOOLEANVALUE(7),
    BYTESVALUE(8),
    BEANVALUE(9),
    LISTVALUE(10),
    TIMEVALUE(12),
    DATEVALUE(13),
    DATETIMEVALUE(14),
    CALENDARRANGEVALUE(15),
    DATA_NOT_SET(0);
    private final int value;
    private DataCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataCase forNumber(int value) {
      switch (value) {
        case 3: return INTVALUE;
        case 4: return LONGVALUE;
        case 5: return STRINGVALUE;
        case 6: return DOUBLEVALUE;
        case 7: return BOOLEANVALUE;
        case 8: return BYTESVALUE;
        case 9: return BEANVALUE;
        case 10: return LISTVALUE;
        case 12: return TIMEVALUE;
        case 13: return DATEVALUE;
        case 14: return DATETIMEVALUE;
        case 15: return CALENDARRANGEVALUE;
        case 0: return DATA_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DataCase
  getDataCase() {
    return DataCase.forNumber(
        dataCase_);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private int id_;
  /**
   * <code>int32 id = 1;</code>
   */
  public int getId() {
    return id_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 2;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 11;
  private int type_;
  /**
   * <code>.dunkware.core.GFieldType type = 11;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.dunkware.core.GFieldType type = 11;</code>
   */
  public com.dunkware.net.proto.core.GFieldType getType() {
    @SuppressWarnings("deprecation")
    com.dunkware.net.proto.core.GFieldType result = com.dunkware.net.proto.core.GFieldType.valueOf(type_);
    return result == null ? com.dunkware.net.proto.core.GFieldType.UNRECOGNIZED : result;
  }

  public static final int INTVALUE_FIELD_NUMBER = 3;
  /**
   * <code>int32 intValue = 3;</code>
   */
  public int getIntValue() {
    if (dataCase_ == 3) {
      return (java.lang.Integer) data_;
    }
    return 0;
  }

  public static final int LONGVALUE_FIELD_NUMBER = 4;
  /**
   * <code>int64 longValue = 4;</code>
   */
  public long getLongValue() {
    if (dataCase_ == 4) {
      return (java.lang.Long) data_;
    }
    return 0L;
  }

  public static final int STRINGVALUE_FIELD_NUMBER = 5;
  /**
   * <code>string stringValue = 5;</code>
   */
  public java.lang.String getStringValue() {
    java.lang.Object ref = "";
    if (dataCase_ == 5) {
      ref = data_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (dataCase_ == 5) {
        data_ = s;
      }
      return s;
    }
  }
  /**
   * <code>string stringValue = 5;</code>
   */
  public com.google.protobuf.ByteString
      getStringValueBytes() {
    java.lang.Object ref = "";
    if (dataCase_ == 5) {
      ref = data_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (dataCase_ == 5) {
        data_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOUBLEVALUE_FIELD_NUMBER = 6;
  /**
   * <code>double doubleValue = 6;</code>
   */
  public double getDoubleValue() {
    if (dataCase_ == 6) {
      return (java.lang.Double) data_;
    }
    return 0D;
  }

  public static final int BOOLEANVALUE_FIELD_NUMBER = 7;
  /**
   * <code>bool booleanValue = 7;</code>
   */
  public boolean getBooleanValue() {
    if (dataCase_ == 7) {
      return (java.lang.Boolean) data_;
    }
    return false;
  }

  public static final int BYTESVALUE_FIELD_NUMBER = 8;
  /**
   * <code>bytes bytesValue = 8;</code>
   */
  public com.google.protobuf.ByteString getBytesValue() {
    if (dataCase_ == 8) {
      return (com.google.protobuf.ByteString) data_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }

  public static final int BEANVALUE_FIELD_NUMBER = 9;
  /**
   * <code>.dunkware.core.GBean beanValue = 9;</code>
   */
  public boolean hasBeanValue() {
    return dataCase_ == 9;
  }
  /**
   * <code>.dunkware.core.GBean beanValue = 9;</code>
   */
  public com.dunkware.net.proto.core.GBean getBeanValue() {
    if (dataCase_ == 9) {
       return (com.dunkware.net.proto.core.GBean) data_;
    }
    return com.dunkware.net.proto.core.GBean.getDefaultInstance();
  }
  /**
   * <code>.dunkware.core.GBean beanValue = 9;</code>
   */
  public com.dunkware.net.proto.core.GBeanOrBuilder getBeanValueOrBuilder() {
    if (dataCase_ == 9) {
       return (com.dunkware.net.proto.core.GBean) data_;
    }
    return com.dunkware.net.proto.core.GBean.getDefaultInstance();
  }

  public static final int LISTVALUE_FIELD_NUMBER = 10;
  /**
   * <code>.dunkware.core.GList listValue = 10;</code>
   */
  public boolean hasListValue() {
    return dataCase_ == 10;
  }
  /**
   * <code>.dunkware.core.GList listValue = 10;</code>
   */
  public com.dunkware.net.proto.core.GList getListValue() {
    if (dataCase_ == 10) {
       return (com.dunkware.net.proto.core.GList) data_;
    }
    return com.dunkware.net.proto.core.GList.getDefaultInstance();
  }
  /**
   * <code>.dunkware.core.GList listValue = 10;</code>
   */
  public com.dunkware.net.proto.core.GListOrBuilder getListValueOrBuilder() {
    if (dataCase_ == 10) {
       return (com.dunkware.net.proto.core.GList) data_;
    }
    return com.dunkware.net.proto.core.GList.getDefaultInstance();
  }

  public static final int TIMEVALUE_FIELD_NUMBER = 12;
  /**
   * <code>.dunkware.core.GTime timeValue = 12;</code>
   */
  public boolean hasTimeValue() {
    return dataCase_ == 12;
  }
  /**
   * <code>.dunkware.core.GTime timeValue = 12;</code>
   */
  public com.dunkware.net.proto.core.GTime getTimeValue() {
    if (dataCase_ == 12) {
       return (com.dunkware.net.proto.core.GTime) data_;
    }
    return com.dunkware.net.proto.core.GTime.getDefaultInstance();
  }
  /**
   * <code>.dunkware.core.GTime timeValue = 12;</code>
   */
  public com.dunkware.net.proto.core.GTimeOrBuilder getTimeValueOrBuilder() {
    if (dataCase_ == 12) {
       return (com.dunkware.net.proto.core.GTime) data_;
    }
    return com.dunkware.net.proto.core.GTime.getDefaultInstance();
  }

  public static final int DATEVALUE_FIELD_NUMBER = 13;
  /**
   * <code>.dunkware.core.GDate dateValue = 13;</code>
   */
  public boolean hasDateValue() {
    return dataCase_ == 13;
  }
  /**
   * <code>.dunkware.core.GDate dateValue = 13;</code>
   */
  public com.dunkware.net.proto.core.GDate getDateValue() {
    if (dataCase_ == 13) {
       return (com.dunkware.net.proto.core.GDate) data_;
    }
    return com.dunkware.net.proto.core.GDate.getDefaultInstance();
  }
  /**
   * <code>.dunkware.core.GDate dateValue = 13;</code>
   */
  public com.dunkware.net.proto.core.GDateOrBuilder getDateValueOrBuilder() {
    if (dataCase_ == 13) {
       return (com.dunkware.net.proto.core.GDate) data_;
    }
    return com.dunkware.net.proto.core.GDate.getDefaultInstance();
  }

  public static final int DATETIMEVALUE_FIELD_NUMBER = 14;
  /**
   * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
   */
  public boolean hasDateTimeValue() {
    return dataCase_ == 14;
  }
  /**
   * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
   */
  public com.dunkware.net.proto.core.GDateTime getDateTimeValue() {
    if (dataCase_ == 14) {
       return (com.dunkware.net.proto.core.GDateTime) data_;
    }
    return com.dunkware.net.proto.core.GDateTime.getDefaultInstance();
  }
  /**
   * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
   */
  public com.dunkware.net.proto.core.GDateTimeOrBuilder getDateTimeValueOrBuilder() {
    if (dataCase_ == 14) {
       return (com.dunkware.net.proto.core.GDateTime) data_;
    }
    return com.dunkware.net.proto.core.GDateTime.getDefaultInstance();
  }

  public static final int CALENDARRANGEVALUE_FIELD_NUMBER = 15;
  /**
   * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
   */
  public boolean hasCalendarRangeValue() {
    return dataCase_ == 15;
  }
  /**
   * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
   */
  public com.dunkware.net.proto.core.GCalendarRange getCalendarRangeValue() {
    if (dataCase_ == 15) {
       return (com.dunkware.net.proto.core.GCalendarRange) data_;
    }
    return com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance();
  }
  /**
   * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
   */
  public com.dunkware.net.proto.core.GCalendarRangeOrBuilder getCalendarRangeValueOrBuilder() {
    if (dataCase_ == 15) {
       return (com.dunkware.net.proto.core.GCalendarRange) data_;
    }
    return com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != 0) {
      output.writeInt32(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (dataCase_ == 3) {
      output.writeInt32(
          3, (int)((java.lang.Integer) data_));
    }
    if (dataCase_ == 4) {
      output.writeInt64(
          4, (long)((java.lang.Long) data_));
    }
    if (dataCase_ == 5) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, data_);
    }
    if (dataCase_ == 6) {
      output.writeDouble(
          6, (double)((java.lang.Double) data_));
    }
    if (dataCase_ == 7) {
      output.writeBool(
          7, (boolean)((java.lang.Boolean) data_));
    }
    if (dataCase_ == 8) {
      output.writeBytes(
          8, (com.google.protobuf.ByteString) data_);
    }
    if (dataCase_ == 9) {
      output.writeMessage(9, (com.dunkware.net.proto.core.GBean) data_);
    }
    if (dataCase_ == 10) {
      output.writeMessage(10, (com.dunkware.net.proto.core.GList) data_);
    }
    if (type_ != com.dunkware.net.proto.core.GFieldType.INT.getNumber()) {
      output.writeEnum(11, type_);
    }
    if (dataCase_ == 12) {
      output.writeMessage(12, (com.dunkware.net.proto.core.GTime) data_);
    }
    if (dataCase_ == 13) {
      output.writeMessage(13, (com.dunkware.net.proto.core.GDate) data_);
    }
    if (dataCase_ == 14) {
      output.writeMessage(14, (com.dunkware.net.proto.core.GDateTime) data_);
    }
    if (dataCase_ == 15) {
      output.writeMessage(15, (com.dunkware.net.proto.core.GCalendarRange) data_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, id_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (dataCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(
            3, (int)((java.lang.Integer) data_));
    }
    if (dataCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(
            4, (long)((java.lang.Long) data_));
    }
    if (dataCase_ == 5) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, data_);
    }
    if (dataCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(
            6, (double)((java.lang.Double) data_));
    }
    if (dataCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(
            7, (boolean)((java.lang.Boolean) data_));
    }
    if (dataCase_ == 8) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(
            8, (com.google.protobuf.ByteString) data_);
    }
    if (dataCase_ == 9) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, (com.dunkware.net.proto.core.GBean) data_);
    }
    if (dataCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (com.dunkware.net.proto.core.GList) data_);
    }
    if (type_ != com.dunkware.net.proto.core.GFieldType.INT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, type_);
    }
    if (dataCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (com.dunkware.net.proto.core.GTime) data_);
    }
    if (dataCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (com.dunkware.net.proto.core.GDate) data_);
    }
    if (dataCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (com.dunkware.net.proto.core.GDateTime) data_);
    }
    if (dataCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, (com.dunkware.net.proto.core.GCalendarRange) data_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dunkware.net.proto.core.GField)) {
      return super.equals(obj);
    }
    com.dunkware.net.proto.core.GField other = (com.dunkware.net.proto.core.GField) obj;

    boolean result = true;
    result = result && (getId()
        == other.getId());
    result = result && getName()
        .equals(other.getName());
    result = result && type_ == other.type_;
    result = result && getDataCase().equals(
        other.getDataCase());
    if (!result) return false;
    switch (dataCase_) {
      case 3:
        result = result && (getIntValue()
            == other.getIntValue());
        break;
      case 4:
        result = result && (getLongValue()
            == other.getLongValue());
        break;
      case 5:
        result = result && getStringValue()
            .equals(other.getStringValue());
        break;
      case 6:
        result = result && (
            java.lang.Double.doubleToLongBits(getDoubleValue())
            == java.lang.Double.doubleToLongBits(
                other.getDoubleValue()));
        break;
      case 7:
        result = result && (getBooleanValue()
            == other.getBooleanValue());
        break;
      case 8:
        result = result && getBytesValue()
            .equals(other.getBytesValue());
        break;
      case 9:
        result = result && getBeanValue()
            .equals(other.getBeanValue());
        break;
      case 10:
        result = result && getListValue()
            .equals(other.getListValue());
        break;
      case 12:
        result = result && getTimeValue()
            .equals(other.getTimeValue());
        break;
      case 13:
        result = result && getDateValue()
            .equals(other.getDateValue());
        break;
      case 14:
        result = result && getDateTimeValue()
            .equals(other.getDateTimeValue());
        break;
      case 15:
        result = result && getCalendarRangeValue()
            .equals(other.getCalendarRangeValue());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    switch (dataCase_) {
      case 3:
        hash = (37 * hash) + INTVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getIntValue();
        break;
      case 4:
        hash = (37 * hash) + LONGVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLongValue());
        break;
      case 5:
        hash = (37 * hash) + STRINGVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getStringValue().hashCode();
        break;
      case 6:
        hash = (37 * hash) + DOUBLEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getDoubleValue()));
        break;
      case 7:
        hash = (37 * hash) + BOOLEANVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBooleanValue());
        break;
      case 8:
        hash = (37 * hash) + BYTESVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getBytesValue().hashCode();
        break;
      case 9:
        hash = (37 * hash) + BEANVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getBeanValue().hashCode();
        break;
      case 10:
        hash = (37 * hash) + LISTVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getListValue().hashCode();
        break;
      case 12:
        hash = (37 * hash) + TIMEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeValue().hashCode();
        break;
      case 13:
        hash = (37 * hash) + DATEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getDateValue().hashCode();
        break;
      case 14:
        hash = (37 * hash) + DATETIMEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getDateTimeValue().hashCode();
        break;
      case 15:
        hash = (37 * hash) + CALENDARRANGEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getCalendarRangeValue().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dunkware.net.proto.core.GField parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.core.GField parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.core.GField parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.core.GField parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dunkware.net.proto.core.GField prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Dat Field that has either a int or string id and a value of one type
   * </pre>
   *
   * Protobuf type {@code dunkware.core.GField}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dunkware.core.GField)
      com.dunkware.net.proto.core.GFieldOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dunkware.net.proto.core.GCoreProto.internal_static_dunkware_core_GField_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dunkware.net.proto.core.GCoreProto.internal_static_dunkware_core_GField_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dunkware.net.proto.core.GField.class, com.dunkware.net.proto.core.GField.Builder.class);
    }

    // Construct using com.dunkware.net.proto.core.GField.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = 0;

      name_ = "";

      type_ = 0;

      dataCase_ = 0;
      data_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dunkware.net.proto.core.GCoreProto.internal_static_dunkware_core_GField_descriptor;
    }

    @java.lang.Override
    public com.dunkware.net.proto.core.GField getDefaultInstanceForType() {
      return com.dunkware.net.proto.core.GField.getDefaultInstance();
    }

    @java.lang.Override
    public com.dunkware.net.proto.core.GField build() {
      com.dunkware.net.proto.core.GField result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dunkware.net.proto.core.GField buildPartial() {
      com.dunkware.net.proto.core.GField result = new com.dunkware.net.proto.core.GField(this);
      result.id_ = id_;
      result.name_ = name_;
      result.type_ = type_;
      if (dataCase_ == 3) {
        result.data_ = data_;
      }
      if (dataCase_ == 4) {
        result.data_ = data_;
      }
      if (dataCase_ == 5) {
        result.data_ = data_;
      }
      if (dataCase_ == 6) {
        result.data_ = data_;
      }
      if (dataCase_ == 7) {
        result.data_ = data_;
      }
      if (dataCase_ == 8) {
        result.data_ = data_;
      }
      if (dataCase_ == 9) {
        if (beanValueBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = beanValueBuilder_.build();
        }
      }
      if (dataCase_ == 10) {
        if (listValueBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = listValueBuilder_.build();
        }
      }
      if (dataCase_ == 12) {
        if (timeValueBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = timeValueBuilder_.build();
        }
      }
      if (dataCase_ == 13) {
        if (dateValueBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dateValueBuilder_.build();
        }
      }
      if (dataCase_ == 14) {
        if (dateTimeValueBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dateTimeValueBuilder_.build();
        }
      }
      if (dataCase_ == 15) {
        if (calendarRangeValueBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = calendarRangeValueBuilder_.build();
        }
      }
      result.dataCase_ = dataCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dunkware.net.proto.core.GField) {
        return mergeFrom((com.dunkware.net.proto.core.GField)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dunkware.net.proto.core.GField other) {
      if (other == com.dunkware.net.proto.core.GField.getDefaultInstance()) return this;
      if (other.getId() != 0) {
        setId(other.getId());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      switch (other.getDataCase()) {
        case INTVALUE: {
          setIntValue(other.getIntValue());
          break;
        }
        case LONGVALUE: {
          setLongValue(other.getLongValue());
          break;
        }
        case STRINGVALUE: {
          dataCase_ = 5;
          data_ = other.data_;
          onChanged();
          break;
        }
        case DOUBLEVALUE: {
          setDoubleValue(other.getDoubleValue());
          break;
        }
        case BOOLEANVALUE: {
          setBooleanValue(other.getBooleanValue());
          break;
        }
        case BYTESVALUE: {
          setBytesValue(other.getBytesValue());
          break;
        }
        case BEANVALUE: {
          mergeBeanValue(other.getBeanValue());
          break;
        }
        case LISTVALUE: {
          mergeListValue(other.getListValue());
          break;
        }
        case TIMEVALUE: {
          mergeTimeValue(other.getTimeValue());
          break;
        }
        case DATEVALUE: {
          mergeDateValue(other.getDateValue());
          break;
        }
        case DATETIMEVALUE: {
          mergeDateTimeValue(other.getDateTimeValue());
          break;
        }
        case CALENDARRANGEVALUE: {
          mergeCalendarRangeValue(other.getCalendarRangeValue());
          break;
        }
        case DATA_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dunkware.net.proto.core.GField parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dunkware.net.proto.core.GField) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int dataCase_ = 0;
    private java.lang.Object data_;
    public DataCase
        getDataCase() {
      return DataCase.forNumber(
          dataCase_);
    }

    public Builder clearData() {
      dataCase_ = 0;
      data_ = null;
      onChanged();
      return this;
    }


    private int id_ ;
    /**
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>int32 id = 1;</code>
     */
    public Builder setId(int value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 2;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 2;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <code>.dunkware.core.GFieldType type = 11;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.dunkware.core.GFieldType type = 11;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.dunkware.core.GFieldType type = 11;</code>
     */
    public com.dunkware.net.proto.core.GFieldType getType() {
      @SuppressWarnings("deprecation")
      com.dunkware.net.proto.core.GFieldType result = com.dunkware.net.proto.core.GFieldType.valueOf(type_);
      return result == null ? com.dunkware.net.proto.core.GFieldType.UNRECOGNIZED : result;
    }
    /**
     * <code>.dunkware.core.GFieldType type = 11;</code>
     */
    public Builder setType(com.dunkware.net.proto.core.GFieldType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.dunkware.core.GFieldType type = 11;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    /**
     * <code>int32 intValue = 3;</code>
     */
    public int getIntValue() {
      if (dataCase_ == 3) {
        return (java.lang.Integer) data_;
      }
      return 0;
    }
    /**
     * <code>int32 intValue = 3;</code>
     */
    public Builder setIntValue(int value) {
      dataCase_ = 3;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 intValue = 3;</code>
     */
    public Builder clearIntValue() {
      if (dataCase_ == 3) {
        dataCase_ = 0;
        data_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>int64 longValue = 4;</code>
     */
    public long getLongValue() {
      if (dataCase_ == 4) {
        return (java.lang.Long) data_;
      }
      return 0L;
    }
    /**
     * <code>int64 longValue = 4;</code>
     */
    public Builder setLongValue(long value) {
      dataCase_ = 4;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 longValue = 4;</code>
     */
    public Builder clearLongValue() {
      if (dataCase_ == 4) {
        dataCase_ = 0;
        data_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>string stringValue = 5;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (dataCase_ == 5) {
        ref = data_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (dataCase_ == 5) {
          data_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string stringValue = 5;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (dataCase_ == 5) {
        ref = data_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (dataCase_ == 5) {
          data_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string stringValue = 5;</code>
     */
    public Builder setStringValue(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 5;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string stringValue = 5;</code>
     */
    public Builder clearStringValue() {
      if (dataCase_ == 5) {
        dataCase_ = 0;
        data_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <code>string stringValue = 5;</code>
     */
    public Builder setStringValueBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      dataCase_ = 5;
      data_ = value;
      onChanged();
      return this;
    }

    /**
     * <code>double doubleValue = 6;</code>
     */
    public double getDoubleValue() {
      if (dataCase_ == 6) {
        return (java.lang.Double) data_;
      }
      return 0D;
    }
    /**
     * <code>double doubleValue = 6;</code>
     */
    public Builder setDoubleValue(double value) {
      dataCase_ = 6;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double doubleValue = 6;</code>
     */
    public Builder clearDoubleValue() {
      if (dataCase_ == 6) {
        dataCase_ = 0;
        data_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>bool booleanValue = 7;</code>
     */
    public boolean getBooleanValue() {
      if (dataCase_ == 7) {
        return (java.lang.Boolean) data_;
      }
      return false;
    }
    /**
     * <code>bool booleanValue = 7;</code>
     */
    public Builder setBooleanValue(boolean value) {
      dataCase_ = 7;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool booleanValue = 7;</code>
     */
    public Builder clearBooleanValue() {
      if (dataCase_ == 7) {
        dataCase_ = 0;
        data_ = null;
        onChanged();
      }
      return this;
    }

    /**
     * <code>bytes bytesValue = 8;</code>
     */
    public com.google.protobuf.ByteString getBytesValue() {
      if (dataCase_ == 8) {
        return (com.google.protobuf.ByteString) data_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <code>bytes bytesValue = 8;</code>
     */
    public Builder setBytesValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  dataCase_ = 8;
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bytes bytesValue = 8;</code>
     */
    public Builder clearBytesValue() {
      if (dataCase_ == 8) {
        dataCase_ = 0;
        data_ = null;
        onChanged();
      }
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GBean, com.dunkware.net.proto.core.GBean.Builder, com.dunkware.net.proto.core.GBeanOrBuilder> beanValueBuilder_;
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public boolean hasBeanValue() {
      return dataCase_ == 9;
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public com.dunkware.net.proto.core.GBean getBeanValue() {
      if (beanValueBuilder_ == null) {
        if (dataCase_ == 9) {
          return (com.dunkware.net.proto.core.GBean) data_;
        }
        return com.dunkware.net.proto.core.GBean.getDefaultInstance();
      } else {
        if (dataCase_ == 9) {
          return beanValueBuilder_.getMessage();
        }
        return com.dunkware.net.proto.core.GBean.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public Builder setBeanValue(com.dunkware.net.proto.core.GBean value) {
      if (beanValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        beanValueBuilder_.setMessage(value);
      }
      dataCase_ = 9;
      return this;
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public Builder setBeanValue(
        com.dunkware.net.proto.core.GBean.Builder builderForValue) {
      if (beanValueBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        beanValueBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 9;
      return this;
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public Builder mergeBeanValue(com.dunkware.net.proto.core.GBean value) {
      if (beanValueBuilder_ == null) {
        if (dataCase_ == 9 &&
            data_ != com.dunkware.net.proto.core.GBean.getDefaultInstance()) {
          data_ = com.dunkware.net.proto.core.GBean.newBuilder((com.dunkware.net.proto.core.GBean) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 9) {
          beanValueBuilder_.mergeFrom(value);
        }
        beanValueBuilder_.setMessage(value);
      }
      dataCase_ = 9;
      return this;
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public Builder clearBeanValue() {
      if (beanValueBuilder_ == null) {
        if (dataCase_ == 9) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 9) {
          dataCase_ = 0;
          data_ = null;
        }
        beanValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public com.dunkware.net.proto.core.GBean.Builder getBeanValueBuilder() {
      return getBeanValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    public com.dunkware.net.proto.core.GBeanOrBuilder getBeanValueOrBuilder() {
      if ((dataCase_ == 9) && (beanValueBuilder_ != null)) {
        return beanValueBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 9) {
          return (com.dunkware.net.proto.core.GBean) data_;
        }
        return com.dunkware.net.proto.core.GBean.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GBean beanValue = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GBean, com.dunkware.net.proto.core.GBean.Builder, com.dunkware.net.proto.core.GBeanOrBuilder> 
        getBeanValueFieldBuilder() {
      if (beanValueBuilder_ == null) {
        if (!(dataCase_ == 9)) {
          data_ = com.dunkware.net.proto.core.GBean.getDefaultInstance();
        }
        beanValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.core.GBean, com.dunkware.net.proto.core.GBean.Builder, com.dunkware.net.proto.core.GBeanOrBuilder>(
                (com.dunkware.net.proto.core.GBean) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 9;
      onChanged();;
      return beanValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GList, com.dunkware.net.proto.core.GList.Builder, com.dunkware.net.proto.core.GListOrBuilder> listValueBuilder_;
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public boolean hasListValue() {
      return dataCase_ == 10;
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public com.dunkware.net.proto.core.GList getListValue() {
      if (listValueBuilder_ == null) {
        if (dataCase_ == 10) {
          return (com.dunkware.net.proto.core.GList) data_;
        }
        return com.dunkware.net.proto.core.GList.getDefaultInstance();
      } else {
        if (dataCase_ == 10) {
          return listValueBuilder_.getMessage();
        }
        return com.dunkware.net.proto.core.GList.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public Builder setListValue(com.dunkware.net.proto.core.GList value) {
      if (listValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        listValueBuilder_.setMessage(value);
      }
      dataCase_ = 10;
      return this;
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public Builder setListValue(
        com.dunkware.net.proto.core.GList.Builder builderForValue) {
      if (listValueBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        listValueBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 10;
      return this;
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public Builder mergeListValue(com.dunkware.net.proto.core.GList value) {
      if (listValueBuilder_ == null) {
        if (dataCase_ == 10 &&
            data_ != com.dunkware.net.proto.core.GList.getDefaultInstance()) {
          data_ = com.dunkware.net.proto.core.GList.newBuilder((com.dunkware.net.proto.core.GList) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 10) {
          listValueBuilder_.mergeFrom(value);
        }
        listValueBuilder_.setMessage(value);
      }
      dataCase_ = 10;
      return this;
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public Builder clearListValue() {
      if (listValueBuilder_ == null) {
        if (dataCase_ == 10) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 10) {
          dataCase_ = 0;
          data_ = null;
        }
        listValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public com.dunkware.net.proto.core.GList.Builder getListValueBuilder() {
      return getListValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    public com.dunkware.net.proto.core.GListOrBuilder getListValueOrBuilder() {
      if ((dataCase_ == 10) && (listValueBuilder_ != null)) {
        return listValueBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 10) {
          return (com.dunkware.net.proto.core.GList) data_;
        }
        return com.dunkware.net.proto.core.GList.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GList listValue = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GList, com.dunkware.net.proto.core.GList.Builder, com.dunkware.net.proto.core.GListOrBuilder> 
        getListValueFieldBuilder() {
      if (listValueBuilder_ == null) {
        if (!(dataCase_ == 10)) {
          data_ = com.dunkware.net.proto.core.GList.getDefaultInstance();
        }
        listValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.core.GList, com.dunkware.net.proto.core.GList.Builder, com.dunkware.net.proto.core.GListOrBuilder>(
                (com.dunkware.net.proto.core.GList) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 10;
      onChanged();;
      return listValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GTime, com.dunkware.net.proto.core.GTime.Builder, com.dunkware.net.proto.core.GTimeOrBuilder> timeValueBuilder_;
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public boolean hasTimeValue() {
      return dataCase_ == 12;
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public com.dunkware.net.proto.core.GTime getTimeValue() {
      if (timeValueBuilder_ == null) {
        if (dataCase_ == 12) {
          return (com.dunkware.net.proto.core.GTime) data_;
        }
        return com.dunkware.net.proto.core.GTime.getDefaultInstance();
      } else {
        if (dataCase_ == 12) {
          return timeValueBuilder_.getMessage();
        }
        return com.dunkware.net.proto.core.GTime.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public Builder setTimeValue(com.dunkware.net.proto.core.GTime value) {
      if (timeValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        timeValueBuilder_.setMessage(value);
      }
      dataCase_ = 12;
      return this;
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public Builder setTimeValue(
        com.dunkware.net.proto.core.GTime.Builder builderForValue) {
      if (timeValueBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        timeValueBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 12;
      return this;
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public Builder mergeTimeValue(com.dunkware.net.proto.core.GTime value) {
      if (timeValueBuilder_ == null) {
        if (dataCase_ == 12 &&
            data_ != com.dunkware.net.proto.core.GTime.getDefaultInstance()) {
          data_ = com.dunkware.net.proto.core.GTime.newBuilder((com.dunkware.net.proto.core.GTime) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 12) {
          timeValueBuilder_.mergeFrom(value);
        }
        timeValueBuilder_.setMessage(value);
      }
      dataCase_ = 12;
      return this;
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public Builder clearTimeValue() {
      if (timeValueBuilder_ == null) {
        if (dataCase_ == 12) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 12) {
          dataCase_ = 0;
          data_ = null;
        }
        timeValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public com.dunkware.net.proto.core.GTime.Builder getTimeValueBuilder() {
      return getTimeValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    public com.dunkware.net.proto.core.GTimeOrBuilder getTimeValueOrBuilder() {
      if ((dataCase_ == 12) && (timeValueBuilder_ != null)) {
        return timeValueBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 12) {
          return (com.dunkware.net.proto.core.GTime) data_;
        }
        return com.dunkware.net.proto.core.GTime.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GTime timeValue = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GTime, com.dunkware.net.proto.core.GTime.Builder, com.dunkware.net.proto.core.GTimeOrBuilder> 
        getTimeValueFieldBuilder() {
      if (timeValueBuilder_ == null) {
        if (!(dataCase_ == 12)) {
          data_ = com.dunkware.net.proto.core.GTime.getDefaultInstance();
        }
        timeValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.core.GTime, com.dunkware.net.proto.core.GTime.Builder, com.dunkware.net.proto.core.GTimeOrBuilder>(
                (com.dunkware.net.proto.core.GTime) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 12;
      onChanged();;
      return timeValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GDate, com.dunkware.net.proto.core.GDate.Builder, com.dunkware.net.proto.core.GDateOrBuilder> dateValueBuilder_;
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public boolean hasDateValue() {
      return dataCase_ == 13;
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public com.dunkware.net.proto.core.GDate getDateValue() {
      if (dateValueBuilder_ == null) {
        if (dataCase_ == 13) {
          return (com.dunkware.net.proto.core.GDate) data_;
        }
        return com.dunkware.net.proto.core.GDate.getDefaultInstance();
      } else {
        if (dataCase_ == 13) {
          return dateValueBuilder_.getMessage();
        }
        return com.dunkware.net.proto.core.GDate.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public Builder setDateValue(com.dunkware.net.proto.core.GDate value) {
      if (dateValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        dateValueBuilder_.setMessage(value);
      }
      dataCase_ = 13;
      return this;
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public Builder setDateValue(
        com.dunkware.net.proto.core.GDate.Builder builderForValue) {
      if (dateValueBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        dateValueBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 13;
      return this;
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public Builder mergeDateValue(com.dunkware.net.proto.core.GDate value) {
      if (dateValueBuilder_ == null) {
        if (dataCase_ == 13 &&
            data_ != com.dunkware.net.proto.core.GDate.getDefaultInstance()) {
          data_ = com.dunkware.net.proto.core.GDate.newBuilder((com.dunkware.net.proto.core.GDate) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 13) {
          dateValueBuilder_.mergeFrom(value);
        }
        dateValueBuilder_.setMessage(value);
      }
      dataCase_ = 13;
      return this;
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public Builder clearDateValue() {
      if (dateValueBuilder_ == null) {
        if (dataCase_ == 13) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 13) {
          dataCase_ = 0;
          data_ = null;
        }
        dateValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public com.dunkware.net.proto.core.GDate.Builder getDateValueBuilder() {
      return getDateValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    public com.dunkware.net.proto.core.GDateOrBuilder getDateValueOrBuilder() {
      if ((dataCase_ == 13) && (dateValueBuilder_ != null)) {
        return dateValueBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 13) {
          return (com.dunkware.net.proto.core.GDate) data_;
        }
        return com.dunkware.net.proto.core.GDate.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GDate dateValue = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GDate, com.dunkware.net.proto.core.GDate.Builder, com.dunkware.net.proto.core.GDateOrBuilder> 
        getDateValueFieldBuilder() {
      if (dateValueBuilder_ == null) {
        if (!(dataCase_ == 13)) {
          data_ = com.dunkware.net.proto.core.GDate.getDefaultInstance();
        }
        dateValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.core.GDate, com.dunkware.net.proto.core.GDate.Builder, com.dunkware.net.proto.core.GDateOrBuilder>(
                (com.dunkware.net.proto.core.GDate) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 13;
      onChanged();;
      return dateValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GDateTime, com.dunkware.net.proto.core.GDateTime.Builder, com.dunkware.net.proto.core.GDateTimeOrBuilder> dateTimeValueBuilder_;
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public boolean hasDateTimeValue() {
      return dataCase_ == 14;
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public com.dunkware.net.proto.core.GDateTime getDateTimeValue() {
      if (dateTimeValueBuilder_ == null) {
        if (dataCase_ == 14) {
          return (com.dunkware.net.proto.core.GDateTime) data_;
        }
        return com.dunkware.net.proto.core.GDateTime.getDefaultInstance();
      } else {
        if (dataCase_ == 14) {
          return dateTimeValueBuilder_.getMessage();
        }
        return com.dunkware.net.proto.core.GDateTime.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public Builder setDateTimeValue(com.dunkware.net.proto.core.GDateTime value) {
      if (dateTimeValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        dateTimeValueBuilder_.setMessage(value);
      }
      dataCase_ = 14;
      return this;
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public Builder setDateTimeValue(
        com.dunkware.net.proto.core.GDateTime.Builder builderForValue) {
      if (dateTimeValueBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        dateTimeValueBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 14;
      return this;
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public Builder mergeDateTimeValue(com.dunkware.net.proto.core.GDateTime value) {
      if (dateTimeValueBuilder_ == null) {
        if (dataCase_ == 14 &&
            data_ != com.dunkware.net.proto.core.GDateTime.getDefaultInstance()) {
          data_ = com.dunkware.net.proto.core.GDateTime.newBuilder((com.dunkware.net.proto.core.GDateTime) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 14) {
          dateTimeValueBuilder_.mergeFrom(value);
        }
        dateTimeValueBuilder_.setMessage(value);
      }
      dataCase_ = 14;
      return this;
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public Builder clearDateTimeValue() {
      if (dateTimeValueBuilder_ == null) {
        if (dataCase_ == 14) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 14) {
          dataCase_ = 0;
          data_ = null;
        }
        dateTimeValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public com.dunkware.net.proto.core.GDateTime.Builder getDateTimeValueBuilder() {
      return getDateTimeValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    public com.dunkware.net.proto.core.GDateTimeOrBuilder getDateTimeValueOrBuilder() {
      if ((dataCase_ == 14) && (dateTimeValueBuilder_ != null)) {
        return dateTimeValueBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 14) {
          return (com.dunkware.net.proto.core.GDateTime) data_;
        }
        return com.dunkware.net.proto.core.GDateTime.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GDateTime dateTimeValue = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GDateTime, com.dunkware.net.proto.core.GDateTime.Builder, com.dunkware.net.proto.core.GDateTimeOrBuilder> 
        getDateTimeValueFieldBuilder() {
      if (dateTimeValueBuilder_ == null) {
        if (!(dataCase_ == 14)) {
          data_ = com.dunkware.net.proto.core.GDateTime.getDefaultInstance();
        }
        dateTimeValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.core.GDateTime, com.dunkware.net.proto.core.GDateTime.Builder, com.dunkware.net.proto.core.GDateTimeOrBuilder>(
                (com.dunkware.net.proto.core.GDateTime) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 14;
      onChanged();;
      return dateTimeValueBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GCalendarRange, com.dunkware.net.proto.core.GCalendarRange.Builder, com.dunkware.net.proto.core.GCalendarRangeOrBuilder> calendarRangeValueBuilder_;
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public boolean hasCalendarRangeValue() {
      return dataCase_ == 15;
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public com.dunkware.net.proto.core.GCalendarRange getCalendarRangeValue() {
      if (calendarRangeValueBuilder_ == null) {
        if (dataCase_ == 15) {
          return (com.dunkware.net.proto.core.GCalendarRange) data_;
        }
        return com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance();
      } else {
        if (dataCase_ == 15) {
          return calendarRangeValueBuilder_.getMessage();
        }
        return com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public Builder setCalendarRangeValue(com.dunkware.net.proto.core.GCalendarRange value) {
      if (calendarRangeValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        data_ = value;
        onChanged();
      } else {
        calendarRangeValueBuilder_.setMessage(value);
      }
      dataCase_ = 15;
      return this;
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public Builder setCalendarRangeValue(
        com.dunkware.net.proto.core.GCalendarRange.Builder builderForValue) {
      if (calendarRangeValueBuilder_ == null) {
        data_ = builderForValue.build();
        onChanged();
      } else {
        calendarRangeValueBuilder_.setMessage(builderForValue.build());
      }
      dataCase_ = 15;
      return this;
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public Builder mergeCalendarRangeValue(com.dunkware.net.proto.core.GCalendarRange value) {
      if (calendarRangeValueBuilder_ == null) {
        if (dataCase_ == 15 &&
            data_ != com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance()) {
          data_ = com.dunkware.net.proto.core.GCalendarRange.newBuilder((com.dunkware.net.proto.core.GCalendarRange) data_)
              .mergeFrom(value).buildPartial();
        } else {
          data_ = value;
        }
        onChanged();
      } else {
        if (dataCase_ == 15) {
          calendarRangeValueBuilder_.mergeFrom(value);
        }
        calendarRangeValueBuilder_.setMessage(value);
      }
      dataCase_ = 15;
      return this;
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public Builder clearCalendarRangeValue() {
      if (calendarRangeValueBuilder_ == null) {
        if (dataCase_ == 15) {
          dataCase_ = 0;
          data_ = null;
          onChanged();
        }
      } else {
        if (dataCase_ == 15) {
          dataCase_ = 0;
          data_ = null;
        }
        calendarRangeValueBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public com.dunkware.net.proto.core.GCalendarRange.Builder getCalendarRangeValueBuilder() {
      return getCalendarRangeValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    public com.dunkware.net.proto.core.GCalendarRangeOrBuilder getCalendarRangeValueOrBuilder() {
      if ((dataCase_ == 15) && (calendarRangeValueBuilder_ != null)) {
        return calendarRangeValueBuilder_.getMessageOrBuilder();
      } else {
        if (dataCase_ == 15) {
          return (com.dunkware.net.proto.core.GCalendarRange) data_;
        }
        return com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.core.GCalendarRange calendarRangeValue = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.core.GCalendarRange, com.dunkware.net.proto.core.GCalendarRange.Builder, com.dunkware.net.proto.core.GCalendarRangeOrBuilder> 
        getCalendarRangeValueFieldBuilder() {
      if (calendarRangeValueBuilder_ == null) {
        if (!(dataCase_ == 15)) {
          data_ = com.dunkware.net.proto.core.GCalendarRange.getDefaultInstance();
        }
        calendarRangeValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.core.GCalendarRange, com.dunkware.net.proto.core.GCalendarRange.Builder, com.dunkware.net.proto.core.GCalendarRangeOrBuilder>(
                (com.dunkware.net.proto.core.GCalendarRange) data_,
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      dataCase_ = 15;
      onChanged();;
      return calendarRangeValueBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dunkware.core.GField)
  }

  // @@protoc_insertion_point(class_scope:dunkware.core.GField)
  private static final com.dunkware.net.proto.core.GField DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dunkware.net.proto.core.GField();
  }

  public static com.dunkware.net.proto.core.GField getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GField>
      PARSER = new com.google.protobuf.AbstractParser<GField>() {
    @java.lang.Override
    public GField parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GField(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GField> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GField> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dunkware.net.proto.core.GField getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

