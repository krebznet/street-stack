// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netdata.proto

package com.dunkware.net.proto.data;

/**
 * <pre>
 * Math Operator
 * </pre>
 *
 * Protobuf enum {@code dunkware.data.GOperator}
 */
public enum GOperator
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>GT = 0;</code>
   */
  GT(0),
  /**
   * <code>GTE = 1;</code>
   */
  GTE(1),
  /**
   * <code>LT = 2;</code>
   */
  LT(2),
  /**
   * <code>LTE = 3;</code>
   */
  LTE(3),
  /**
   * <code>EQ = 4;</code>
   */
  EQ(4),
  /**
   * <code>NQ = 5;</code>
   */
  NQ(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>GT = 0;</code>
   */
  public static final int GT_VALUE = 0;
  /**
   * <code>GTE = 1;</code>
   */
  public static final int GTE_VALUE = 1;
  /**
   * <code>LT = 2;</code>
   */
  public static final int LT_VALUE = 2;
  /**
   * <code>LTE = 3;</code>
   */
  public static final int LTE_VALUE = 3;
  /**
   * <code>EQ = 4;</code>
   */
  public static final int EQ_VALUE = 4;
  /**
   * <code>NQ = 5;</code>
   */
  public static final int NQ_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static GOperator valueOf(int value) {
    return forNumber(value);
  }

  public static GOperator forNumber(int value) {
    switch (value) {
      case 0: return GT;
      case 1: return GTE;
      case 2: return LT;
      case 3: return LTE;
      case 4: return EQ;
      case 5: return NQ;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GOperator>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GOperator> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GOperator>() {
          public GOperator findValueByNumber(int number) {
            return GOperator.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dunkware.net.proto.data.GDataProto.getDescriptor().getEnumTypes().get(4);
  }

  private static final GOperator[] VALUES = values();

  public static GOperator valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GOperator(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dunkware.data.GOperator)
}

