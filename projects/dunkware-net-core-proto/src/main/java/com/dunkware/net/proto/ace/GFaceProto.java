// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: face.proto

package com.dunkware.net.proto.ace;

public final class GFaceProto {
  private GFaceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dunkware_face_GGridConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dunkware_face_GGridConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dunkware_face_GGridColumn_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dunkware_face_GGridColumn_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nface.proto\022\rdunkware.face\"I\n\013GGridConf" +
      "ig\022\r\n\005ident\030\001 \001(\t\022+\n\007columns\030\002 \003(\0132\032.dun" +
      "kware.face.GGridColumn\"*\n\013GGridColumn\022\r\n" +
      "\005field\030\001 \001(\t\022\014\n\004name\030\002 \001(\t*%\n\016GGridField" +
      "Type\022\n\n\006STRING\020\000\022\007\n\003INT\020\001B*\n\032com.dunkwar" +
      "e.net.proto.aceB\nGFaceProtoP\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_dunkware_face_GGridConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dunkware_face_GGridConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dunkware_face_GGridConfig_descriptor,
        new java.lang.String[] { "Ident", "Columns", });
    internal_static_dunkware_face_GGridColumn_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dunkware_face_GGridColumn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dunkware_face_GGridColumn_descriptor,
        new java.lang.String[] { "Field", "Name", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
