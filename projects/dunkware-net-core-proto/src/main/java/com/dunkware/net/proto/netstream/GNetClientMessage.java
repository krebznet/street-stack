// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netstream.proto

package com.dunkware.net.proto.netstream;

/**
 * Protobuf type {@code dunkware.netstream.GNetClientMessage}
 */
public  final class GNetClientMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dunkware.netstream.GNetClientMessage)
    GNetClientMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GNetClientMessage.newBuilder() to construct.
  private GNetClientMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GNetClientMessage() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GNetClientMessage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.Builder subBuilder = null;
            if (typeCase_ == 1) {
              subBuilder = ((com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_).toBuilder();
            }
            type_ =
                input.readMessage(com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 1;
            break;
          }
          case 18: {
            com.dunkware.net.proto.netstream.GNetTimeUpdateAck.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_).toBuilder();
            }
            type_ =
                input.readMessage(com.dunkware.net.proto.netstream.GNetTimeUpdateAck.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
          case 26: {
            com.dunkware.net.proto.netstream.GNetScannerStopRequest.Builder subBuilder = null;
            if (typeCase_ == 3) {
              subBuilder = ((com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_).toBuilder();
            }
            type_ =
                input.readMessage(com.dunkware.net.proto.netstream.GNetScannerStopRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 3;
            break;
          }
          case 34: {
            com.dunkware.net.proto.netstream.GNetClientConnect.Builder subBuilder = null;
            if (typeCase_ == 4) {
              subBuilder = ((com.dunkware.net.proto.netstream.GNetClientConnect) type_).toBuilder();
            }
            type_ =
                input.readMessage(com.dunkware.net.proto.netstream.GNetClientConnect.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.netstream.GNetClientConnect) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 4;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dunkware.net.proto.netstream.GNetStreamProto.internal_static_dunkware_netstream_GNetClientMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dunkware.net.proto.netstream.GNetStreamProto.internal_static_dunkware_netstream_GNetClientMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dunkware.net.proto.netstream.GNetClientMessage.class, com.dunkware.net.proto.netstream.GNetClientMessage.Builder.class);
  }

  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    CONNECT(4),
    SCANNERSTART(1),
    TIMEUPDATEACK(2),
    SCANNERSTOP(3),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 4: return CONNECT;
        case 1: return SCANNERSTART;
        case 2: return TIMEUPDATEACK;
        case 3: return SCANNERSTOP;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int CONNECT_FIELD_NUMBER = 4;
  /**
   * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
   */
  public boolean hasConnect() {
    return typeCase_ == 4;
  }
  /**
   * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
   */
  public com.dunkware.net.proto.netstream.GNetClientConnect getConnect() {
    if (typeCase_ == 4) {
       return (com.dunkware.net.proto.netstream.GNetClientConnect) type_;
    }
    return com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance();
  }
  /**
   * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
   */
  public com.dunkware.net.proto.netstream.GNetClientConnectOrBuilder getConnectOrBuilder() {
    if (typeCase_ == 4) {
       return (com.dunkware.net.proto.netstream.GNetClientConnect) type_;
    }
    return com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance();
  }

  public static final int SCANNERSTART_FIELD_NUMBER = 1;
  /**
   * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
   */
  public boolean hasScannerStart() {
    return typeCase_ == 1;
  }
  /**
   * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
   */
  public com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest getScannerStart() {
    if (typeCase_ == 1) {
       return (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_;
    }
    return com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance();
  }
  /**
   * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
   */
  public com.dunkware.net.proto.netstream.GNetEntityScannerStartRequestOrBuilder getScannerStartOrBuilder() {
    if (typeCase_ == 1) {
       return (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_;
    }
    return com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance();
  }

  public static final int TIMEUPDATEACK_FIELD_NUMBER = 2;
  /**
   * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
   */
  public boolean hasTimeUpdateAck() {
    return typeCase_ == 2;
  }
  /**
   * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
   */
  public com.dunkware.net.proto.netstream.GNetTimeUpdateAck getTimeUpdateAck() {
    if (typeCase_ == 2) {
       return (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_;
    }
    return com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance();
  }
  /**
   * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
   */
  public com.dunkware.net.proto.netstream.GNetTimeUpdateAckOrBuilder getTimeUpdateAckOrBuilder() {
    if (typeCase_ == 2) {
       return (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_;
    }
    return com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance();
  }

  public static final int SCANNERSTOP_FIELD_NUMBER = 3;
  /**
   * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
   */
  public boolean hasScannerStop() {
    return typeCase_ == 3;
  }
  /**
   * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
   */
  public com.dunkware.net.proto.netstream.GNetScannerStopRequest getScannerStop() {
    if (typeCase_ == 3) {
       return (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_;
    }
    return com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance();
  }
  /**
   * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
   */
  public com.dunkware.net.proto.netstream.GNetScannerStopRequestOrBuilder getScannerStopOrBuilder() {
    if (typeCase_ == 3) {
       return (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_;
    }
    return com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeCase_ == 1) {
      output.writeMessage(1, (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_);
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_);
    }
    if (typeCase_ == 3) {
      output.writeMessage(3, (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_);
    }
    if (typeCase_ == 4) {
      output.writeMessage(4, (com.dunkware.net.proto.netstream.GNetClientConnect) type_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_);
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_);
    }
    if (typeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_);
    }
    if (typeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.dunkware.net.proto.netstream.GNetClientConnect) type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dunkware.net.proto.netstream.GNetClientMessage)) {
      return super.equals(obj);
    }
    com.dunkware.net.proto.netstream.GNetClientMessage other = (com.dunkware.net.proto.netstream.GNetClientMessage) obj;

    boolean result = true;
    result = result && getTypeCase().equals(
        other.getTypeCase());
    if (!result) return false;
    switch (typeCase_) {
      case 4:
        result = result && getConnect()
            .equals(other.getConnect());
        break;
      case 1:
        result = result && getScannerStart()
            .equals(other.getScannerStart());
        break;
      case 2:
        result = result && getTimeUpdateAck()
            .equals(other.getTimeUpdateAck());
        break;
      case 3:
        result = result && getScannerStop()
            .equals(other.getScannerStop());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (typeCase_) {
      case 4:
        hash = (37 * hash) + CONNECT_FIELD_NUMBER;
        hash = (53 * hash) + getConnect().hashCode();
        break;
      case 1:
        hash = (37 * hash) + SCANNERSTART_FIELD_NUMBER;
        hash = (53 * hash) + getScannerStart().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TIMEUPDATEACK_FIELD_NUMBER;
        hash = (53 * hash) + getTimeUpdateAck().hashCode();
        break;
      case 3:
        hash = (37 * hash) + SCANNERSTOP_FIELD_NUMBER;
        hash = (53 * hash) + getScannerStop().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.netstream.GNetClientMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dunkware.net.proto.netstream.GNetClientMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dunkware.netstream.GNetClientMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dunkware.netstream.GNetClientMessage)
      com.dunkware.net.proto.netstream.GNetClientMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dunkware.net.proto.netstream.GNetStreamProto.internal_static_dunkware_netstream_GNetClientMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dunkware.net.proto.netstream.GNetStreamProto.internal_static_dunkware_netstream_GNetClientMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dunkware.net.proto.netstream.GNetClientMessage.class, com.dunkware.net.proto.netstream.GNetClientMessage.Builder.class);
    }

    // Construct using com.dunkware.net.proto.netstream.GNetClientMessage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dunkware.net.proto.netstream.GNetStreamProto.internal_static_dunkware_netstream_GNetClientMessage_descriptor;
    }

    @java.lang.Override
    public com.dunkware.net.proto.netstream.GNetClientMessage getDefaultInstanceForType() {
      return com.dunkware.net.proto.netstream.GNetClientMessage.getDefaultInstance();
    }

    @java.lang.Override
    public com.dunkware.net.proto.netstream.GNetClientMessage build() {
      com.dunkware.net.proto.netstream.GNetClientMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dunkware.net.proto.netstream.GNetClientMessage buildPartial() {
      com.dunkware.net.proto.netstream.GNetClientMessage result = new com.dunkware.net.proto.netstream.GNetClientMessage(this);
      if (typeCase_ == 4) {
        if (connectBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = connectBuilder_.build();
        }
      }
      if (typeCase_ == 1) {
        if (scannerStartBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = scannerStartBuilder_.build();
        }
      }
      if (typeCase_ == 2) {
        if (timeUpdateAckBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = timeUpdateAckBuilder_.build();
        }
      }
      if (typeCase_ == 3) {
        if (scannerStopBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = scannerStopBuilder_.build();
        }
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dunkware.net.proto.netstream.GNetClientMessage) {
        return mergeFrom((com.dunkware.net.proto.netstream.GNetClientMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dunkware.net.proto.netstream.GNetClientMessage other) {
      if (other == com.dunkware.net.proto.netstream.GNetClientMessage.getDefaultInstance()) return this;
      switch (other.getTypeCase()) {
        case CONNECT: {
          mergeConnect(other.getConnect());
          break;
        }
        case SCANNERSTART: {
          mergeScannerStart(other.getScannerStart());
          break;
        }
        case TIMEUPDATEACK: {
          mergeTimeUpdateAck(other.getTimeUpdateAck());
          break;
        }
        case SCANNERSTOP: {
          mergeScannerStop(other.getScannerStop());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dunkware.net.proto.netstream.GNetClientMessage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dunkware.net.proto.netstream.GNetClientMessage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetClientConnect, com.dunkware.net.proto.netstream.GNetClientConnect.Builder, com.dunkware.net.proto.netstream.GNetClientConnectOrBuilder> connectBuilder_;
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public boolean hasConnect() {
      return typeCase_ == 4;
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public com.dunkware.net.proto.netstream.GNetClientConnect getConnect() {
      if (connectBuilder_ == null) {
        if (typeCase_ == 4) {
          return (com.dunkware.net.proto.netstream.GNetClientConnect) type_;
        }
        return com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance();
      } else {
        if (typeCase_ == 4) {
          return connectBuilder_.getMessage();
        }
        return com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public Builder setConnect(com.dunkware.net.proto.netstream.GNetClientConnect value) {
      if (connectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        connectBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public Builder setConnect(
        com.dunkware.net.proto.netstream.GNetClientConnect.Builder builderForValue) {
      if (connectBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        connectBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public Builder mergeConnect(com.dunkware.net.proto.netstream.GNetClientConnect value) {
      if (connectBuilder_ == null) {
        if (typeCase_ == 4 &&
            type_ != com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance()) {
          type_ = com.dunkware.net.proto.netstream.GNetClientConnect.newBuilder((com.dunkware.net.proto.netstream.GNetClientConnect) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 4) {
          connectBuilder_.mergeFrom(value);
        }
        connectBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public Builder clearConnect() {
      if (connectBuilder_ == null) {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
        }
        connectBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public com.dunkware.net.proto.netstream.GNetClientConnect.Builder getConnectBuilder() {
      return getConnectFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    public com.dunkware.net.proto.netstream.GNetClientConnectOrBuilder getConnectOrBuilder() {
      if ((typeCase_ == 4) && (connectBuilder_ != null)) {
        return connectBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 4) {
          return (com.dunkware.net.proto.netstream.GNetClientConnect) type_;
        }
        return com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetClientConnect connect = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetClientConnect, com.dunkware.net.proto.netstream.GNetClientConnect.Builder, com.dunkware.net.proto.netstream.GNetClientConnectOrBuilder> 
        getConnectFieldBuilder() {
      if (connectBuilder_ == null) {
        if (!(typeCase_ == 4)) {
          type_ = com.dunkware.net.proto.netstream.GNetClientConnect.getDefaultInstance();
        }
        connectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.netstream.GNetClientConnect, com.dunkware.net.proto.netstream.GNetClientConnect.Builder, com.dunkware.net.proto.netstream.GNetClientConnectOrBuilder>(
                (com.dunkware.net.proto.netstream.GNetClientConnect) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 4;
      onChanged();;
      return connectBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest, com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.Builder, com.dunkware.net.proto.netstream.GNetEntityScannerStartRequestOrBuilder> scannerStartBuilder_;
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public boolean hasScannerStart() {
      return typeCase_ == 1;
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest getScannerStart() {
      if (scannerStartBuilder_ == null) {
        if (typeCase_ == 1) {
          return (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_;
        }
        return com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance();
      } else {
        if (typeCase_ == 1) {
          return scannerStartBuilder_.getMessage();
        }
        return com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public Builder setScannerStart(com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest value) {
      if (scannerStartBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        scannerStartBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public Builder setScannerStart(
        com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.Builder builderForValue) {
      if (scannerStartBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        scannerStartBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public Builder mergeScannerStart(com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest value) {
      if (scannerStartBuilder_ == null) {
        if (typeCase_ == 1 &&
            type_ != com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance()) {
          type_ = com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.newBuilder((com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 1) {
          scannerStartBuilder_.mergeFrom(value);
        }
        scannerStartBuilder_.setMessage(value);
      }
      typeCase_ = 1;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public Builder clearScannerStart() {
      if (scannerStartBuilder_ == null) {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 1) {
          typeCase_ = 0;
          type_ = null;
        }
        scannerStartBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.Builder getScannerStartBuilder() {
      return getScannerStartFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    public com.dunkware.net.proto.netstream.GNetEntityScannerStartRequestOrBuilder getScannerStartOrBuilder() {
      if ((typeCase_ == 1) && (scannerStartBuilder_ != null)) {
        return scannerStartBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 1) {
          return (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_;
        }
        return com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetEntityScannerStartRequest scannerStart = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest, com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.Builder, com.dunkware.net.proto.netstream.GNetEntityScannerStartRequestOrBuilder> 
        getScannerStartFieldBuilder() {
      if (scannerStartBuilder_ == null) {
        if (!(typeCase_ == 1)) {
          type_ = com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.getDefaultInstance();
        }
        scannerStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest, com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest.Builder, com.dunkware.net.proto.netstream.GNetEntityScannerStartRequestOrBuilder>(
                (com.dunkware.net.proto.netstream.GNetEntityScannerStartRequest) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 1;
      onChanged();;
      return scannerStartBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetTimeUpdateAck, com.dunkware.net.proto.netstream.GNetTimeUpdateAck.Builder, com.dunkware.net.proto.netstream.GNetTimeUpdateAckOrBuilder> timeUpdateAckBuilder_;
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public boolean hasTimeUpdateAck() {
      return typeCase_ == 2;
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public com.dunkware.net.proto.netstream.GNetTimeUpdateAck getTimeUpdateAck() {
      if (timeUpdateAckBuilder_ == null) {
        if (typeCase_ == 2) {
          return (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_;
        }
        return com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return timeUpdateAckBuilder_.getMessage();
        }
        return com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public Builder setTimeUpdateAck(com.dunkware.net.proto.netstream.GNetTimeUpdateAck value) {
      if (timeUpdateAckBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        timeUpdateAckBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public Builder setTimeUpdateAck(
        com.dunkware.net.proto.netstream.GNetTimeUpdateAck.Builder builderForValue) {
      if (timeUpdateAckBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        timeUpdateAckBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public Builder mergeTimeUpdateAck(com.dunkware.net.proto.netstream.GNetTimeUpdateAck value) {
      if (timeUpdateAckBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance()) {
          type_ = com.dunkware.net.proto.netstream.GNetTimeUpdateAck.newBuilder((com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          timeUpdateAckBuilder_.mergeFrom(value);
        }
        timeUpdateAckBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public Builder clearTimeUpdateAck() {
      if (timeUpdateAckBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        timeUpdateAckBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public com.dunkware.net.proto.netstream.GNetTimeUpdateAck.Builder getTimeUpdateAckBuilder() {
      return getTimeUpdateAckFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    public com.dunkware.net.proto.netstream.GNetTimeUpdateAckOrBuilder getTimeUpdateAckOrBuilder() {
      if ((typeCase_ == 2) && (timeUpdateAckBuilder_ != null)) {
        return timeUpdateAckBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_;
        }
        return com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetTimeUpdateAck timeUpdateAck = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetTimeUpdateAck, com.dunkware.net.proto.netstream.GNetTimeUpdateAck.Builder, com.dunkware.net.proto.netstream.GNetTimeUpdateAckOrBuilder> 
        getTimeUpdateAckFieldBuilder() {
      if (timeUpdateAckBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = com.dunkware.net.proto.netstream.GNetTimeUpdateAck.getDefaultInstance();
        }
        timeUpdateAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.netstream.GNetTimeUpdateAck, com.dunkware.net.proto.netstream.GNetTimeUpdateAck.Builder, com.dunkware.net.proto.netstream.GNetTimeUpdateAckOrBuilder>(
                (com.dunkware.net.proto.netstream.GNetTimeUpdateAck) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();;
      return timeUpdateAckBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetScannerStopRequest, com.dunkware.net.proto.netstream.GNetScannerStopRequest.Builder, com.dunkware.net.proto.netstream.GNetScannerStopRequestOrBuilder> scannerStopBuilder_;
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public boolean hasScannerStop() {
      return typeCase_ == 3;
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public com.dunkware.net.proto.netstream.GNetScannerStopRequest getScannerStop() {
      if (scannerStopBuilder_ == null) {
        if (typeCase_ == 3) {
          return (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_;
        }
        return com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance();
      } else {
        if (typeCase_ == 3) {
          return scannerStopBuilder_.getMessage();
        }
        return com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public Builder setScannerStop(com.dunkware.net.proto.netstream.GNetScannerStopRequest value) {
      if (scannerStopBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        scannerStopBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public Builder setScannerStop(
        com.dunkware.net.proto.netstream.GNetScannerStopRequest.Builder builderForValue) {
      if (scannerStopBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        scannerStopBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public Builder mergeScannerStop(com.dunkware.net.proto.netstream.GNetScannerStopRequest value) {
      if (scannerStopBuilder_ == null) {
        if (typeCase_ == 3 &&
            type_ != com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance()) {
          type_ = com.dunkware.net.proto.netstream.GNetScannerStopRequest.newBuilder((com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3) {
          scannerStopBuilder_.mergeFrom(value);
        }
        scannerStopBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public Builder clearScannerStop() {
      if (scannerStopBuilder_ == null) {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
        }
        scannerStopBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public com.dunkware.net.proto.netstream.GNetScannerStopRequest.Builder getScannerStopBuilder() {
      return getScannerStopFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    public com.dunkware.net.proto.netstream.GNetScannerStopRequestOrBuilder getScannerStopOrBuilder() {
      if ((typeCase_ == 3) && (scannerStopBuilder_ != null)) {
        return scannerStopBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3) {
          return (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_;
        }
        return com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.netstream.GNetScannerStopRequest scannerStop = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.netstream.GNetScannerStopRequest, com.dunkware.net.proto.netstream.GNetScannerStopRequest.Builder, com.dunkware.net.proto.netstream.GNetScannerStopRequestOrBuilder> 
        getScannerStopFieldBuilder() {
      if (scannerStopBuilder_ == null) {
        if (!(typeCase_ == 3)) {
          type_ = com.dunkware.net.proto.netstream.GNetScannerStopRequest.getDefaultInstance();
        }
        scannerStopBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.netstream.GNetScannerStopRequest, com.dunkware.net.proto.netstream.GNetScannerStopRequest.Builder, com.dunkware.net.proto.netstream.GNetScannerStopRequestOrBuilder>(
                (com.dunkware.net.proto.netstream.GNetScannerStopRequest) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3;
      onChanged();;
      return scannerStopBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dunkware.netstream.GNetClientMessage)
  }

  // @@protoc_insertion_point(class_scope:dunkware.netstream.GNetClientMessage)
  private static final com.dunkware.net.proto.netstream.GNetClientMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dunkware.net.proto.netstream.GNetClientMessage();
  }

  public static com.dunkware.net.proto.netstream.GNetClientMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GNetClientMessage>
      PARSER = new com.google.protobuf.AbstractParser<GNetClientMessage>() {
    @java.lang.Override
    public GNetClientMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GNetClientMessage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GNetClientMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GNetClientMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dunkware.net.proto.netstream.GNetClientMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

