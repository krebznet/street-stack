// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.dunkware.net.proto.message;

/**
 * Protobuf enum {@code dunkware.net.message.GMessageType}
 */
public enum GMessageType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CHANNEL_REQUEST = 0;</code>
   */
  CHANNEL_REQUEST(0),
  /**
   * <code>CHANNEL_RESPONSE = 1;</code>
   */
  CHANNEL_RESPONSE(1),
  /**
   * <code>SERVICE_REQUEST = 2;</code>
   */
  SERVICE_REQUEST(2),
  /**
   * <code>SERVICE_RESPONSE = 3;</code>
   */
  SERVICE_RESPONSE(3),
  /**
   * <code>CHANNEL_MESSAGE = 4;</code>
   */
  CHANNEL_MESSAGE(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CHANNEL_REQUEST = 0;</code>
   */
  public static final int CHANNEL_REQUEST_VALUE = 0;
  /**
   * <code>CHANNEL_RESPONSE = 1;</code>
   */
  public static final int CHANNEL_RESPONSE_VALUE = 1;
  /**
   * <code>SERVICE_REQUEST = 2;</code>
   */
  public static final int SERVICE_REQUEST_VALUE = 2;
  /**
   * <code>SERVICE_RESPONSE = 3;</code>
   */
  public static final int SERVICE_RESPONSE_VALUE = 3;
  /**
   * <code>CHANNEL_MESSAGE = 4;</code>
   */
  public static final int CHANNEL_MESSAGE_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static GMessageType valueOf(int value) {
    return forNumber(value);
  }

  public static GMessageType forNumber(int value) {
    switch (value) {
      case 0: return CHANNEL_REQUEST;
      case 1: return CHANNEL_RESPONSE;
      case 2: return SERVICE_REQUEST;
      case 3: return SERVICE_RESPONSE;
      case 4: return CHANNEL_MESSAGE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GMessageType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GMessageType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GMessageType>() {
          public GMessageType findValueByNumber(int number) {
            return GMessageType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dunkware.net.proto.message.GMessageProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final GMessageType[] VALUES = values();

  public static GMessageType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GMessageType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dunkware.net.message.GMessageType)
}

