// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chart.proto

package com.dunkware.net.proto.chart;

public interface GridOrBuilder extends
    // @@protoc_insertion_point(interface_extends:dunkware.chart.Grid)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * numeric id of the grid 
   * </pre>
   *
   * <code>int32 gridId = 1;</code>
   */
  int getGridId();

  /**
   * <pre>
   ** required list of GridColumn that the client side will iterate
   *and create column in the columnDefs array *
   * </pre>
   *
   * <code>repeated .dunkware.chart.GridColumn columns = 2;</code>
   */
  java.util.List<com.dunkware.net.proto.chart.GridColumn> 
      getColumnsList();
  /**
   * <pre>
   ** required list of GridColumn that the client side will iterate
   *and create column in the columnDefs array *
   * </pre>
   *
   * <code>repeated .dunkware.chart.GridColumn columns = 2;</code>
   */
  com.dunkware.net.proto.chart.GridColumn getColumns(int index);
  /**
   * <pre>
   ** required list of GridColumn that the client side will iterate
   *and create column in the columnDefs array *
   * </pre>
   *
   * <code>repeated .dunkware.chart.GridColumn columns = 2;</code>
   */
  int getColumnsCount();
  /**
   * <pre>
   ** required list of GridColumn that the client side will iterate
   *and create column in the columnDefs array *
   * </pre>
   *
   * <code>repeated .dunkware.chart.GridColumn columns = 2;</code>
   */
  java.util.List<? extends com.dunkware.net.proto.chart.GridColumnOrBuilder> 
      getColumnsOrBuilderList();
  /**
   * <pre>
   ** required list of GridColumn that the client side will iterate
   *and create column in the columnDefs array *
   * </pre>
   *
   * <code>repeated .dunkware.chart.GridColumn columns = 2;</code>
   */
  com.dunkware.net.proto.chart.GridColumnOrBuilder getColumnsOrBuilder(
      int index);

  /**
   * <pre>
   * Initial data set that will always be set regardless of static or streaming grid 
   * </pre>
   *
   * <code>string data = 3;</code>
   */
  java.lang.String getData();
  /**
   * <pre>
   * Initial data set that will always be set regardless of static or streaming grid 
   * </pre>
   *
   * <code>string data = 3;</code>
   */
  com.google.protobuf.ByteString
      getDataBytes();

  /**
   * <pre>
   ** Indicates if this is a streaming Grid, if true then a call is made
   *to get getGridDescription sending the id of the grid using GetGridSubscriptionRequest 
   * </pre>
   *
   * <code>bool streaming = 4;</code>
   */
  boolean getStreaming();

  /**
   * <pre>
   * Sets the pivot flag on the grid options to toggle visibility 
   * </pre>
   *
   * <code>bool pivot = 5;</code>
   */
  boolean getPivot();

  /**
   * <pre>
   * If streaming grid then we specify what attribute to sue as rowNodeId 
   * </pre>
   *
   * <code>string rowNodeId = 6;</code>
   */
  java.lang.String getRowNodeId();
  /**
   * <pre>
   * If streaming grid then we specify what attribute to sue as rowNodeId 
   * </pre>
   *
   * <code>string rowNodeId = 6;</code>
   */
  com.google.protobuf.ByteString
      getRowNodeIdBytes();

  /**
   * <pre>
   * optional if set to tru pagination will be used 
   * </pre>
   *
   * <code>bool pagination = 7;</code>
   */
  boolean getPagination();

  /**
   * <pre>
   * if pagination is set to true then we set the data size per row 
   * </pre>
   *
   * <code>int32 paginationPageSize = 8;</code>
   */
  int getPaginationPageSize();
}
