// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netdata.proto

package com.dunkware.net.proto.data;

/**
 * <pre>
 * Calendar Range Defining a start/stop time range
 * </pre>
 *
 * Protobuf type {@code dunkware.data.GCalendarRange}
 */
public  final class GCalendarRange extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dunkware.data.GCalendarRange)
    GCalendarRangeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GCalendarRange.newBuilder() to construct.
  private GCalendarRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GCalendarRange() {
    type_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GCalendarRange(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 18: {
            com.dunkware.net.proto.data.GTimeRange.Builder subBuilder = null;
            if (rangeCase_ == 2) {
              subBuilder = ((com.dunkware.net.proto.data.GTimeRange) range_).toBuilder();
            }
            range_ =
                input.readMessage(com.dunkware.net.proto.data.GTimeRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.data.GTimeRange) range_);
              range_ = subBuilder.buildPartial();
            }
            rangeCase_ = 2;
            break;
          }
          case 26: {
            com.dunkware.net.proto.data.GDateTimeRange.Builder subBuilder = null;
            if (rangeCase_ == 3) {
              subBuilder = ((com.dunkware.net.proto.data.GDateTimeRange) range_).toBuilder();
            }
            range_ =
                input.readMessage(com.dunkware.net.proto.data.GDateTimeRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.data.GDateTimeRange) range_);
              range_ = subBuilder.buildPartial();
            }
            rangeCase_ = 3;
            break;
          }
          case 34: {
            com.dunkware.net.proto.data.GDateRange.Builder subBuilder = null;
            if (rangeCase_ == 4) {
              subBuilder = ((com.dunkware.net.proto.data.GDateRange) range_).toBuilder();
            }
            range_ =
                input.readMessage(com.dunkware.net.proto.data.GDateRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.data.GDateRange) range_);
              range_ = subBuilder.buildPartial();
            }
            rangeCase_ = 4;
            break;
          }
          case 42: {
            com.dunkware.net.proto.data.GDurationRange.Builder subBuilder = null;
            if (rangeCase_ == 5) {
              subBuilder = ((com.dunkware.net.proto.data.GDurationRange) range_).toBuilder();
            }
            range_ =
                input.readMessage(com.dunkware.net.proto.data.GDurationRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.dunkware.net.proto.data.GDurationRange) range_);
              range_ = subBuilder.buildPartial();
            }
            rangeCase_ = 5;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GCalendarRange_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GCalendarRange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dunkware.net.proto.data.GCalendarRange.class, com.dunkware.net.proto.data.GCalendarRange.Builder.class);
  }

  private int rangeCase_ = 0;
  private java.lang.Object range_;
  public enum RangeCase
      implements com.google.protobuf.Internal.EnumLite {
    TIMERANGE(2),
    DATETIMERANGE(3),
    DATERANGE(4),
    DURATIONRANGE(5),
    RANGE_NOT_SET(0);
    private final int value;
    private RangeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RangeCase valueOf(int value) {
      return forNumber(value);
    }

    public static RangeCase forNumber(int value) {
      switch (value) {
        case 2: return TIMERANGE;
        case 3: return DATETIMERANGE;
        case 4: return DATERANGE;
        case 5: return DURATIONRANGE;
        case 0: return RANGE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RangeCase
  getRangeCase() {
    return RangeCase.forNumber(
        rangeCase_);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
   */
  public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
   */
  public com.dunkware.net.proto.data.GCalendarRangeType getType() {
    @SuppressWarnings("deprecation")
    com.dunkware.net.proto.data.GCalendarRangeType result = com.dunkware.net.proto.data.GCalendarRangeType.valueOf(type_);
    return result == null ? com.dunkware.net.proto.data.GCalendarRangeType.UNRECOGNIZED : result;
  }

  public static final int TIMERANGE_FIELD_NUMBER = 2;
  /**
   * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
   */
  public boolean hasTimeRange() {
    return rangeCase_ == 2;
  }
  /**
   * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
   */
  public com.dunkware.net.proto.data.GTimeRange getTimeRange() {
    if (rangeCase_ == 2) {
       return (com.dunkware.net.proto.data.GTimeRange) range_;
    }
    return com.dunkware.net.proto.data.GTimeRange.getDefaultInstance();
  }
  /**
   * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
   */
  public com.dunkware.net.proto.data.GTimeRangeOrBuilder getTimeRangeOrBuilder() {
    if (rangeCase_ == 2) {
       return (com.dunkware.net.proto.data.GTimeRange) range_;
    }
    return com.dunkware.net.proto.data.GTimeRange.getDefaultInstance();
  }

  public static final int DATETIMERANGE_FIELD_NUMBER = 3;
  /**
   * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
   */
  public boolean hasDateTimeRange() {
    return rangeCase_ == 3;
  }
  /**
   * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
   */
  public com.dunkware.net.proto.data.GDateTimeRange getDateTimeRange() {
    if (rangeCase_ == 3) {
       return (com.dunkware.net.proto.data.GDateTimeRange) range_;
    }
    return com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance();
  }
  /**
   * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
   */
  public com.dunkware.net.proto.data.GDateTimeRangeOrBuilder getDateTimeRangeOrBuilder() {
    if (rangeCase_ == 3) {
       return (com.dunkware.net.proto.data.GDateTimeRange) range_;
    }
    return com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance();
  }

  public static final int DATERANGE_FIELD_NUMBER = 4;
  /**
   * <code>.dunkware.data.GDateRange dateRange = 4;</code>
   */
  public boolean hasDateRange() {
    return rangeCase_ == 4;
  }
  /**
   * <code>.dunkware.data.GDateRange dateRange = 4;</code>
   */
  public com.dunkware.net.proto.data.GDateRange getDateRange() {
    if (rangeCase_ == 4) {
       return (com.dunkware.net.proto.data.GDateRange) range_;
    }
    return com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
  }
  /**
   * <code>.dunkware.data.GDateRange dateRange = 4;</code>
   */
  public com.dunkware.net.proto.data.GDateRangeOrBuilder getDateRangeOrBuilder() {
    if (rangeCase_ == 4) {
       return (com.dunkware.net.proto.data.GDateRange) range_;
    }
    return com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
  }

  public static final int DURATIONRANGE_FIELD_NUMBER = 5;
  /**
   * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
   */
  public boolean hasDurationRange() {
    return rangeCase_ == 5;
  }
  /**
   * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
   */
  public com.dunkware.net.proto.data.GDurationRange getDurationRange() {
    if (rangeCase_ == 5) {
       return (com.dunkware.net.proto.data.GDurationRange) range_;
    }
    return com.dunkware.net.proto.data.GDurationRange.getDefaultInstance();
  }
  /**
   * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
   */
  public com.dunkware.net.proto.data.GDurationRangeOrBuilder getDurationRangeOrBuilder() {
    if (rangeCase_ == 5) {
       return (com.dunkware.net.proto.data.GDurationRange) range_;
    }
    return com.dunkware.net.proto.data.GDurationRange.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != com.dunkware.net.proto.data.GCalendarRangeType.DATE_RANGE.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (rangeCase_ == 2) {
      output.writeMessage(2, (com.dunkware.net.proto.data.GTimeRange) range_);
    }
    if (rangeCase_ == 3) {
      output.writeMessage(3, (com.dunkware.net.proto.data.GDateTimeRange) range_);
    }
    if (rangeCase_ == 4) {
      output.writeMessage(4, (com.dunkware.net.proto.data.GDateRange) range_);
    }
    if (rangeCase_ == 5) {
      output.writeMessage(5, (com.dunkware.net.proto.data.GDurationRange) range_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != com.dunkware.net.proto.data.GCalendarRangeType.DATE_RANGE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (rangeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.dunkware.net.proto.data.GTimeRange) range_);
    }
    if (rangeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.dunkware.net.proto.data.GDateTimeRange) range_);
    }
    if (rangeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.dunkware.net.proto.data.GDateRange) range_);
    }
    if (rangeCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.dunkware.net.proto.data.GDurationRange) range_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dunkware.net.proto.data.GCalendarRange)) {
      return super.equals(obj);
    }
    com.dunkware.net.proto.data.GCalendarRange other = (com.dunkware.net.proto.data.GCalendarRange) obj;

    boolean result = true;
    result = result && type_ == other.type_;
    result = result && getRangeCase().equals(
        other.getRangeCase());
    if (!result) return false;
    switch (rangeCase_) {
      case 2:
        result = result && getTimeRange()
            .equals(other.getTimeRange());
        break;
      case 3:
        result = result && getDateTimeRange()
            .equals(other.getDateTimeRange());
        break;
      case 4:
        result = result && getDateRange()
            .equals(other.getDateRange());
        break;
      case 5:
        result = result && getDurationRange()
            .equals(other.getDurationRange());
        break;
      case 0:
      default:
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    switch (rangeCase_) {
      case 2:
        hash = (37 * hash) + TIMERANGE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeRange().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DATETIMERANGE_FIELD_NUMBER;
        hash = (53 * hash) + getDateTimeRange().hashCode();
        break;
      case 4:
        hash = (37 * hash) + DATERANGE_FIELD_NUMBER;
        hash = (53 * hash) + getDateRange().hashCode();
        break;
      case 5:
        hash = (37 * hash) + DURATIONRANGE_FIELD_NUMBER;
        hash = (53 * hash) + getDurationRange().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.data.GCalendarRange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dunkware.net.proto.data.GCalendarRange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Calendar Range Defining a start/stop time range
   * </pre>
   *
   * Protobuf type {@code dunkware.data.GCalendarRange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dunkware.data.GCalendarRange)
      com.dunkware.net.proto.data.GCalendarRangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GCalendarRange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GCalendarRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dunkware.net.proto.data.GCalendarRange.class, com.dunkware.net.proto.data.GCalendarRange.Builder.class);
    }

    // Construct using com.dunkware.net.proto.data.GCalendarRange.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;

      rangeCase_ = 0;
      range_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GCalendarRange_descriptor;
    }

    @java.lang.Override
    public com.dunkware.net.proto.data.GCalendarRange getDefaultInstanceForType() {
      return com.dunkware.net.proto.data.GCalendarRange.getDefaultInstance();
    }

    @java.lang.Override
    public com.dunkware.net.proto.data.GCalendarRange build() {
      com.dunkware.net.proto.data.GCalendarRange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dunkware.net.proto.data.GCalendarRange buildPartial() {
      com.dunkware.net.proto.data.GCalendarRange result = new com.dunkware.net.proto.data.GCalendarRange(this);
      result.type_ = type_;
      if (rangeCase_ == 2) {
        if (timeRangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = timeRangeBuilder_.build();
        }
      }
      if (rangeCase_ == 3) {
        if (dateTimeRangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = dateTimeRangeBuilder_.build();
        }
      }
      if (rangeCase_ == 4) {
        if (dateRangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = dateRangeBuilder_.build();
        }
      }
      if (rangeCase_ == 5) {
        if (durationRangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = durationRangeBuilder_.build();
        }
      }
      result.rangeCase_ = rangeCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dunkware.net.proto.data.GCalendarRange) {
        return mergeFrom((com.dunkware.net.proto.data.GCalendarRange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dunkware.net.proto.data.GCalendarRange other) {
      if (other == com.dunkware.net.proto.data.GCalendarRange.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      switch (other.getRangeCase()) {
        case TIMERANGE: {
          mergeTimeRange(other.getTimeRange());
          break;
        }
        case DATETIMERANGE: {
          mergeDateTimeRange(other.getDateTimeRange());
          break;
        }
        case DATERANGE: {
          mergeDateRange(other.getDateRange());
          break;
        }
        case DURATIONRANGE: {
          mergeDurationRange(other.getDurationRange());
          break;
        }
        case RANGE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dunkware.net.proto.data.GCalendarRange parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dunkware.net.proto.data.GCalendarRange) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int rangeCase_ = 0;
    private java.lang.Object range_;
    public RangeCase
        getRangeCase() {
      return RangeCase.forNumber(
          rangeCase_);
    }

    public Builder clearRange() {
      rangeCase_ = 0;
      range_ = null;
      onChanged();
      return this;
    }


    private int type_ = 0;
    /**
     * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
     */
    public com.dunkware.net.proto.data.GCalendarRangeType getType() {
      @SuppressWarnings("deprecation")
      com.dunkware.net.proto.data.GCalendarRangeType result = com.dunkware.net.proto.data.GCalendarRangeType.valueOf(type_);
      return result == null ? com.dunkware.net.proto.data.GCalendarRangeType.UNRECOGNIZED : result;
    }
    /**
     * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
     */
    public Builder setType(com.dunkware.net.proto.data.GCalendarRangeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.dunkware.data.GCalendarRangeType type = 1;</code>
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GTimeRange, com.dunkware.net.proto.data.GTimeRange.Builder, com.dunkware.net.proto.data.GTimeRangeOrBuilder> timeRangeBuilder_;
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public boolean hasTimeRange() {
      return rangeCase_ == 2;
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public com.dunkware.net.proto.data.GTimeRange getTimeRange() {
      if (timeRangeBuilder_ == null) {
        if (rangeCase_ == 2) {
          return (com.dunkware.net.proto.data.GTimeRange) range_;
        }
        return com.dunkware.net.proto.data.GTimeRange.getDefaultInstance();
      } else {
        if (rangeCase_ == 2) {
          return timeRangeBuilder_.getMessage();
        }
        return com.dunkware.net.proto.data.GTimeRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public Builder setTimeRange(com.dunkware.net.proto.data.GTimeRange value) {
      if (timeRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        timeRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 2;
      return this;
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public Builder setTimeRange(
        com.dunkware.net.proto.data.GTimeRange.Builder builderForValue) {
      if (timeRangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        timeRangeBuilder_.setMessage(builderForValue.build());
      }
      rangeCase_ = 2;
      return this;
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public Builder mergeTimeRange(com.dunkware.net.proto.data.GTimeRange value) {
      if (timeRangeBuilder_ == null) {
        if (rangeCase_ == 2 &&
            range_ != com.dunkware.net.proto.data.GTimeRange.getDefaultInstance()) {
          range_ = com.dunkware.net.proto.data.GTimeRange.newBuilder((com.dunkware.net.proto.data.GTimeRange) range_)
              .mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        if (rangeCase_ == 2) {
          timeRangeBuilder_.mergeFrom(value);
        }
        timeRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 2;
      return this;
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public Builder clearTimeRange() {
      if (timeRangeBuilder_ == null) {
        if (rangeCase_ == 2) {
          rangeCase_ = 0;
          range_ = null;
          onChanged();
        }
      } else {
        if (rangeCase_ == 2) {
          rangeCase_ = 0;
          range_ = null;
        }
        timeRangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public com.dunkware.net.proto.data.GTimeRange.Builder getTimeRangeBuilder() {
      return getTimeRangeFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    public com.dunkware.net.proto.data.GTimeRangeOrBuilder getTimeRangeOrBuilder() {
      if ((rangeCase_ == 2) && (timeRangeBuilder_ != null)) {
        return timeRangeBuilder_.getMessageOrBuilder();
      } else {
        if (rangeCase_ == 2) {
          return (com.dunkware.net.proto.data.GTimeRange) range_;
        }
        return com.dunkware.net.proto.data.GTimeRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GTimeRange timeRange = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GTimeRange, com.dunkware.net.proto.data.GTimeRange.Builder, com.dunkware.net.proto.data.GTimeRangeOrBuilder> 
        getTimeRangeFieldBuilder() {
      if (timeRangeBuilder_ == null) {
        if (!(rangeCase_ == 2)) {
          range_ = com.dunkware.net.proto.data.GTimeRange.getDefaultInstance();
        }
        timeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GTimeRange, com.dunkware.net.proto.data.GTimeRange.Builder, com.dunkware.net.proto.data.GTimeRangeOrBuilder>(
                (com.dunkware.net.proto.data.GTimeRange) range_,
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      rangeCase_ = 2;
      onChanged();;
      return timeRangeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDateTimeRange, com.dunkware.net.proto.data.GDateTimeRange.Builder, com.dunkware.net.proto.data.GDateTimeRangeOrBuilder> dateTimeRangeBuilder_;
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public boolean hasDateTimeRange() {
      return rangeCase_ == 3;
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public com.dunkware.net.proto.data.GDateTimeRange getDateTimeRange() {
      if (dateTimeRangeBuilder_ == null) {
        if (rangeCase_ == 3) {
          return (com.dunkware.net.proto.data.GDateTimeRange) range_;
        }
        return com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance();
      } else {
        if (rangeCase_ == 3) {
          return dateTimeRangeBuilder_.getMessage();
        }
        return com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public Builder setDateTimeRange(com.dunkware.net.proto.data.GDateTimeRange value) {
      if (dateTimeRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        dateTimeRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 3;
      return this;
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public Builder setDateTimeRange(
        com.dunkware.net.proto.data.GDateTimeRange.Builder builderForValue) {
      if (dateTimeRangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        dateTimeRangeBuilder_.setMessage(builderForValue.build());
      }
      rangeCase_ = 3;
      return this;
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public Builder mergeDateTimeRange(com.dunkware.net.proto.data.GDateTimeRange value) {
      if (dateTimeRangeBuilder_ == null) {
        if (rangeCase_ == 3 &&
            range_ != com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance()) {
          range_ = com.dunkware.net.proto.data.GDateTimeRange.newBuilder((com.dunkware.net.proto.data.GDateTimeRange) range_)
              .mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        if (rangeCase_ == 3) {
          dateTimeRangeBuilder_.mergeFrom(value);
        }
        dateTimeRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 3;
      return this;
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public Builder clearDateTimeRange() {
      if (dateTimeRangeBuilder_ == null) {
        if (rangeCase_ == 3) {
          rangeCase_ = 0;
          range_ = null;
          onChanged();
        }
      } else {
        if (rangeCase_ == 3) {
          rangeCase_ = 0;
          range_ = null;
        }
        dateTimeRangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public com.dunkware.net.proto.data.GDateTimeRange.Builder getDateTimeRangeBuilder() {
      return getDateTimeRangeFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    public com.dunkware.net.proto.data.GDateTimeRangeOrBuilder getDateTimeRangeOrBuilder() {
      if ((rangeCase_ == 3) && (dateTimeRangeBuilder_ != null)) {
        return dateTimeRangeBuilder_.getMessageOrBuilder();
      } else {
        if (rangeCase_ == 3) {
          return (com.dunkware.net.proto.data.GDateTimeRange) range_;
        }
        return com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GDateTimeRange dateTimeRange = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDateTimeRange, com.dunkware.net.proto.data.GDateTimeRange.Builder, com.dunkware.net.proto.data.GDateTimeRangeOrBuilder> 
        getDateTimeRangeFieldBuilder() {
      if (dateTimeRangeBuilder_ == null) {
        if (!(rangeCase_ == 3)) {
          range_ = com.dunkware.net.proto.data.GDateTimeRange.getDefaultInstance();
        }
        dateTimeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GDateTimeRange, com.dunkware.net.proto.data.GDateTimeRange.Builder, com.dunkware.net.proto.data.GDateTimeRangeOrBuilder>(
                (com.dunkware.net.proto.data.GDateTimeRange) range_,
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      rangeCase_ = 3;
      onChanged();;
      return dateTimeRangeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDateRange, com.dunkware.net.proto.data.GDateRange.Builder, com.dunkware.net.proto.data.GDateRangeOrBuilder> dateRangeBuilder_;
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public boolean hasDateRange() {
      return rangeCase_ == 4;
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public com.dunkware.net.proto.data.GDateRange getDateRange() {
      if (dateRangeBuilder_ == null) {
        if (rangeCase_ == 4) {
          return (com.dunkware.net.proto.data.GDateRange) range_;
        }
        return com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
      } else {
        if (rangeCase_ == 4) {
          return dateRangeBuilder_.getMessage();
        }
        return com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public Builder setDateRange(com.dunkware.net.proto.data.GDateRange value) {
      if (dateRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        dateRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 4;
      return this;
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public Builder setDateRange(
        com.dunkware.net.proto.data.GDateRange.Builder builderForValue) {
      if (dateRangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        dateRangeBuilder_.setMessage(builderForValue.build());
      }
      rangeCase_ = 4;
      return this;
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public Builder mergeDateRange(com.dunkware.net.proto.data.GDateRange value) {
      if (dateRangeBuilder_ == null) {
        if (rangeCase_ == 4 &&
            range_ != com.dunkware.net.proto.data.GDateRange.getDefaultInstance()) {
          range_ = com.dunkware.net.proto.data.GDateRange.newBuilder((com.dunkware.net.proto.data.GDateRange) range_)
              .mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        if (rangeCase_ == 4) {
          dateRangeBuilder_.mergeFrom(value);
        }
        dateRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 4;
      return this;
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public Builder clearDateRange() {
      if (dateRangeBuilder_ == null) {
        if (rangeCase_ == 4) {
          rangeCase_ = 0;
          range_ = null;
          onChanged();
        }
      } else {
        if (rangeCase_ == 4) {
          rangeCase_ = 0;
          range_ = null;
        }
        dateRangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public com.dunkware.net.proto.data.GDateRange.Builder getDateRangeBuilder() {
      return getDateRangeFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    public com.dunkware.net.proto.data.GDateRangeOrBuilder getDateRangeOrBuilder() {
      if ((rangeCase_ == 4) && (dateRangeBuilder_ != null)) {
        return dateRangeBuilder_.getMessageOrBuilder();
      } else {
        if (rangeCase_ == 4) {
          return (com.dunkware.net.proto.data.GDateRange) range_;
        }
        return com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GDateRange dateRange = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDateRange, com.dunkware.net.proto.data.GDateRange.Builder, com.dunkware.net.proto.data.GDateRangeOrBuilder> 
        getDateRangeFieldBuilder() {
      if (dateRangeBuilder_ == null) {
        if (!(rangeCase_ == 4)) {
          range_ = com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
        }
        dateRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GDateRange, com.dunkware.net.proto.data.GDateRange.Builder, com.dunkware.net.proto.data.GDateRangeOrBuilder>(
                (com.dunkware.net.proto.data.GDateRange) range_,
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      rangeCase_ = 4;
      onChanged();;
      return dateRangeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDurationRange, com.dunkware.net.proto.data.GDurationRange.Builder, com.dunkware.net.proto.data.GDurationRangeOrBuilder> durationRangeBuilder_;
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public boolean hasDurationRange() {
      return rangeCase_ == 5;
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public com.dunkware.net.proto.data.GDurationRange getDurationRange() {
      if (durationRangeBuilder_ == null) {
        if (rangeCase_ == 5) {
          return (com.dunkware.net.proto.data.GDurationRange) range_;
        }
        return com.dunkware.net.proto.data.GDurationRange.getDefaultInstance();
      } else {
        if (rangeCase_ == 5) {
          return durationRangeBuilder_.getMessage();
        }
        return com.dunkware.net.proto.data.GDurationRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public Builder setDurationRange(com.dunkware.net.proto.data.GDurationRange value) {
      if (durationRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        range_ = value;
        onChanged();
      } else {
        durationRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 5;
      return this;
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public Builder setDurationRange(
        com.dunkware.net.proto.data.GDurationRange.Builder builderForValue) {
      if (durationRangeBuilder_ == null) {
        range_ = builderForValue.build();
        onChanged();
      } else {
        durationRangeBuilder_.setMessage(builderForValue.build());
      }
      rangeCase_ = 5;
      return this;
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public Builder mergeDurationRange(com.dunkware.net.proto.data.GDurationRange value) {
      if (durationRangeBuilder_ == null) {
        if (rangeCase_ == 5 &&
            range_ != com.dunkware.net.proto.data.GDurationRange.getDefaultInstance()) {
          range_ = com.dunkware.net.proto.data.GDurationRange.newBuilder((com.dunkware.net.proto.data.GDurationRange) range_)
              .mergeFrom(value).buildPartial();
        } else {
          range_ = value;
        }
        onChanged();
      } else {
        if (rangeCase_ == 5) {
          durationRangeBuilder_.mergeFrom(value);
        }
        durationRangeBuilder_.setMessage(value);
      }
      rangeCase_ = 5;
      return this;
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public Builder clearDurationRange() {
      if (durationRangeBuilder_ == null) {
        if (rangeCase_ == 5) {
          rangeCase_ = 0;
          range_ = null;
          onChanged();
        }
      } else {
        if (rangeCase_ == 5) {
          rangeCase_ = 0;
          range_ = null;
        }
        durationRangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public com.dunkware.net.proto.data.GDurationRange.Builder getDurationRangeBuilder() {
      return getDurationRangeFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    public com.dunkware.net.proto.data.GDurationRangeOrBuilder getDurationRangeOrBuilder() {
      if ((rangeCase_ == 5) && (durationRangeBuilder_ != null)) {
        return durationRangeBuilder_.getMessageOrBuilder();
      } else {
        if (rangeCase_ == 5) {
          return (com.dunkware.net.proto.data.GDurationRange) range_;
        }
        return com.dunkware.net.proto.data.GDurationRange.getDefaultInstance();
      }
    }
    /**
     * <code>.dunkware.data.GDurationRange durationRange = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDurationRange, com.dunkware.net.proto.data.GDurationRange.Builder, com.dunkware.net.proto.data.GDurationRangeOrBuilder> 
        getDurationRangeFieldBuilder() {
      if (durationRangeBuilder_ == null) {
        if (!(rangeCase_ == 5)) {
          range_ = com.dunkware.net.proto.data.GDurationRange.getDefaultInstance();
        }
        durationRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GDurationRange, com.dunkware.net.proto.data.GDurationRange.Builder, com.dunkware.net.proto.data.GDurationRangeOrBuilder>(
                (com.dunkware.net.proto.data.GDurationRange) range_,
                getParentForChildren(),
                isClean());
        range_ = null;
      }
      rangeCase_ = 5;
      onChanged();;
      return durationRangeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dunkware.data.GCalendarRange)
  }

  // @@protoc_insertion_point(class_scope:dunkware.data.GCalendarRange)
  private static final com.dunkware.net.proto.data.GCalendarRange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dunkware.net.proto.data.GCalendarRange();
  }

  public static com.dunkware.net.proto.data.GCalendarRange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GCalendarRange>
      PARSER = new com.google.protobuf.AbstractParser<GCalendarRange>() {
    @java.lang.Override
    public GCalendarRange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GCalendarRange(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GCalendarRange> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GCalendarRange> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dunkware.net.proto.data.GCalendarRange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

