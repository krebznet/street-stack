// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netdata.proto

package com.dunkware.net.proto.data;

/**
 * <pre>
 * Simple DateRange with a start and stop date
 * </pre>
 *
 * Protobuf type {@code dunkware.data.GDateRange}
 */
public  final class GDateRange extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dunkware.data.GDateRange)
    GDateRangeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GDateRange.newBuilder() to construct.
  private GDateRange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GDateRange() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GDateRange(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.dunkware.net.proto.data.GDate.Builder subBuilder = null;
            if (startDate_ != null) {
              subBuilder = startDate_.toBuilder();
            }
            startDate_ = input.readMessage(com.dunkware.net.proto.data.GDate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(startDate_);
              startDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.dunkware.net.proto.data.GDate.Builder subBuilder = null;
            if (stopDate_ != null) {
              subBuilder = stopDate_.toBuilder();
            }
            stopDate_ = input.readMessage(com.dunkware.net.proto.data.GDate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(stopDate_);
              stopDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.dunkware.net.proto.data.GTimeRange.Builder subBuilder = null;
            if (timeRange_ != null) {
              subBuilder = timeRange_.toBuilder();
            }
            timeRange_ = input.readMessage(com.dunkware.net.proto.data.GTimeRange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timeRange_);
              timeRange_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GDateRange_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GDateRange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dunkware.net.proto.data.GDateRange.class, com.dunkware.net.proto.data.GDateRange.Builder.class);
  }

  public static final int STARTDATE_FIELD_NUMBER = 1;
  private com.dunkware.net.proto.data.GDate startDate_;
  /**
   * <code>.dunkware.data.GDate startDate = 1;</code>
   */
  public boolean hasStartDate() {
    return startDate_ != null;
  }
  /**
   * <code>.dunkware.data.GDate startDate = 1;</code>
   */
  public com.dunkware.net.proto.data.GDate getStartDate() {
    return startDate_ == null ? com.dunkware.net.proto.data.GDate.getDefaultInstance() : startDate_;
  }
  /**
   * <code>.dunkware.data.GDate startDate = 1;</code>
   */
  public com.dunkware.net.proto.data.GDateOrBuilder getStartDateOrBuilder() {
    return getStartDate();
  }

  public static final int STOPDATE_FIELD_NUMBER = 2;
  private com.dunkware.net.proto.data.GDate stopDate_;
  /**
   * <code>.dunkware.data.GDate stopDate = 2;</code>
   */
  public boolean hasStopDate() {
    return stopDate_ != null;
  }
  /**
   * <code>.dunkware.data.GDate stopDate = 2;</code>
   */
  public com.dunkware.net.proto.data.GDate getStopDate() {
    return stopDate_ == null ? com.dunkware.net.proto.data.GDate.getDefaultInstance() : stopDate_;
  }
  /**
   * <code>.dunkware.data.GDate stopDate = 2;</code>
   */
  public com.dunkware.net.proto.data.GDateOrBuilder getStopDateOrBuilder() {
    return getStopDate();
  }

  public static final int TIMERANGE_FIELD_NUMBER = 5;
  private com.dunkware.net.proto.data.GTimeRange timeRange_;
  /**
   * <pre>
   * Optional Time range to search within the date range.
   * </pre>
   *
   * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
   */
  public boolean hasTimeRange() {
    return timeRange_ != null;
  }
  /**
   * <pre>
   * Optional Time range to search within the date range.
   * </pre>
   *
   * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
   */
  public com.dunkware.net.proto.data.GTimeRange getTimeRange() {
    return timeRange_ == null ? com.dunkware.net.proto.data.GTimeRange.getDefaultInstance() : timeRange_;
  }
  /**
   * <pre>
   * Optional Time range to search within the date range.
   * </pre>
   *
   * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
   */
  public com.dunkware.net.proto.data.GTimeRangeOrBuilder getTimeRangeOrBuilder() {
    return getTimeRange();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (startDate_ != null) {
      output.writeMessage(1, getStartDate());
    }
    if (stopDate_ != null) {
      output.writeMessage(2, getStopDate());
    }
    if (timeRange_ != null) {
      output.writeMessage(5, getTimeRange());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (startDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStartDate());
    }
    if (stopDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getStopDate());
    }
    if (timeRange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTimeRange());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dunkware.net.proto.data.GDateRange)) {
      return super.equals(obj);
    }
    com.dunkware.net.proto.data.GDateRange other = (com.dunkware.net.proto.data.GDateRange) obj;

    boolean result = true;
    result = result && (hasStartDate() == other.hasStartDate());
    if (hasStartDate()) {
      result = result && getStartDate()
          .equals(other.getStartDate());
    }
    result = result && (hasStopDate() == other.hasStopDate());
    if (hasStopDate()) {
      result = result && getStopDate()
          .equals(other.getStopDate());
    }
    result = result && (hasTimeRange() == other.hasTimeRange());
    if (hasTimeRange()) {
      result = result && getTimeRange()
          .equals(other.getTimeRange());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStartDate()) {
      hash = (37 * hash) + STARTDATE_FIELD_NUMBER;
      hash = (53 * hash) + getStartDate().hashCode();
    }
    if (hasStopDate()) {
      hash = (37 * hash) + STOPDATE_FIELD_NUMBER;
      hash = (53 * hash) + getStopDate().hashCode();
    }
    if (hasTimeRange()) {
      hash = (37 * hash) + TIMERANGE_FIELD_NUMBER;
      hash = (53 * hash) + getTimeRange().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GDateRange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.data.GDateRange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.data.GDateRange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dunkware.net.proto.data.GDateRange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Simple DateRange with a start and stop date
   * </pre>
   *
   * Protobuf type {@code dunkware.data.GDateRange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dunkware.data.GDateRange)
      com.dunkware.net.proto.data.GDateRangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GDateRange_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GDateRange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dunkware.net.proto.data.GDateRange.class, com.dunkware.net.proto.data.GDateRange.Builder.class);
    }

    // Construct using com.dunkware.net.proto.data.GDateRange.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (startDateBuilder_ == null) {
        startDate_ = null;
      } else {
        startDate_ = null;
        startDateBuilder_ = null;
      }
      if (stopDateBuilder_ == null) {
        stopDate_ = null;
      } else {
        stopDate_ = null;
        stopDateBuilder_ = null;
      }
      if (timeRangeBuilder_ == null) {
        timeRange_ = null;
      } else {
        timeRange_ = null;
        timeRangeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dunkware.net.proto.data.GDataProto.internal_static_dunkware_data_GDateRange_descriptor;
    }

    @java.lang.Override
    public com.dunkware.net.proto.data.GDateRange getDefaultInstanceForType() {
      return com.dunkware.net.proto.data.GDateRange.getDefaultInstance();
    }

    @java.lang.Override
    public com.dunkware.net.proto.data.GDateRange build() {
      com.dunkware.net.proto.data.GDateRange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dunkware.net.proto.data.GDateRange buildPartial() {
      com.dunkware.net.proto.data.GDateRange result = new com.dunkware.net.proto.data.GDateRange(this);
      if (startDateBuilder_ == null) {
        result.startDate_ = startDate_;
      } else {
        result.startDate_ = startDateBuilder_.build();
      }
      if (stopDateBuilder_ == null) {
        result.stopDate_ = stopDate_;
      } else {
        result.stopDate_ = stopDateBuilder_.build();
      }
      if (timeRangeBuilder_ == null) {
        result.timeRange_ = timeRange_;
      } else {
        result.timeRange_ = timeRangeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dunkware.net.proto.data.GDateRange) {
        return mergeFrom((com.dunkware.net.proto.data.GDateRange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dunkware.net.proto.data.GDateRange other) {
      if (other == com.dunkware.net.proto.data.GDateRange.getDefaultInstance()) return this;
      if (other.hasStartDate()) {
        mergeStartDate(other.getStartDate());
      }
      if (other.hasStopDate()) {
        mergeStopDate(other.getStopDate());
      }
      if (other.hasTimeRange()) {
        mergeTimeRange(other.getTimeRange());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dunkware.net.proto.data.GDateRange parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dunkware.net.proto.data.GDateRange) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.dunkware.net.proto.data.GDate startDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDate, com.dunkware.net.proto.data.GDate.Builder, com.dunkware.net.proto.data.GDateOrBuilder> startDateBuilder_;
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public boolean hasStartDate() {
      return startDateBuilder_ != null || startDate_ != null;
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public com.dunkware.net.proto.data.GDate getStartDate() {
      if (startDateBuilder_ == null) {
        return startDate_ == null ? com.dunkware.net.proto.data.GDate.getDefaultInstance() : startDate_;
      } else {
        return startDateBuilder_.getMessage();
      }
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public Builder setStartDate(com.dunkware.net.proto.data.GDate value) {
      if (startDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        startDate_ = value;
        onChanged();
      } else {
        startDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public Builder setStartDate(
        com.dunkware.net.proto.data.GDate.Builder builderForValue) {
      if (startDateBuilder_ == null) {
        startDate_ = builderForValue.build();
        onChanged();
      } else {
        startDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public Builder mergeStartDate(com.dunkware.net.proto.data.GDate value) {
      if (startDateBuilder_ == null) {
        if (startDate_ != null) {
          startDate_ =
            com.dunkware.net.proto.data.GDate.newBuilder(startDate_).mergeFrom(value).buildPartial();
        } else {
          startDate_ = value;
        }
        onChanged();
      } else {
        startDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public Builder clearStartDate() {
      if (startDateBuilder_ == null) {
        startDate_ = null;
        onChanged();
      } else {
        startDate_ = null;
        startDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public com.dunkware.net.proto.data.GDate.Builder getStartDateBuilder() {
      
      onChanged();
      return getStartDateFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    public com.dunkware.net.proto.data.GDateOrBuilder getStartDateOrBuilder() {
      if (startDateBuilder_ != null) {
        return startDateBuilder_.getMessageOrBuilder();
      } else {
        return startDate_ == null ?
            com.dunkware.net.proto.data.GDate.getDefaultInstance() : startDate_;
      }
    }
    /**
     * <code>.dunkware.data.GDate startDate = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDate, com.dunkware.net.proto.data.GDate.Builder, com.dunkware.net.proto.data.GDateOrBuilder> 
        getStartDateFieldBuilder() {
      if (startDateBuilder_ == null) {
        startDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GDate, com.dunkware.net.proto.data.GDate.Builder, com.dunkware.net.proto.data.GDateOrBuilder>(
                getStartDate(),
                getParentForChildren(),
                isClean());
        startDate_ = null;
      }
      return startDateBuilder_;
    }

    private com.dunkware.net.proto.data.GDate stopDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDate, com.dunkware.net.proto.data.GDate.Builder, com.dunkware.net.proto.data.GDateOrBuilder> stopDateBuilder_;
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public boolean hasStopDate() {
      return stopDateBuilder_ != null || stopDate_ != null;
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public com.dunkware.net.proto.data.GDate getStopDate() {
      if (stopDateBuilder_ == null) {
        return stopDate_ == null ? com.dunkware.net.proto.data.GDate.getDefaultInstance() : stopDate_;
      } else {
        return stopDateBuilder_.getMessage();
      }
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public Builder setStopDate(com.dunkware.net.proto.data.GDate value) {
      if (stopDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        stopDate_ = value;
        onChanged();
      } else {
        stopDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public Builder setStopDate(
        com.dunkware.net.proto.data.GDate.Builder builderForValue) {
      if (stopDateBuilder_ == null) {
        stopDate_ = builderForValue.build();
        onChanged();
      } else {
        stopDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public Builder mergeStopDate(com.dunkware.net.proto.data.GDate value) {
      if (stopDateBuilder_ == null) {
        if (stopDate_ != null) {
          stopDate_ =
            com.dunkware.net.proto.data.GDate.newBuilder(stopDate_).mergeFrom(value).buildPartial();
        } else {
          stopDate_ = value;
        }
        onChanged();
      } else {
        stopDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public Builder clearStopDate() {
      if (stopDateBuilder_ == null) {
        stopDate_ = null;
        onChanged();
      } else {
        stopDate_ = null;
        stopDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public com.dunkware.net.proto.data.GDate.Builder getStopDateBuilder() {
      
      onChanged();
      return getStopDateFieldBuilder().getBuilder();
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    public com.dunkware.net.proto.data.GDateOrBuilder getStopDateOrBuilder() {
      if (stopDateBuilder_ != null) {
        return stopDateBuilder_.getMessageOrBuilder();
      } else {
        return stopDate_ == null ?
            com.dunkware.net.proto.data.GDate.getDefaultInstance() : stopDate_;
      }
    }
    /**
     * <code>.dunkware.data.GDate stopDate = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GDate, com.dunkware.net.proto.data.GDate.Builder, com.dunkware.net.proto.data.GDateOrBuilder> 
        getStopDateFieldBuilder() {
      if (stopDateBuilder_ == null) {
        stopDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GDate, com.dunkware.net.proto.data.GDate.Builder, com.dunkware.net.proto.data.GDateOrBuilder>(
                getStopDate(),
                getParentForChildren(),
                isClean());
        stopDate_ = null;
      }
      return stopDateBuilder_;
    }

    private com.dunkware.net.proto.data.GTimeRange timeRange_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GTimeRange, com.dunkware.net.proto.data.GTimeRange.Builder, com.dunkware.net.proto.data.GTimeRangeOrBuilder> timeRangeBuilder_;
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public boolean hasTimeRange() {
      return timeRangeBuilder_ != null || timeRange_ != null;
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public com.dunkware.net.proto.data.GTimeRange getTimeRange() {
      if (timeRangeBuilder_ == null) {
        return timeRange_ == null ? com.dunkware.net.proto.data.GTimeRange.getDefaultInstance() : timeRange_;
      } else {
        return timeRangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public Builder setTimeRange(com.dunkware.net.proto.data.GTimeRange value) {
      if (timeRangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeRange_ = value;
        onChanged();
      } else {
        timeRangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public Builder setTimeRange(
        com.dunkware.net.proto.data.GTimeRange.Builder builderForValue) {
      if (timeRangeBuilder_ == null) {
        timeRange_ = builderForValue.build();
        onChanged();
      } else {
        timeRangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public Builder mergeTimeRange(com.dunkware.net.proto.data.GTimeRange value) {
      if (timeRangeBuilder_ == null) {
        if (timeRange_ != null) {
          timeRange_ =
            com.dunkware.net.proto.data.GTimeRange.newBuilder(timeRange_).mergeFrom(value).buildPartial();
        } else {
          timeRange_ = value;
        }
        onChanged();
      } else {
        timeRangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public Builder clearTimeRange() {
      if (timeRangeBuilder_ == null) {
        timeRange_ = null;
        onChanged();
      } else {
        timeRange_ = null;
        timeRangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public com.dunkware.net.proto.data.GTimeRange.Builder getTimeRangeBuilder() {
      
      onChanged();
      return getTimeRangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    public com.dunkware.net.proto.data.GTimeRangeOrBuilder getTimeRangeOrBuilder() {
      if (timeRangeBuilder_ != null) {
        return timeRangeBuilder_.getMessageOrBuilder();
      } else {
        return timeRange_ == null ?
            com.dunkware.net.proto.data.GTimeRange.getDefaultInstance() : timeRange_;
      }
    }
    /**
     * <pre>
     * Optional Time range to search within the date range.
     * </pre>
     *
     * <code>.dunkware.data.GTimeRange timeRange = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.dunkware.net.proto.data.GTimeRange, com.dunkware.net.proto.data.GTimeRange.Builder, com.dunkware.net.proto.data.GTimeRangeOrBuilder> 
        getTimeRangeFieldBuilder() {
      if (timeRangeBuilder_ == null) {
        timeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.dunkware.net.proto.data.GTimeRange, com.dunkware.net.proto.data.GTimeRange.Builder, com.dunkware.net.proto.data.GTimeRangeOrBuilder>(
                getTimeRange(),
                getParentForChildren(),
                isClean());
        timeRange_ = null;
      }
      return timeRangeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dunkware.data.GDateRange)
  }

  // @@protoc_insertion_point(class_scope:dunkware.data.GDateRange)
  private static final com.dunkware.net.proto.data.GDateRange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dunkware.net.proto.data.GDateRange();
  }

  public static com.dunkware.net.proto.data.GDateRange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GDateRange>
      PARSER = new com.google.protobuf.AbstractParser<GDateRange>() {
    @java.lang.Override
    public GDateRange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GDateRange(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GDateRange> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GDateRange> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dunkware.net.proto.data.GDateRange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

