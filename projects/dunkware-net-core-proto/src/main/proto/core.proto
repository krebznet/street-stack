 syntax = "proto3";

 package dunkware.core;

 option java_multiple_files = true;
 option java_package = "com.dunkware.net.proto.core";
 option java_outer_classname = "GCoreProto";

/**
  Section 1. Generic Meta Data Model - GClass defines a type of data object
  and the type of data fields it contains as well as a name and a package.
 */

 message GClass {
     string package = 1;
     string name = 2;
     repeated GClassField fields = 3;
 }

 message GClassField {
     int32 name = 1;
     bool required = 2;
     GFieldType type = 3;
 }

 /**
  Section 2: Generic Data Object For Data Transport Across Networks.
  These can be optionally have a schema using a GClass
  **/

 // Container of data fields and referenced by either an int or string id
 message GBean {
      int32 id = 1;
      string name =2;
     // Collection of Data Fields
     repeated  GField fields = 4;
 }

 // Data Field Types Enum
 enum GFieldType {
     INT = 0;
     DOUBLE = 1;
     BOOL = 2;
     STRING = 3;
     BYTES = 4;
     BEAN = 5;
     LIST = 6;
     DATE = 7;
     TIME = 8;
     DATE_TIME = 9;
     CALENDAR_RAGE = 10;
     LONG = 11;
 }

 enum GTimeZone {
    US_EASTERN = 0;
    US_CENTRAL = 1;
    US_MOUNTAIN = 2;
    US_PACIFIC = 3;
 }

 // Dat Field that has either a int or string id and a value of one type
 message GField {
      int32 id = 1;
      string name = 2;
      GFieldType type = 11;
     oneof Data {
         int32  intValue = 3;
         int64 longValue = 4;
         string stringValue = 5;
         double doubleValue = 6;
         bool booleanValue = 7;
         bytes bytesValue = 8;
         GBean beanValue = 9;
         GList listValue = 10;
         GTime timeValue = 12;
         GDate dateValue = 13;
         GDateTime dateTimeValue = 14;
         GCalendarRange calendarRangeValue = 15;

     }
 }


/**
  ---
  Section 3. Generic Data List with change notifications using generic data model.
  ---
 */

 // List that holds a collection of Beans with an Identifier
 message GList {
   int32 listId = 1;
   repeated  GBean beans = 2;
 }

 // List Event That Can Be Different Types of Events
message GListEvent {
    // list identifier
   int32 listId = 1;
    oneof Event {
        GListUpdate listUpdate = 2;
    }
}
 // List update that has a collection of bean inserts/updates/deletes
 message GListUpdate {
     repeated  GBeanInsert insets = 3;
     repeated  GBeanUpdate updates = 4;
     repeated  GBeanDelete deletes = 5;
 }

 // Bean Identifier to delete a bean from the list
 message GBeanDelete {
    int32 beanId = 1;
    string beanName = 2;
 }

 // Bean insert into the list
 // identifier is on the bean
 message GBeanInsert {
      GBean bean = 3;
 }

 // Existing bean update with updated fields
 // and identifier to lookup the bean.
 message GBeanUpdate {
     int32 beanId = 1;
     repeated GField updates = 2;
 }


 /**
  ---
  Section 3. Generic Data/Time Ranges and Time Periods
  ---
 */
 // High Level Time Model
 enum GTimeUnit {
     DAY = 0;
     HOUR = 1;
     MINUTE = 2;
     SECOND = 3;

 }

 // Local Time
 message GTime {
     int32 hour = 1;
     int32 minute = 2;
     int32 second = 3;
 }

 // Simple Date
 message GDate {
     int32 month =1;
     int32 day = 2;
     int32 year = 3;
 }

 // Simple DateTime
 message GDateTime {
     GTime time = 1;
     GDate date = 2;
 }

 // Simple Time Duration
 message GDuration {
     int32 days = 1;
     int32 hours = 2;
     int32 minutes = 3;
     int32 seconds = 4;
 }


 // Calendar Range Defining a start/stop time range
 message GCalendarRange {
     GCalendarRangeType type = 1;
     oneof  Range  {
         GTimeRange timeRange = 2;
         GDateTimeRange dateTimeRange= 3;
         GDateRange dateRange = 4;
         GDurationRange durationRange = 5;
     }
 }

 // Calendar Range Type Enum
 enum GCalendarRangeType {
     DATE_RANGE = 0;
     DATE_TIME_RANGE = 2;
     TIME_RANGE = 3;
     TIME_DURATION = 4;
 }

 // TimeRange with a start and stop time
 message GTimeRange {
     GTime startTime = 1;
     GTime stopTime = 2;
 }

 // Time Ruration Range
 message GDurationRange {
    GTimeUnit timeUnit = 1;
    int32 value = 2;
 }

 // Simple DateRange with a start and stop date
 message GDateRange {
     GDate startDate = 1;
     GDate stopDate = 2;
     // Optional Time range to search within the date range.
     GTimeRange timeRange = 5;
 }

 // Simple DateTimeRange
 message GDateTimeRange {
     GDateTime start = 1;
     GDateTime stop = 2;
 }


 /**
 ---
 Section 3. Generic Query Capabilities
 ---
*/

 // Math Operator
 enum GOperator {
     GT = 0;
     GTE = 1;
     LT = 2;
     LTE = 3;
     EQ = 4;
     NQ = 5;
 }

  enum GDataType {
      STRING_TYPE = 0;
      INT_TYPE = 1;
      LONG_TYPE = 2;
      DOUBLE_TYPE = 3;
      BOOL_TYPE = 4;

 }

 // Generic Error Message
 message GError {
   int32 code = 1;
   string message = 2;
 }


 // Formatting Pipes



message GPipe {

  oneof  PipeType  {
      GDatePipe date = 2;
      GPercentPipe percent = 3;
      GDecimalPipe decimal = 4; 
      GCurrencyPipe currency = 5;
  }
}



message GDecimalPipe { 
 string digitsInfo = 1;
}

message GDatePipe { 
  string format = 1;
}

message GPercentPipe {
   int32 decimals = 2;
}

message GCurrencyPipe { 
  string display = 1;
  string digitsInfo	 = 2;
  
}
