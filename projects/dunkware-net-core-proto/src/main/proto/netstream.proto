
syntax = "proto3";

package dunkware.netstream;


option java_multiple_files = true;
option java_package = "com.dunkware.net.proto.netstream";
option java_outer_classname = "GNetStreamProto";

import "netdata.proto";
import "stream.proto";
import "google/protobuf/timestamp.proto";



message GNetEntitySearchRequest {
  int32 searchId = 1;
  stream.GEntityMatcher matcher = 3;
  string retVars = 4;
  string source = 5;
}

message GNetEntitySearchRequest2 {
  int32 searchId = 1;
  string model = 2;
  string retVars = 3;

}

message GNetEntitySearchResults2 {
  int32 searchId = 1;
  string results = 2;
  bool error = 3;
  string errorMessage = 4;
  double searchTime = 5;
  string source = 6;
}

message GNetEntitySearchResults {
  int32 searchId = 1;
  repeated  GNetEntity entities = 2;
  string source = 3;
}

message GNetEntitySearchComplete {
  int32 searchId = 1;
  string source = 2;
}
message GNetEntitySearchException {
  int32 searchId = 1;
  string exception = 2;
  string source = 3;
}
message GNetEntitySearchResponse {
   int32 searchId = 1;
   string source = 2;
}

message GNetEntityScannerStartRequest {
  int32 scannerId = 1;
  string search = 2;
  string retVars = 4;
  string source = 5;
  int32 scanInterval = 6;
}
message GNetEntityScannerStartResponse {
  int32 scannerId = 1;
  string source = 2;
  string code = 3;
  string error = 4;
}

message GNetEntityScannerException {
  int32 scannerId =1;
  string exception = 2;
  string source = 3;
}

message GNetEntityScannerStopRequest {
 int32 scannerId = 1;
}

message GNetEntityScannerUpdateRequest {
  int32 scannerId = 1;
  string search = 2;
  string retValues = 3;
}

message GNetEntityScannerUpdateResponse {
  int32  scannerId = 1;
  string status = 2;
  string error = 3;
}

message GNetEntityScannerRow {
  int32 scannerId = 1;
  int32 entIdent = 2;
  string entId = 3;
  string data = 4;
}

message GNetEntityScannerUpdate {
  repeated GNetEntityScannerRowInsert inserts = 1;
  repeated GNetEntityScannerRowUpdate updates = 2;
  repeated GNetEntityScannerRowDelete deletes = 3;
}

message GNetEntityScannerRowInsert {
  int32 scannerId = 1;
  GNetEntityScannerRowUpdate row = 2;
}

message GNetEntityScannerRowUpdate {
  int32 scannerId = 1;
  GNetEntityScannerRow row = 2;
}

message GNetEntityScannerRowDelete {
  int32 scannerId = 1;
  int32 entId = 2;
  string entIdent = 3;
}

message GNetEntity {
  int32 entId = 1;
  string entIdent = 2;
  string vars = 3;
}
message GNetSignal {
  int32 sigId = 1;
  string sigIdent = 2;
  int32 entId = 3;
  string entIdent = 4;
  string vars = 5;
  google.protobuf.Timestamp time = 6;

}


message GNetTimeUpdate {
  google.protobuf.Timestamp time = 1;
}

message GNetTimeUpdateAck {
  google.protobuf.Timestamp time = 1;
}

message GNetClientConnectResponse {
  bool  connected = 1;
  string error = 2;
}

message GNetClientConnectRequest {
  string clientIdent = 1;
  string stream = 2;
}

message GNetServerMessage {
  oneof type {
    GNetEntityScannerStartResponse entityScannerStartResponse = 1;
    GNetTimeUpdate timeUpdate = 2;
    GNetEntityScannerUpdate entityScannerUpdate = 3;
    GNetClientConnectResponse connectResponse = 4;
    GNetEntitySearchResponse entitySearchResponse = 5;
    GNetEntitySearchException entitySearchException = 6;
    GNetEntitySearchComplete entitySearchComplete = 7;
    GNetEntitySearchResults entitySearchResults = 8;
    GNetEntityScannerUpdateResponse entityScannerUpdateResponse = 9;
    GNetEntityScannerStopResponse entityScannerStopResponse = 10;

    // just get an exception or not;
    // ACK -> 300/ LIMIT
  }
}

message GNetEntityScannerStopResponse {
   int32 scannerId = 1;
   string code = 2;
   string error = 3;
}

message GNetClientMessage {
  oneof type {
    GNetClientConnectRequest connectRequest = 1;
    GNetEntityScannerStartRequest entityScannerStartRequest = 2;
    GNetEntitySearchRequest entitySearchRequest = 3;
    GNetTimeUpdateAck timeUpdateAck = 4;
    GNetEntityScannerStopRequest entityScannerStopRequest = 5;
    GNetEntityScannerUpdateRequest entityScannerUpdateRequest = 6;
  }

}











