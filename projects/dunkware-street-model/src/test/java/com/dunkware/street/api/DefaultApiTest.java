/*
 * Dunkware Street Model
 * Schema for Dunkware Street Model components.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dunkware.street.api;

import com.dunkware.street.ApiException;
import com.dunkware.street.model.ExchangeRef;
import com.dunkware.street.model.ExchangeSession;
import com.dunkware.street.model.TickerRef;
import com.dunkware.street.model.TickerSession;
import com.dunkware.street.model.TickerStat;
import com.dunkware.street.model.TickerVariable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Get all sessions for a specific exchange
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesExchangeIdSessionsGetTest() throws ApiException {
        Integer exchangeId = null;
        List<ExchangeSession> response = 
        api.apiExchangesExchangeIdSessionsGet(exchangeId);
        
        // TODO: test validations
    }
    
    /**
     * Get all tickers for a specific exchange
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesExchangeIdTickersGetTest() throws ApiException {
        Integer exchangeId = null;
        List<TickerRef> response = 
        api.apiExchangesExchangeIdTickersGet(exchangeId);
        
        // TODO: test validations
    }
    
    /**
     * Get all sessions for a specific ticker
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesExchangeIdTickersTickerIdSessionsGetTest() throws ApiException {
        Integer exchangeId = null;
        Integer tickerId = null;
        List<TickerSession> response = 
        api.apiExchangesExchangeIdTickersTickerIdSessionsGet(exchangeId, tickerId);
        
        // TODO: test validations
    }
    
    /**
     * Get all stats for a specific ticker session
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesExchangeIdTickersTickerIdSessionsSessionIdStatsGetTest() throws ApiException {
        Integer exchangeId = null;
        Integer tickerId = null;
        Integer sessionId = null;
        List<TickerStat> response = 
        api.apiExchangesExchangeIdTickersTickerIdSessionsSessionIdStatsGet(exchangeId, tickerId, sessionId);
        
        // TODO: test validations
    }
    
    /**
     * Get a specific stat for a specific exchange ticker
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesExchangeIdTickersTickerIdStatsStatIdGetTest() throws ApiException {
        Integer exchangeId = null;
        Integer tickerId = null;
        Integer statId = null;
        TickerStat response = 
        api.apiExchangesExchangeIdTickersTickerIdStatsStatIdGet(exchangeId, tickerId, statId);
        
        // TODO: test validations
    }
    
    /**
     * Get all variables for a specific ticker
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesExchangeIdTickersTickerIdVariablesGetTest() throws ApiException {
        Integer exchangeId = null;
        Integer tickerId = null;
        List<TickerVariable> response = 
        api.apiExchangesExchangeIdTickersTickerIdVariablesGet(exchangeId, tickerId);
        
        // TODO: test validations
    }
    
    /**
     * Get a list of all exchanges
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiExchangesGetTest() throws ApiException {
        List<ExchangeRef> response = 
        api.apiExchangesGet();
        
        // TODO: test validations
    }
    
}
