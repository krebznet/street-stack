/*
 * Dunkware Street Model
 * Schema for Dunkware Street Model components.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dunkware.street.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * GenTimeUnit
 */
@JsonPropertyOrder({
  GenTimeUnit.JSON_PROPERTY_SECONDS,
  GenTimeUnit.JSON_PROPERTY_MINUTES,
  GenTimeUnit.JSON_PROPERTY_HOURS,
  GenTimeUnit.JSON_PROPERTY_DAYS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-26T16:39:23.088112-05:00[America/Chicago]", comments = "Generator version: 7.6.0")
public class GenTimeUnit {
  public static final String JSON_PROPERTY_SECONDS = "seconds";
  private Integer seconds;

  public static final String JSON_PROPERTY_MINUTES = "minutes";
  private Integer minutes;

  public static final String JSON_PROPERTY_HOURS = "hours";
  private Integer hours;

  public static final String JSON_PROPERTY_DAYS = "days";
  private Integer days;

  public GenTimeUnit() { 
  }

  public GenTimeUnit seconds(Integer seconds) {
    this.seconds = seconds;
    return this;
  }

   /**
   * The number of seconds.
   * @return seconds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSeconds() {
    return seconds;
  }


  @JsonProperty(JSON_PROPERTY_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeconds(Integer seconds) {
    this.seconds = seconds;
  }


  public GenTimeUnit minutes(Integer minutes) {
    this.minutes = minutes;
    return this;
  }

   /**
   * The number of minutes.
   * @return minutes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinutes() {
    return minutes;
  }


  @JsonProperty(JSON_PROPERTY_MINUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinutes(Integer minutes) {
    this.minutes = minutes;
  }


  public GenTimeUnit hours(Integer hours) {
    this.hours = hours;
    return this;
  }

   /**
   * The number of hours.
   * @return hours
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHours() {
    return hours;
  }


  @JsonProperty(JSON_PROPERTY_HOURS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHours(Integer hours) {
    this.hours = hours;
  }


  public GenTimeUnit days(Integer days) {
    this.days = days;
    return this;
  }

   /**
   * The number of days.
   * @return days
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDays() {
    return days;
  }


  @JsonProperty(JSON_PROPERTY_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDays(Integer days) {
    this.days = days;
  }


  /**
   * Return true if this GenTimeUnit object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenTimeUnit genTimeUnit = (GenTimeUnit) o;
    return Objects.equals(this.seconds, genTimeUnit.seconds) &&
        Objects.equals(this.minutes, genTimeUnit.minutes) &&
        Objects.equals(this.hours, genTimeUnit.hours) &&
        Objects.equals(this.days, genTimeUnit.days);
  }

  @Override
  public int hashCode() {
    return Objects.hash(seconds, minutes, hours, days);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenTimeUnit {\n");
    sb.append("    seconds: ").append(toIndentedString(seconds)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    hours: ").append(toIndentedString(hours)).append("\n");
    sb.append("    days: ").append(toIndentedString(days)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `seconds` to the URL query string
    if (getSeconds() != null) {
      joiner.add(String.format("%sseconds%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSeconds()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `minutes` to the URL query string
    if (getMinutes() != null) {
      joiner.add(String.format("%sminutes%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMinutes()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `hours` to the URL query string
    if (getHours() != null) {
      joiner.add(String.format("%shours%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHours()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `days` to the URL query string
    if (getDays() != null) {
      joiner.add(String.format("%sdays%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDays()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

