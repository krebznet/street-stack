// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stream.proto

package com.dunkware.net.proto.stream;

/**
 * Protobuf type {@code dunkware.stream.GStreamScriptSpec}
 */
public  final class GStreamScriptSpec extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dunkware.stream.GStreamScriptSpec)
    GStreamScriptSpecOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GStreamScriptSpec.newBuilder() to construct.
  private GStreamScriptSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GStreamScriptSpec() {
    streamIdentifier_ = "";
    version_ = 0D;
    variables_ = java.util.Collections.emptyList();
    signalTypes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GStreamScriptSpec(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            streamIdentifier_ = s;
            break;
          }
          case 17: {

            version_ = input.readDouble();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              variables_ = new java.util.ArrayList<com.dunkware.net.proto.stream.GStreamVarSpec>();
              mutable_bitField0_ |= 0x00000004;
            }
            variables_.add(
                input.readMessage(com.dunkware.net.proto.stream.GStreamVarSpec.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              signalTypes_ = new java.util.ArrayList<com.dunkware.net.proto.stream.GEntitySignalSpec>();
              mutable_bitField0_ |= 0x00000008;
            }
            signalTypes_.add(
                input.readMessage(com.dunkware.net.proto.stream.GEntitySignalSpec.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        variables_ = java.util.Collections.unmodifiableList(variables_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        signalTypes_ = java.util.Collections.unmodifiableList(signalTypes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dunkware.net.proto.stream.GStreamProto.internal_static_dunkware_stream_GStreamScriptSpec_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dunkware.net.proto.stream.GStreamProto.internal_static_dunkware_stream_GStreamScriptSpec_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dunkware.net.proto.stream.GStreamScriptSpec.class, com.dunkware.net.proto.stream.GStreamScriptSpec.Builder.class);
  }

  private int bitField0_;
  public static final int STREAMIDENTIFIER_FIELD_NUMBER = 1;
  private volatile java.lang.Object streamIdentifier_;
  /**
   * <code>string streamIdentifier = 1;</code>
   */
  public java.lang.String getStreamIdentifier() {
    java.lang.Object ref = streamIdentifier_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      streamIdentifier_ = s;
      return s;
    }
  }
  /**
   * <code>string streamIdentifier = 1;</code>
   */
  public com.google.protobuf.ByteString
      getStreamIdentifierBytes() {
    java.lang.Object ref = streamIdentifier_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      streamIdentifier_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERSION_FIELD_NUMBER = 2;
  private double version_;
  /**
   * <code>double version = 2;</code>
   */
  public double getVersion() {
    return version_;
  }

  public static final int VARIABLES_FIELD_NUMBER = 3;
  private java.util.List<com.dunkware.net.proto.stream.GStreamVarSpec> variables_;
  /**
   * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
   */
  public java.util.List<com.dunkware.net.proto.stream.GStreamVarSpec> getVariablesList() {
    return variables_;
  }
  /**
   * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
   */
  public java.util.List<? extends com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder> 
      getVariablesOrBuilderList() {
    return variables_;
  }
  /**
   * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
   */
  public int getVariablesCount() {
    return variables_.size();
  }
  /**
   * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
   */
  public com.dunkware.net.proto.stream.GStreamVarSpec getVariables(int index) {
    return variables_.get(index);
  }
  /**
   * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
   */
  public com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder getVariablesOrBuilder(
      int index) {
    return variables_.get(index);
  }

  public static final int SIGNALTYPES_FIELD_NUMBER = 4;
  private java.util.List<com.dunkware.net.proto.stream.GEntitySignalSpec> signalTypes_;
  /**
   * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
   */
  public java.util.List<com.dunkware.net.proto.stream.GEntitySignalSpec> getSignalTypesList() {
    return signalTypes_;
  }
  /**
   * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
   */
  public java.util.List<? extends com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder> 
      getSignalTypesOrBuilderList() {
    return signalTypes_;
  }
  /**
   * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
   */
  public int getSignalTypesCount() {
    return signalTypes_.size();
  }
  /**
   * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
   */
  public com.dunkware.net.proto.stream.GEntitySignalSpec getSignalTypes(int index) {
    return signalTypes_.get(index);
  }
  /**
   * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
   */
  public com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder getSignalTypesOrBuilder(
      int index) {
    return signalTypes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getStreamIdentifierBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, streamIdentifier_);
    }
    if (version_ != 0D) {
      output.writeDouble(2, version_);
    }
    for (int i = 0; i < variables_.size(); i++) {
      output.writeMessage(3, variables_.get(i));
    }
    for (int i = 0; i < signalTypes_.size(); i++) {
      output.writeMessage(4, signalTypes_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getStreamIdentifierBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, streamIdentifier_);
    }
    if (version_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, version_);
    }
    for (int i = 0; i < variables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, variables_.get(i));
    }
    for (int i = 0; i < signalTypes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, signalTypes_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dunkware.net.proto.stream.GStreamScriptSpec)) {
      return super.equals(obj);
    }
    com.dunkware.net.proto.stream.GStreamScriptSpec other = (com.dunkware.net.proto.stream.GStreamScriptSpec) obj;

    boolean result = true;
    result = result && getStreamIdentifier()
        .equals(other.getStreamIdentifier());
    result = result && (
        java.lang.Double.doubleToLongBits(getVersion())
        == java.lang.Double.doubleToLongBits(
            other.getVersion()));
    result = result && getVariablesList()
        .equals(other.getVariablesList());
    result = result && getSignalTypesList()
        .equals(other.getSignalTypesList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STREAMIDENTIFIER_FIELD_NUMBER;
    hash = (53 * hash) + getStreamIdentifier().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getVersion()));
    if (getVariablesCount() > 0) {
      hash = (37 * hash) + VARIABLES_FIELD_NUMBER;
      hash = (53 * hash) + getVariablesList().hashCode();
    }
    if (getSignalTypesCount() > 0) {
      hash = (37 * hash) + SIGNALTYPES_FIELD_NUMBER;
      hash = (53 * hash) + getSignalTypesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dunkware.net.proto.stream.GStreamScriptSpec parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dunkware.net.proto.stream.GStreamScriptSpec prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dunkware.stream.GStreamScriptSpec}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dunkware.stream.GStreamScriptSpec)
      com.dunkware.net.proto.stream.GStreamScriptSpecOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dunkware.net.proto.stream.GStreamProto.internal_static_dunkware_stream_GStreamScriptSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dunkware.net.proto.stream.GStreamProto.internal_static_dunkware_stream_GStreamScriptSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dunkware.net.proto.stream.GStreamScriptSpec.class, com.dunkware.net.proto.stream.GStreamScriptSpec.Builder.class);
    }

    // Construct using com.dunkware.net.proto.stream.GStreamScriptSpec.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getVariablesFieldBuilder();
        getSignalTypesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      streamIdentifier_ = "";

      version_ = 0D;

      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        variablesBuilder_.clear();
      }
      if (signalTypesBuilder_ == null) {
        signalTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        signalTypesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dunkware.net.proto.stream.GStreamProto.internal_static_dunkware_stream_GStreamScriptSpec_descriptor;
    }

    @java.lang.Override
    public com.dunkware.net.proto.stream.GStreamScriptSpec getDefaultInstanceForType() {
      return com.dunkware.net.proto.stream.GStreamScriptSpec.getDefaultInstance();
    }

    @java.lang.Override
    public com.dunkware.net.proto.stream.GStreamScriptSpec build() {
      com.dunkware.net.proto.stream.GStreamScriptSpec result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.dunkware.net.proto.stream.GStreamScriptSpec buildPartial() {
      com.dunkware.net.proto.stream.GStreamScriptSpec result = new com.dunkware.net.proto.stream.GStreamScriptSpec(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.streamIdentifier_ = streamIdentifier_;
      result.version_ = version_;
      if (variablesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          variables_ = java.util.Collections.unmodifiableList(variables_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.variables_ = variables_;
      } else {
        result.variables_ = variablesBuilder_.build();
      }
      if (signalTypesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          signalTypes_ = java.util.Collections.unmodifiableList(signalTypes_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.signalTypes_ = signalTypes_;
      } else {
        result.signalTypes_ = signalTypesBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dunkware.net.proto.stream.GStreamScriptSpec) {
        return mergeFrom((com.dunkware.net.proto.stream.GStreamScriptSpec)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dunkware.net.proto.stream.GStreamScriptSpec other) {
      if (other == com.dunkware.net.proto.stream.GStreamScriptSpec.getDefaultInstance()) return this;
      if (!other.getStreamIdentifier().isEmpty()) {
        streamIdentifier_ = other.streamIdentifier_;
        onChanged();
      }
      if (other.getVersion() != 0D) {
        setVersion(other.getVersion());
      }
      if (variablesBuilder_ == null) {
        if (!other.variables_.isEmpty()) {
          if (variables_.isEmpty()) {
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureVariablesIsMutable();
            variables_.addAll(other.variables_);
          }
          onChanged();
        }
      } else {
        if (!other.variables_.isEmpty()) {
          if (variablesBuilder_.isEmpty()) {
            variablesBuilder_.dispose();
            variablesBuilder_ = null;
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000004);
            variablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariablesFieldBuilder() : null;
          } else {
            variablesBuilder_.addAllMessages(other.variables_);
          }
        }
      }
      if (signalTypesBuilder_ == null) {
        if (!other.signalTypes_.isEmpty()) {
          if (signalTypes_.isEmpty()) {
            signalTypes_ = other.signalTypes_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSignalTypesIsMutable();
            signalTypes_.addAll(other.signalTypes_);
          }
          onChanged();
        }
      } else {
        if (!other.signalTypes_.isEmpty()) {
          if (signalTypesBuilder_.isEmpty()) {
            signalTypesBuilder_.dispose();
            signalTypesBuilder_ = null;
            signalTypes_ = other.signalTypes_;
            bitField0_ = (bitField0_ & ~0x00000008);
            signalTypesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSignalTypesFieldBuilder() : null;
          } else {
            signalTypesBuilder_.addAllMessages(other.signalTypes_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dunkware.net.proto.stream.GStreamScriptSpec parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dunkware.net.proto.stream.GStreamScriptSpec) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object streamIdentifier_ = "";
    /**
     * <code>string streamIdentifier = 1;</code>
     */
    public java.lang.String getStreamIdentifier() {
      java.lang.Object ref = streamIdentifier_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        streamIdentifier_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string streamIdentifier = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStreamIdentifierBytes() {
      java.lang.Object ref = streamIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        streamIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string streamIdentifier = 1;</code>
     */
    public Builder setStreamIdentifier(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      streamIdentifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string streamIdentifier = 1;</code>
     */
    public Builder clearStreamIdentifier() {
      
      streamIdentifier_ = getDefaultInstance().getStreamIdentifier();
      onChanged();
      return this;
    }
    /**
     * <code>string streamIdentifier = 1;</code>
     */
    public Builder setStreamIdentifierBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      streamIdentifier_ = value;
      onChanged();
      return this;
    }

    private double version_ ;
    /**
     * <code>double version = 2;</code>
     */
    public double getVersion() {
      return version_;
    }
    /**
     * <code>double version = 2;</code>
     */
    public Builder setVersion(double value) {
      
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double version = 2;</code>
     */
    public Builder clearVersion() {
      
      version_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.dunkware.net.proto.stream.GStreamVarSpec> variables_ =
      java.util.Collections.emptyList();
    private void ensureVariablesIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        variables_ = new java.util.ArrayList<com.dunkware.net.proto.stream.GStreamVarSpec>(variables_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dunkware.net.proto.stream.GStreamVarSpec, com.dunkware.net.proto.stream.GStreamVarSpec.Builder, com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder> variablesBuilder_;

    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public java.util.List<com.dunkware.net.proto.stream.GStreamVarSpec> getVariablesList() {
      if (variablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variables_);
      } else {
        return variablesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public int getVariablesCount() {
      if (variablesBuilder_ == null) {
        return variables_.size();
      } else {
        return variablesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public com.dunkware.net.proto.stream.GStreamVarSpec getVariables(int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);
      } else {
        return variablesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder setVariables(
        int index, com.dunkware.net.proto.stream.GStreamVarSpec value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.set(index, value);
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder setVariables(
        int index, com.dunkware.net.proto.stream.GStreamVarSpec.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.set(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder addVariables(com.dunkware.net.proto.stream.GStreamVarSpec value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder addVariables(
        int index, com.dunkware.net.proto.stream.GStreamVarSpec value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(index, value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder addVariables(
        com.dunkware.net.proto.stream.GStreamVarSpec.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder addVariables(
        int index, com.dunkware.net.proto.stream.GStreamVarSpec.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder addAllVariables(
        java.lang.Iterable<? extends com.dunkware.net.proto.stream.GStreamVarSpec> values) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variables_);
        onChanged();
      } else {
        variablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder clearVariables() {
      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        variablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public Builder removeVariables(int index) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.remove(index);
        onChanged();
      } else {
        variablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public com.dunkware.net.proto.stream.GStreamVarSpec.Builder getVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder getVariablesOrBuilder(
        int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);  } else {
        return variablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public java.util.List<? extends com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder> 
         getVariablesOrBuilderList() {
      if (variablesBuilder_ != null) {
        return variablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variables_);
      }
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public com.dunkware.net.proto.stream.GStreamVarSpec.Builder addVariablesBuilder() {
      return getVariablesFieldBuilder().addBuilder(
          com.dunkware.net.proto.stream.GStreamVarSpec.getDefaultInstance());
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public com.dunkware.net.proto.stream.GStreamVarSpec.Builder addVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().addBuilder(
          index, com.dunkware.net.proto.stream.GStreamVarSpec.getDefaultInstance());
    }
    /**
     * <code>repeated .dunkware.stream.GStreamVarSpec variables = 3;</code>
     */
    public java.util.List<com.dunkware.net.proto.stream.GStreamVarSpec.Builder> 
         getVariablesBuilderList() {
      return getVariablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dunkware.net.proto.stream.GStreamVarSpec, com.dunkware.net.proto.stream.GStreamVarSpec.Builder, com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder> 
        getVariablesFieldBuilder() {
      if (variablesBuilder_ == null) {
        variablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.dunkware.net.proto.stream.GStreamVarSpec, com.dunkware.net.proto.stream.GStreamVarSpec.Builder, com.dunkware.net.proto.stream.GStreamVarSpecOrBuilder>(
                variables_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        variables_ = null;
      }
      return variablesBuilder_;
    }

    private java.util.List<com.dunkware.net.proto.stream.GEntitySignalSpec> signalTypes_ =
      java.util.Collections.emptyList();
    private void ensureSignalTypesIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        signalTypes_ = new java.util.ArrayList<com.dunkware.net.proto.stream.GEntitySignalSpec>(signalTypes_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dunkware.net.proto.stream.GEntitySignalSpec, com.dunkware.net.proto.stream.GEntitySignalSpec.Builder, com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder> signalTypesBuilder_;

    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public java.util.List<com.dunkware.net.proto.stream.GEntitySignalSpec> getSignalTypesList() {
      if (signalTypesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(signalTypes_);
      } else {
        return signalTypesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public int getSignalTypesCount() {
      if (signalTypesBuilder_ == null) {
        return signalTypes_.size();
      } else {
        return signalTypesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public com.dunkware.net.proto.stream.GEntitySignalSpec getSignalTypes(int index) {
      if (signalTypesBuilder_ == null) {
        return signalTypes_.get(index);
      } else {
        return signalTypesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder setSignalTypes(
        int index, com.dunkware.net.proto.stream.GEntitySignalSpec value) {
      if (signalTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSignalTypesIsMutable();
        signalTypes_.set(index, value);
        onChanged();
      } else {
        signalTypesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder setSignalTypes(
        int index, com.dunkware.net.proto.stream.GEntitySignalSpec.Builder builderForValue) {
      if (signalTypesBuilder_ == null) {
        ensureSignalTypesIsMutable();
        signalTypes_.set(index, builderForValue.build());
        onChanged();
      } else {
        signalTypesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder addSignalTypes(com.dunkware.net.proto.stream.GEntitySignalSpec value) {
      if (signalTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSignalTypesIsMutable();
        signalTypes_.add(value);
        onChanged();
      } else {
        signalTypesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder addSignalTypes(
        int index, com.dunkware.net.proto.stream.GEntitySignalSpec value) {
      if (signalTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSignalTypesIsMutable();
        signalTypes_.add(index, value);
        onChanged();
      } else {
        signalTypesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder addSignalTypes(
        com.dunkware.net.proto.stream.GEntitySignalSpec.Builder builderForValue) {
      if (signalTypesBuilder_ == null) {
        ensureSignalTypesIsMutable();
        signalTypes_.add(builderForValue.build());
        onChanged();
      } else {
        signalTypesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder addSignalTypes(
        int index, com.dunkware.net.proto.stream.GEntitySignalSpec.Builder builderForValue) {
      if (signalTypesBuilder_ == null) {
        ensureSignalTypesIsMutable();
        signalTypes_.add(index, builderForValue.build());
        onChanged();
      } else {
        signalTypesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder addAllSignalTypes(
        java.lang.Iterable<? extends com.dunkware.net.proto.stream.GEntitySignalSpec> values) {
      if (signalTypesBuilder_ == null) {
        ensureSignalTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, signalTypes_);
        onChanged();
      } else {
        signalTypesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder clearSignalTypes() {
      if (signalTypesBuilder_ == null) {
        signalTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        signalTypesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public Builder removeSignalTypes(int index) {
      if (signalTypesBuilder_ == null) {
        ensureSignalTypesIsMutable();
        signalTypes_.remove(index);
        onChanged();
      } else {
        signalTypesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public com.dunkware.net.proto.stream.GEntitySignalSpec.Builder getSignalTypesBuilder(
        int index) {
      return getSignalTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder getSignalTypesOrBuilder(
        int index) {
      if (signalTypesBuilder_ == null) {
        return signalTypes_.get(index);  } else {
        return signalTypesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public java.util.List<? extends com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder> 
         getSignalTypesOrBuilderList() {
      if (signalTypesBuilder_ != null) {
        return signalTypesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(signalTypes_);
      }
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public com.dunkware.net.proto.stream.GEntitySignalSpec.Builder addSignalTypesBuilder() {
      return getSignalTypesFieldBuilder().addBuilder(
          com.dunkware.net.proto.stream.GEntitySignalSpec.getDefaultInstance());
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public com.dunkware.net.proto.stream.GEntitySignalSpec.Builder addSignalTypesBuilder(
        int index) {
      return getSignalTypesFieldBuilder().addBuilder(
          index, com.dunkware.net.proto.stream.GEntitySignalSpec.getDefaultInstance());
    }
    /**
     * <code>repeated .dunkware.stream.GEntitySignalSpec signalTypes = 4;</code>
     */
    public java.util.List<com.dunkware.net.proto.stream.GEntitySignalSpec.Builder> 
         getSignalTypesBuilderList() {
      return getSignalTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.dunkware.net.proto.stream.GEntitySignalSpec, com.dunkware.net.proto.stream.GEntitySignalSpec.Builder, com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder> 
        getSignalTypesFieldBuilder() {
      if (signalTypesBuilder_ == null) {
        signalTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.dunkware.net.proto.stream.GEntitySignalSpec, com.dunkware.net.proto.stream.GEntitySignalSpec.Builder, com.dunkware.net.proto.stream.GEntitySignalSpecOrBuilder>(
                signalTypes_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        signalTypes_ = null;
      }
      return signalTypesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dunkware.stream.GStreamScriptSpec)
  }

  // @@protoc_insertion_point(class_scope:dunkware.stream.GStreamScriptSpec)
  private static final com.dunkware.net.proto.stream.GStreamScriptSpec DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dunkware.net.proto.stream.GStreamScriptSpec();
  }

  public static com.dunkware.net.proto.stream.GStreamScriptSpec getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GStreamScriptSpec>
      PARSER = new com.google.protobuf.AbstractParser<GStreamScriptSpec>() {
    @java.lang.Override
    public GStreamScriptSpec parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GStreamScriptSpec(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GStreamScriptSpec> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GStreamScriptSpec> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.dunkware.net.proto.stream.GStreamScriptSpec getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

