/*
 * Generic Data Schema
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.dunkware.generic.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * GenEntity
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-05-25T05:52:21.898704711Z[GMT]")

public class GenEntity {
  @SerializedName("type")
  private GenEntityType type = null;

  @SerializedName("values")
  private Map<String, Object> values = null;

  public GenEntity type(GenEntityType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public GenEntityType getType() {
    return type;
  }

  public void setType(GenEntityType type) {
    this.type = type;
  }

  public GenEntity values(Map<String, Object> values) {
    this.values = values;
    return this;
  }

  public GenEntity putValuesItem(String key, Object valuesItem) {
    if (this.values == null) {
      this.values = new HashMap<String, Object>();
    }
    this.values.put(key, valuesItem);
    return this;
  }

   /**
   * A map of attribute identifiers to their actual values.
   * @return values
  **/
  @Schema(description = "A map of attribute identifiers to their actual values.")
  public Map<String, Object> getValues() {
    return values;
  }

  public void setValues(Map<String, Object> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenEntity genEntity = (GenEntity) o;
    return Objects.equals(this.type, genEntity.type) &&
        Objects.equals(this.values, genEntity.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenEntity {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
