/*
 * Generic Data Schema
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.dunkware.generic.model;

import java.io.IOException;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Enumeration of generic data types.
 */
@JsonAdapter(GenDataType.Adapter.class)
public enum GenDataType {
  @SerializedName("Integer")
  INTEGER("Integer"),
  @SerializedName("Double")
  DOUBLE("Double"),
  @SerializedName("String")
  STRING("String"),
  @SerializedName("Boolean")
  BOOLEAN("Boolean"),
  @SerializedName("GenTime")
  GENTIME("GenTime"),
  @SerializedName("GenDate")
  GENDATE("GenDate"),
  @SerializedName("GenDateTime")
  GENDATETIME("GenDateTime");

  private String value;

  GenDataType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static GenDataType fromValue(String input) {
    for (GenDataType b : GenDataType.values()) {
      if (b.value.equals(input)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<GenDataType> {
    @Override
    public void write(final JsonWriter jsonWriter, final GenDataType enumeration) throws IOException {
      jsonWriter.value(String.valueOf(enumeration.getValue()));
    }

    @Override
    public GenDataType read(final JsonReader jsonReader) throws IOException {
      Object value = jsonReader.nextString();
      return GenDataType.fromValue((String)(value));
    }
  }
}
