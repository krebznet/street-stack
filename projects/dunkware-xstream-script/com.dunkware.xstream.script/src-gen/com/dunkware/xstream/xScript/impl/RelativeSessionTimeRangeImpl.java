/**
 * generated by Xtext 2.21.0
 */
package com.dunkware.xstream.xScript.impl;

import com.dunkware.xstream.xScript.RelativeSessionTimeRange;
import com.dunkware.xstream.xScript.SessionTimeUnit;
import com.dunkware.xstream.xScript.XScriptPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relative Session Time Range</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.dunkware.xstream.xScript.impl.RelativeSessionTimeRangeImpl#getRelativeVale <em>Relative Vale</em>}</li>
 *   <li>{@link com.dunkware.xstream.xScript.impl.RelativeSessionTimeRangeImpl#getTimeUnit <em>Time Unit</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelativeSessionTimeRangeImpl extends SessionTimeRangeImpl implements RelativeSessionTimeRange
{
  /**
   * The default value of the '{@link #getRelativeVale() <em>Relative Vale</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelativeVale()
   * @generated
   * @ordered
   */
  protected static final int RELATIVE_VALE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRelativeVale() <em>Relative Vale</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelativeVale()
   * @generated
   * @ordered
   */
  protected int relativeVale = RELATIVE_VALE_EDEFAULT;

  /**
   * The default value of the '{@link #getTimeUnit() <em>Time Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeUnit()
   * @generated
   * @ordered
   */
  protected static final SessionTimeUnit TIME_UNIT_EDEFAULT = SessionTimeUnit.SEC;

  /**
   * The cached value of the '{@link #getTimeUnit() <em>Time Unit</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeUnit()
   * @generated
   * @ordered
   */
  protected SessionTimeUnit timeUnit = TIME_UNIT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelativeSessionTimeRangeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return XScriptPackage.Literals.RELATIVE_SESSION_TIME_RANGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRelativeVale()
  {
    return relativeVale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelativeVale(int newRelativeVale)
  {
    int oldRelativeVale = relativeVale;
    relativeVale = newRelativeVale;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XScriptPackage.RELATIVE_SESSION_TIME_RANGE__RELATIVE_VALE, oldRelativeVale, relativeVale));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SessionTimeUnit getTimeUnit()
  {
    return timeUnit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTimeUnit(SessionTimeUnit newTimeUnit)
  {
    SessionTimeUnit oldTimeUnit = timeUnit;
    timeUnit = newTimeUnit == null ? TIME_UNIT_EDEFAULT : newTimeUnit;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, XScriptPackage.RELATIVE_SESSION_TIME_RANGE__TIME_UNIT, oldTimeUnit, timeUnit));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__RELATIVE_VALE:
        return getRelativeVale();
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__TIME_UNIT:
        return getTimeUnit();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__RELATIVE_VALE:
        setRelativeVale((Integer)newValue);
        return;
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__TIME_UNIT:
        setTimeUnit((SessionTimeUnit)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__RELATIVE_VALE:
        setRelativeVale(RELATIVE_VALE_EDEFAULT);
        return;
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__TIME_UNIT:
        setTimeUnit(TIME_UNIT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__RELATIVE_VALE:
        return relativeVale != RELATIVE_VALE_EDEFAULT;
      case XScriptPackage.RELATIVE_SESSION_TIME_RANGE__TIME_UNIT:
        return timeUnit != TIME_UNIT_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (relativeVale: ");
    result.append(relativeVale);
    result.append(", timeUnit: ");
    result.append(timeUnit);
    result.append(')');
    return result.toString();
  }

} //RelativeSessionTimeRangeImpl
