####
# Profiles
######
spring.profiles.active=DunkNet,StreamCapture,StreamRunner,StreamController,TickService,StreamSessionWorker,Cluster,AutoSearch


####
# Data Source
######
spring.datasource.url=jdbc:mysql://localhost:3306/dunkstreet?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=3goldPigs1!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update


dunknet.node.id=streamcontroller
dunknet.node.profiles=streamcontroller
dunknet.brokers=localhost:29092
dunknet.cluster.id=local

#dunknet.node.id=controller
#dunknet.node.profiles=time,feed
#dunknet.brokers=172.16.16.55:30100
#dunknet.cluster.id=testrock

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.jdbc.batch_size=10000
#session.worker.node.count=8





#####
## Multipart
#####
spring.servlet.multipart.max-file-size=250MB
spring.servlet.multipart.max-request-size=250MB

### Mongo Spring
#spring.data.mongodb.database=dunkstreet
#spring.data.mongodb.username=root
#spring.data.mongodb.password=rootpassword
#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.host=192.168.23.110
#spring.data.mongodb.port=27017
#spring.data.mongodb=DEBUG
#spring.data.mongodb.auto-index-creation=true
spring.data.mongodb.uri=mongodb://root:rootpassword@localhost:27017/?authSource=admin

####mak
## Server Port!
#####
server.port=8086



config.stats.db.host=localhost
config.stats.db.schema=dunkstreet
config.stats.db.port=3306
config.stats.db.user=root
config.stats.db.pass=3goldPigs1!
config.stats.db.pool.size=10

config.kafka.brokers=localhost:29092
config.kafka.group.id=streamstats
config.kafka.consumer.id=streamstats1

config.warehouse.url=mongodb://root:rootpassword@localhost:27017/?authSource=admin
config.warehouse.database=dunkstreet
config.core.url=mongodb://root:rootpassword@localhost:27017/?authSource=admin
config.core.database=dunkstreet




dunknet.node.id=streamcontroller
dunknet.node.profiles=streamcontroller
dunknet.brokers=localhost:29092
dunknet.cluster.id=local


#### App Config Variables #####
session.node.ticker.limit=100
streams.schedule.enable=true


##
## Is this even working?


management.endpoints.web.exposure.include=hawtio,jolokia,health,info,metrics,loggers,prometheus
management.endpoint.health.show-details=always

hawtio.authenticationEnabled=false


#########
# Tick Service Endpoint
##########
#tick.service.endpoint=http://localhost:8987
tick.service.endpoint=http://172.16.16.55:31890
#
####
# Executor Service
#####
exectuor.timeout.value=30
executor.timeout.unit=Second
executor.size.core=5
executor.size.max=15
executor.name=ServerPool

## add timeout to that shit
spring.mvc.async.request-timeout=5600000


spring.datasource.hikari.connection-timeout=25000
spring.datasource.hikari.minimum-idle=544
spring.datasource.hikari.idle-timeout=40000
spring.datasource.hikari.max-lifetime=4000000
spring.datasource.hikari.keepalive-time=2000
spring.datasource.hikari.auto-commit=true
## app properties
spring.datasource.hikari.maximum-pool-size=10



spring.main.web-application-type=reactive



### connection pool ##
spring.datasource.hikari.maximum-pool-size=100

