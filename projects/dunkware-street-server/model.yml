openapi: 3.0.6
info:
  title: Dunkware Street Model
  description: Schema for Dunkware Street Model components.
  version: 1.1.0

servers:
  - url: https://api.dunkware.com/v1
    description: Production server

paths:
  /api/exchanges:
    get:
      summary: Get a list of all exchanges
      responses:
        '200':
          description: A list of exchanges
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeRef'

  /api/exchanges/{exchangeId}/tickers:
    get:
      summary: Get all tickers for a specific exchange
      parameters:
        - name: exchangeId
          in: path
          required: true
          description: Numeric identifier of the exchange
          schema:
            type: integer
      responses:
        '200':
          description: A list of tickers for the exchange
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TickerRef'
        '404':
          description: Exchange not found
        '500':
          description: Internal server error

  /api/exchanges/{exchangeId}/tickers/{tickerId}/variables:
    get:
      summary: Get all variables for a specific ticker
      parameters:
        - name: exchangeId
          in: path
          required: true
          description: Numeric identifier of the exchange
          schema:
            type: integer
        - name: tickerId
          in: path
          required: true
          description: Numeric identifier of the ticker
          schema:
            type: integer
      responses:
        '200':
          description: A list of variables for the ticker
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TickerVariable'
        '404':
          description: Ticker or Exchange not found
        '500':
          description: Internal server error

  /api/exchanges/{exchangeId}/sessions:
    get:
      summary: Get all sessions for a specific exchange
      parameters:
        - name: exchangeId
          in: path
          required: true
          description: Numeric identifier of the exchange
          schema:
            type: integer
      responses:
        '200':
          description: A list of sessions for the exchange
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExchangeSession'
        '404':
          description: Exchange not found
        '500':
          description: Internal server error

  /api/exchanges/{exchangeId}/tickers/{tickerId}/sessions:
    get:
      summary: Get all sessions for a specific ticker
      parameters:
        - name: exchangeId
          in: path
          required: true
          description: Numeric identifier of the exchange
          schema:
            type: integer
        - name: tickerId
          in: path
          required: true
          description: Numeric identifier of the ticker
          schema:
            type: integer
      responses:
        '200':
          description: A list of sessions for the ticker
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TickerSession'
        '404':
          description: Ticker or Exchange not found
        '500':
          description: Internal server error

  /api/exchanges/{exchangeId}/tickers/{tickerId}/sessions/{sessionId}/stats:
    get:
      summary: Get all stats for a specific ticker session
      parameters:
        - name: exchangeId
          in: path
          required: true
          description: Numeric identifier of the exchange
          schema:
            type: integer
        - name: tickerId
          in: path
          required: true
          description: Numeric identifier of the ticker
          schema:
            type: integer
        - name: sessionId
          in: path
          required: true
          description: Numeric identifier of the ticker session
          schema:
            type: integer
      responses:
        '200':
          description: A list of stats for the ticker session
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TickerStat'
        '404':
          description: Ticker, Exchange, or Session not found
        '500':
          description: Internal server error

  /api/exchanges/{exchangeId}/tickers/{tickerId}/stats/{statId}:
    get:
      summary: Get a specific stat for a specific exchange ticker
      parameters:
        - name: exchangeId
          in: path
          required: true
          description: Numeric identifier of the exchange
          schema:
            type: integer
        - name: tickerId
          in: path
          required: true
          description: Numeric identifier of the ticker
          schema:
            type: integer
        - name: statId
          in: path
          required: true
          description: Numeric identifier of the stat
          schema:
            type: integer
      responses:
        '200':
          description: Details of the specific stat for the exchange ticker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TickerStat'
        '404':
          description: Ticker, Exchange, or Stat not found
        '500':
          description: Internal server error

components:
  schemas:
    ExchangeRef:
      type: object
      properties:
        id:
          type: integer
          description: Numeric identifier for the exchange
        identifier:
          type: string
          description: String identifier for the exchange
        name:
          type: string
          description: Name of the exchange
        tickers:
          type: integer
          description: Number of tickers associated with the exchange
        status:
          type: string
          description: Status of the exchange
          enum:
            - Open
            - Closed
            - Premarket
            - Aftermarket
      required:
        - id
        - identifier
        - name
        - tickers
        - status

    ExchangeStatus:
      type: string
      enum:
        - Open
        - Closed
        - Premarket
        - Aftermarket
      description: Status of the exchange

    TickerRef:
      type: object
      properties:
        id:
          type: integer
          description: Numeric identifier for the ticker
        identifier:
          type: string
          description: String identifier for the ticker
        exchange:
          type: integer
          description: Numeric identifier for the exchange
        name:
          type: string
          description: Name of the ticker
        sessionCount:
          type: integer
          description: Number of sessions associated with the ticker
        baseVersion:
          type: number
          format: double
          description: Base version of the ticker
      required:
        - id
        - identifier
        - exchange
        - name
        - sessionCount
        - baseVersion

    TickerVariable:
      type: object
      properties:
        id:
          type: integer
          description: Numeric identifier for the ticker variable
        identifier:
          type: string
          description: String identifier for the ticker variable
        name:
          type: string
          description: Name of the ticker variable
        group:
          type: string
          description: Group to which the ticker variable belongs
        dataType:
          $ref: '#/components/schemas/GenDataType'
          description: Data type of the ticker variable
        dataFormat:
          $ref: '#/components/schemas/GenDataFormat'
          description: Data format of the ticker variable
        baseVersion:
          type: number
          format: double
          description: Base version of the ticker variable
        sessionCount:
          type: integer
          description: Number of sessions associated with the ticker variable
        value:
          oneOf:
            - type: integer
            - type: number
            - type: string
            - type: boolean
          description: Value of the ticker variable, type depends on the dataType field
      required:
        - id
        - identifier
        - name
        - group
        - dataType
        - dataFormat
        - baseVersion
        - sessionCount

    ExchangeSession:
      type: object
      properties:
        id:
          type: integer
          description: Numeric identifier for the exchange session
        exchangeId:
          type: integer
          description: Numeric identifier for the exchange
        startTime:
          $ref: '#/components/schemas/GenTime'
          description: Start time of the exchange session
        stopTime:
          $ref: '#/components/schemas/GenTime'
          description: Stop time of the exchange session
        date:
          $ref: '#/components/schemas/GenDate'
          description: Date of the exchange session
        entityCount:
          type: integer
          description: Number of entities associated with the session
        version:
          type: number
          format: double
          description: Version of the exchange session
      required:
        - id
        - exchangeId
        - startTime
        - stopTime
        - date
        - entityCount
        - version

    TickerSession:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/GenDate'
          description: Date of the ticker session
        startTime:
          $ref: '#/components/schemas/GenTime'
          description: Start time of the ticker session
        stopTime:
          $ref: '#/components/schemas/GenTime'
          description: Stop time of the ticker session
        signalCount:
          type: integer
          description: Number of signals associated with the session
        version:
          type: number
          format: double
          description: Version of the ticker session
      required:
        - date
        - startTime
        - stopTime
        - signalCount
        - version

    TickerStat:
      type: object
      properties:
        statId:
          type: integer
          description: Numeric identifier for the statistic
        statName:
          type: string
          description: Name of the statistic
        tickerId:
          type: integer
          description: Numeric identifier for the ticker
        exchangeId:
          type: integer
          description: Numeric identifier for the exchange
        elementId:
          type: integer
          description: Numeric identifier for the element
        statValue:
          type: number
          format: double
          description: Value of the statistic
        time:
          $ref: '#/components/schemas/GenTime'
          description: Optional time associated with the statistic
      required:
        - statId
        - statName
        - tickerId
        - exchangeId
        - elementId
        - statValue

    ExchangeLayer:
      type: object
      properties:
        id:
          type: integer
          description: Numeric identifier for the exchange layer
        exchangeId:
          type: integer
          description: Numeric identifier for the exchange
        indexId:
          type: integer
          description: Numeric identifier for the index
        releaseDate:
          $ref: '#/components/schemas/GenDate'
          description: Release date of the exchange layer
      required:
        - id
        - exchangeId
        - indexId
        - releaseDate

    GenDate:
      type: object
      properties:
        year:
          type: integer
          description: The year component of the date.
        month:
          type: integer
          description: The month component of the date.
        dayOfMonth:
          type: integer
          description: The day of the month component.
      required:
        - year
        - month
        - dayOfMonth
      example:
        year: 2024
        month: 5
        dayOfMonth: 25

    GenTime:
      type: object
      properties:
        hour:
          type: integer
          description: The hour component of the time.
        minute:
          type: integer
          description: The minute component of the time.
        second:
          type: integer
          description: The second component of the time.
        timeZone:
          type: string
          description: Optional string representing the time zone.
      required:
        - hour
        - minute
        - second
      example:
        hour: 14
        minute: 30
        second: 0
        timeZone: "UTC"

    GenTimeUnit:
      type: object
      properties:
        seconds:
          type: integer
          description: The number of seconds.
        minutes:
          type: integer
          description: The number of minutes.
        hours:
          type: integer
          description: The number of hours.
        days:
          type: integer
          description: The number of days.
      example:
        seconds: 30
        minutes: 45
        hours: 2
        days: 1

    GenDateTime:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/GenDate'
        time:
          $ref: '#/components/schemas/GenTime'
      example:
        date:
          year: 2024
          month: 5
          dayOfMonth: 25
        time:
          hour: 14
          minute: 30
          second: 0
          timeZone: "UTC"

    GenTimeRangeType:
      type: string
      enum:
        - Absolute
        - Relative

    GenTimeRange:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GenTimeRangeType'
        startDate:
          type: string
          format: date-time
          description: Start date and time of the range.
        endDate:
          type: string
          format: date-time
          description: End date and time of the range.
        relativeValue:
          type: integer
          description: The value for the relative time range.
        relativeTimeUnit:
          $ref: '#/components/schemas/GenTimeUnit'
        hasTimeWindow:
          type: boolean
          description: Boolean indicating if a specific time window is included in the range.
        timeWindow:
          $ref: '#/components/schemas/GenTimeRange'
      required:
        - type
      example:
        type: Relative
        relativeValue: 5
        relativeTimeUnit:
          minutes: 5
        hasTimeWindow: true
        timeWindow:
          type: Absolute
          startDate: "2023-05-25T14:00:00Z"
          endDate: "2023-05-25T14:30:00Z"

    GenDateTimeRange:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/GenDateTime'
        end:
          $ref: '#/components/schemas/GenDateTime'
        hasTimeWindow:
          type: boolean
          description: Boolean indicating if a specific time window is included in the range.
        timeWindow:
          $ref: '#/components/schemas/GenTimeRange'
      required:
        - start
        - end
      example:
        start:
          date:
            year: 2024
            month: 5
            dayOfMonth: 25
          time:
            hour: 14
            minute: 30
            second: 0
            timeZone: "UTC"
        end:
          date:
            year: 2024
            month: 5
            dayOfMonth: 25
          time:
            hour: 15
            minute: 30
            second: 0
            timeZone: "UTC"
        hasTimeWindow: true
        timeWindow:
          type: Absolute
          startDate: "2023-05-25T14:00:00Z"
          endDate: "2023-05-25T14:30:00Z"

    GenAbsoluteDateRange:
      type: object
      properties:
        startDate:
          $ref: '#/components/schemas/GenDate'
        endDate:
          $ref: '#/components/schemas/GenDate'
        hasTimeWindow:
          type: boolean
          description: Boolean indicating if a specific time window is included in the range.
        timeWindow:
          $ref: '#/components/schemas/GenTimeRange'
      required:
        - startDate
        - endDate
      example:
        startDate:
          year: 2024
          month: 5
          dayOfMonth: 25
        endDate:
          year: 2024
          month: 5
          dayOfMonth: 26
        hasTimeWindow: true
        timeWindow:
          type: Absolute
          startDate: "2023-05-25T14:00:00Z"
          endDate: "2023-05-25T14:30:00Z"

    GenAbsoluteTimeRange:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/GenTime'
        endTime:
          $ref: '#/components/schemas/GenTime'
        hasTimeWindow:
          type: boolean
          description: Boolean indicating if a specific time window is included in the range.
        timeWindow:
          $ref: '#/components/schemas/GenTimeRange'
      required:
        - startTime
        - endTime
      example:
        startTime:
          hour: 9
          minute: 30
          second: 0
          timeZone: "UTC"
        endTime:
          hour: 16
          minute: 0
          second: 0
          timeZone: "UTC"
        hasTimeWindow: true
        timeWindow:
          type: Absolute
          startDate: "2023-05-25T14:00:00Z"
          endDate: "2023-05-25T14:30:00Z"

    GenOperator:
      type: string
      enum:
        - greater
        - less
        - greaterOrEqual
        - lessOrEqual
        - notEqual
        - contains
      description: Enumeration of comparison operators.
      example: greater

    GenFunction:
      type: string
      enum:
        - percentChange
        - difference
        - average
        - max
        - min
      description: Enumeration of functions for computing math expressions.
      example: average

    GenDataType:
      type: string
      enum:
        - Integer
        - Double
        - String
        - Boolean
        - GenTime
        - GenDate
        - GenDateTime
      description: Enumeration of generic data types.
      example: Integer

    GenDataFormat:
      type: object
      properties:
        formatType:
          type: string
          enum:
            - roundToDecimalPlaces
            - displayAsPercent
            - addCommas
            - truncateString
            - currency
            - abbreviateNumber
          description: The type of data formatting to apply.
        precision:
          type: integer
          description: Number of decimal places for rounding (used with roundToDecimalPlaces).
        truncateLength:
          type: integer
          description: Maximum length for truncating strings (used with truncateString).
        currencySymbol:
          type: string
          description: Symbol for currency formatting (used with currency).
        abbreviationStyle:
          type: string
          description: Style for abbreviating large numbers (used with abbreviateNumber).
      example:
        formatType: roundToDecimalPlaces
        precision: 2

    GenAttributeType:
      type: object
      properties:
        identifier:
          type: string
          description: Unique string identifier for the attribute.
        name:
          type: string
          description: User-friendly name for the attribute.
        dataType:
          $ref: '#/components/schemas/GenDataType'
          description: The data type of the attribute.
        dataFormat:
          $ref: '#/components/schemas/GenDataFormat'
          description: The data format of the attribute.

    GenEntityType:
      type: object
      properties:
        id:
          type: integer
          description: The numeric ID of the entity type.
        identifier:
          type: string
          description: Unique string identifier for the entity type.
        name:
          type: string
          description: User-friendly name for the entity type.
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/GenAttributeType'
          description: A list of attributes for the entity type.

    GenEntity:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GenEntityType'
          description: The type of the entity.
        values:
          type: object
          additionalProperties:
            oneOf:
              - type: integer
              - type: number
              - type: string
              - type: boolean
      
          description: A map of attribute identifiers to their actual values.
