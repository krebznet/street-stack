// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tick.proto

package com.dunkware.utils.tick.proto;

public final class TickProto {
  private TickProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.dunkware.stream.tick.proto.Tick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    java.util.List<com.dunkware.utils.tick.proto.TickProto.Tick.TickField> 
        getTickFieldsList();
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    com.dunkware.utils.tick.proto.TickProto.Tick.TickField getTickFields(int index);
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    int getTickFieldsCount();
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    java.util.List<? extends com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder> 
        getTickFieldsOrBuilderList();
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder getTickFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.dunkware.stream.tick.proto.Tick}
   */
  public static final class Tick extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.dunkware.stream.tick.proto.Tick)
      TickOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Tick.newBuilder() to construct.
    private Tick(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Tick() {
      tickFields_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Tick();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dunkware.utils.tick.proto.TickProto.Tick.class, com.dunkware.utils.tick.proto.TickProto.Tick.Builder.class);
    }

    /**
     * Protobuf enum {@code com.dunkware.stream.tick.proto.Tick.TickFieldType}
     */
    public enum TickFieldType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INT = 0;</code>
       */
      INT(0),
      /**
       * <code>DOUBLE = 1;</code>
       */
      DOUBLE(1),
      /**
       * <code>STRING = 2;</code>
       */
      STRING(2),
      /**
       * <code>LONG = 3;</code>
       */
      LONG(3),
      ;

      /**
       * <code>INT = 0;</code>
       */
      public static final int INT_VALUE = 0;
      /**
       * <code>DOUBLE = 1;</code>
       */
      public static final int DOUBLE_VALUE = 1;
      /**
       * <code>STRING = 2;</code>
       */
      public static final int STRING_VALUE = 2;
      /**
       * <code>LONG = 3;</code>
       */
      public static final int LONG_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TickFieldType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TickFieldType forNumber(int value) {
        switch (value) {
          case 0: return INT;
          case 1: return DOUBLE;
          case 2: return STRING;
          case 3: return LONG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TickFieldType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TickFieldType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TickFieldType>() {
              public TickFieldType findValueByNumber(int number) {
                return TickFieldType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.dunkware.utils.tick.proto.TickProto.Tick.getDescriptor().getEnumTypes().get(0);
      }

      private static final TickFieldType[] VALUES = values();

      public static TickFieldType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TickFieldType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.dunkware.stream.tick.proto.Tick.TickFieldType)
    }

    public interface TickFieldOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.dunkware.stream.tick.proto.Tick.TickField)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
       * @return Whether the type field is set.
       */
      boolean hasType();
      /**
       * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
       * @return The type.
       */
      com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType getType();

      /**
       * <code>optional int32 intValue = 15;</code>
       * @return Whether the intValue field is set.
       */
      boolean hasIntValue();
      /**
       * <code>optional int32 intValue = 15;</code>
       * @return The intValue.
       */
      int getIntValue();

      /**
       * <code>optional string stringValue = 16;</code>
       * @return Whether the stringValue field is set.
       */
      boolean hasStringValue();
      /**
       * <code>optional string stringValue = 16;</code>
       * @return The stringValue.
       */
      java.lang.String getStringValue();
      /**
       * <code>optional string stringValue = 16;</code>
       * @return The bytes for stringValue.
       */
      com.google.protobuf.ByteString
          getStringValueBytes();

      /**
       * <code>optional double doubleValue = 17;</code>
       * @return Whether the doubleValue field is set.
       */
      boolean hasDoubleValue();
      /**
       * <code>optional double doubleValue = 17;</code>
       * @return The doubleValue.
       */
      double getDoubleValue();

      /**
       * <code>optional int64 longValue = 18;</code>
       * @return Whether the longValue field is set.
       */
      boolean hasLongValue();
      /**
       * <code>optional int64 longValue = 18;</code>
       * @return The longValue.
       */
      long getLongValue();
    }
    /**
     * Protobuf type {@code com.dunkware.stream.tick.proto.Tick.TickField}
     */
    public static final class TickField extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.dunkware.stream.tick.proto.Tick.TickField)
        TickFieldOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TickField.newBuilder() to construct.
      private TickField(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TickField() {
        type_ = 0;
        stringValue_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TickField();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_TickField_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_TickField_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dunkware.utils.tick.proto.TickProto.Tick.TickField.class, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int TYPE_FIELD_NUMBER = 19;
      private int type_;
      /**
       * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
       * @return The type.
       */
      @java.lang.Override public com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType getType() {
        @SuppressWarnings("deprecation")
        com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType result = com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType.valueOf(type_);
        return result == null ? com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType.INT : result;
      }

      public static final int INTVALUE_FIELD_NUMBER = 15;
      private int intValue_;
      /**
       * <code>optional int32 intValue = 15;</code>
       * @return Whether the intValue field is set.
       */
      @java.lang.Override
      public boolean hasIntValue() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 intValue = 15;</code>
       * @return The intValue.
       */
      @java.lang.Override
      public int getIntValue() {
        return intValue_;
      }

      public static final int STRINGVALUE_FIELD_NUMBER = 16;
      private volatile java.lang.Object stringValue_;
      /**
       * <code>optional string stringValue = 16;</code>
       * @return Whether the stringValue field is set.
       */
      @java.lang.Override
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string stringValue = 16;</code>
       * @return The stringValue.
       */
      @java.lang.Override
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string stringValue = 16;</code>
       * @return The bytes for stringValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DOUBLEVALUE_FIELD_NUMBER = 17;
      private double doubleValue_;
      /**
       * <code>optional double doubleValue = 17;</code>
       * @return Whether the doubleValue field is set.
       */
      @java.lang.Override
      public boolean hasDoubleValue() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional double doubleValue = 17;</code>
       * @return The doubleValue.
       */
      @java.lang.Override
      public double getDoubleValue() {
        return doubleValue_;
      }

      public static final int LONGVALUE_FIELD_NUMBER = 18;
      private long longValue_;
      /**
       * <code>optional int64 longValue = 18;</code>
       * @return Whether the longValue field is set.
       */
      @java.lang.Override
      public boolean hasLongValue() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int64 longValue = 18;</code>
       * @return The longValue.
       */
      @java.lang.Override
      public long getLongValue() {
        return longValue_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasType()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(15, intValue_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 16, stringValue_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeDouble(17, doubleValue_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeInt64(18, longValue_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeEnum(19, type_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(15, intValue_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, stringValue_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(17, doubleValue_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(18, longValue_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(19, type_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.dunkware.utils.tick.proto.TickProto.Tick.TickField)) {
          return super.equals(obj);
        }
        com.dunkware.utils.tick.proto.TickProto.Tick.TickField other = (com.dunkware.utils.tick.proto.TickProto.Tick.TickField) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (getId()
              != other.getId()) return false;
        }
        if (hasType() != other.hasType()) return false;
        if (hasType()) {
          if (type_ != other.type_) return false;
        }
        if (hasIntValue() != other.hasIntValue()) return false;
        if (hasIntValue()) {
          if (getIntValue()
              != other.getIntValue()) return false;
        }
        if (hasStringValue() != other.hasStringValue()) return false;
        if (hasStringValue()) {
          if (!getStringValue()
              .equals(other.getStringValue())) return false;
        }
        if (hasDoubleValue() != other.hasDoubleValue()) return false;
        if (hasDoubleValue()) {
          if (java.lang.Double.doubleToLongBits(getDoubleValue())
              != java.lang.Double.doubleToLongBits(
                  other.getDoubleValue())) return false;
        }
        if (hasLongValue() != other.hasLongValue()) return false;
        if (hasLongValue()) {
          if (getLongValue()
              != other.getLongValue()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId();
        }
        if (hasType()) {
          hash = (37 * hash) + TYPE_FIELD_NUMBER;
          hash = (53 * hash) + type_;
        }
        if (hasIntValue()) {
          hash = (37 * hash) + INTVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getIntValue();
        }
        if (hasStringValue()) {
          hash = (37 * hash) + STRINGVALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
        }
        if (hasDoubleValue()) {
          hash = (37 * hash) + DOUBLEVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDoubleValue()));
        }
        if (hasLongValue()) {
          hash = (37 * hash) + LONGVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getLongValue());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.dunkware.utils.tick.proto.TickProto.Tick.TickField prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.dunkware.stream.tick.proto.Tick.TickField}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.dunkware.stream.tick.proto.Tick.TickField)
          com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_TickField_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_TickField_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.dunkware.utils.tick.proto.TickProto.Tick.TickField.class, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder.class);
        }

        // Construct using com.dunkware.stream.tick.proto.TickProto.Tick.TickField.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          intValue_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          stringValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          doubleValue_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000010);
          longValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_TickField_descriptor;
        }

        @java.lang.Override
        public com.dunkware.utils.tick.proto.TickProto.Tick.TickField getDefaultInstanceForType() {
          return com.dunkware.utils.tick.proto.TickProto.Tick.TickField.getDefaultInstance();
        }

        @java.lang.Override
        public com.dunkware.utils.tick.proto.TickProto.Tick.TickField build() {
          com.dunkware.utils.tick.proto.TickProto.Tick.TickField result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.dunkware.utils.tick.proto.TickProto.Tick.TickField buildPartial() {
          com.dunkware.utils.tick.proto.TickProto.Tick.TickField result = new com.dunkware.utils.tick.proto.TickProto.Tick.TickField(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.intValue_ = intValue_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            to_bitField0_ |= 0x00000008;
          }
          result.stringValue_ = stringValue_;
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.doubleValue_ = doubleValue_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.longValue_ = longValue_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.dunkware.utils.tick.proto.TickProto.Tick.TickField) {
            return mergeFrom((com.dunkware.utils.tick.proto.TickProto.Tick.TickField)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.dunkware.utils.tick.proto.TickProto.Tick.TickField other) {
          if (other == com.dunkware.utils.tick.proto.TickProto.Tick.TickField.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasIntValue()) {
            setIntValue(other.getIntValue());
          }
          if (other.hasStringValue()) {
            bitField0_ |= 0x00000008;
            stringValue_ = other.stringValue_;
            onChanged();
          }
          if (other.hasDoubleValue()) {
            setDoubleValue(other.getDoubleValue());
          }
          if (other.hasLongValue()) {
            setLongValue(other.getLongValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasId()) {
            return false;
          }
          if (!hasType()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  id_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 120: {
                  intValue_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 120
                case 130: {
                  stringValue_ = input.readBytes();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 130
                case 137: {
                  doubleValue_ = input.readDouble();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 137
                case 144: {
                  longValue_ = input.readInt64();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 144
                case 152: {
                  int tmpRaw = input.readEnum();
                  com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType tmpValue =
                      com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(19, tmpRaw);
                  } else {
                    type_ = tmpRaw;
                    bitField0_ |= 0x00000002;
                  }
                  break;
                } // case 152
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>required int32 id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>required int32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private int type_ = 0;
        /**
         * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
         * @return Whether the type field is set.
         */
        @java.lang.Override public boolean hasType() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
         * @return The type.
         */
        @java.lang.Override
        public com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType getType() {
          @SuppressWarnings("deprecation")
          com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType result = com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType.valueOf(type_);
          return result == null ? com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType.INT : result;
        }
        /**
         * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
         * @param value The type to set.
         * @return This builder for chaining.
         */
        public Builder setType(com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          type_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>required .com.dunkware.stream.tick.proto.Tick.TickFieldType type = 19;</code>
         * @return This builder for chaining.
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          type_ = 0;
          onChanged();
          return this;
        }

        private int intValue_ ;
        /**
         * <code>optional int32 intValue = 15;</code>
         * @return Whether the intValue field is set.
         */
        @java.lang.Override
        public boolean hasIntValue() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 intValue = 15;</code>
         * @return The intValue.
         */
        @java.lang.Override
        public int getIntValue() {
          return intValue_;
        }
        /**
         * <code>optional int32 intValue = 15;</code>
         * @param value The intValue to set.
         * @return This builder for chaining.
         */
        public Builder setIntValue(int value) {
          bitField0_ |= 0x00000004;
          intValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 intValue = 15;</code>
         * @return This builder for chaining.
         */
        public Builder clearIntValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          intValue_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object stringValue_ = "";
        /**
         * <code>optional string stringValue = 16;</code>
         * @return Whether the stringValue field is set.
         */
        public boolean hasStringValue() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional string stringValue = 16;</code>
         * @return The stringValue.
         */
        public java.lang.String getStringValue() {
          java.lang.Object ref = stringValue_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              stringValue_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string stringValue = 16;</code>
         * @return The bytes for stringValue.
         */
        public com.google.protobuf.ByteString
            getStringValueBytes() {
          java.lang.Object ref = stringValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stringValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string stringValue = 16;</code>
         * @param value The stringValue to set.
         * @return This builder for chaining.
         */
        public Builder setStringValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          stringValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string stringValue = 16;</code>
         * @return This builder for chaining.
         */
        public Builder clearStringValue() {
          bitField0_ = (bitField0_ & ~0x00000008);
          stringValue_ = getDefaultInstance().getStringValue();
          onChanged();
          return this;
        }
        /**
         * <code>optional string stringValue = 16;</code>
         * @param value The bytes for stringValue to set.
         * @return This builder for chaining.
         */
        public Builder setStringValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          stringValue_ = value;
          onChanged();
          return this;
        }

        private double doubleValue_ ;
        /**
         * <code>optional double doubleValue = 17;</code>
         * @return Whether the doubleValue field is set.
         */
        @java.lang.Override
        public boolean hasDoubleValue() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional double doubleValue = 17;</code>
         * @return The doubleValue.
         */
        @java.lang.Override
        public double getDoubleValue() {
          return doubleValue_;
        }
        /**
         * <code>optional double doubleValue = 17;</code>
         * @param value The doubleValue to set.
         * @return This builder for chaining.
         */
        public Builder setDoubleValue(double value) {
          bitField0_ |= 0x00000010;
          doubleValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double doubleValue = 17;</code>
         * @return This builder for chaining.
         */
        public Builder clearDoubleValue() {
          bitField0_ = (bitField0_ & ~0x00000010);
          doubleValue_ = 0D;
          onChanged();
          return this;
        }

        private long longValue_ ;
        /**
         * <code>optional int64 longValue = 18;</code>
         * @return Whether the longValue field is set.
         */
        @java.lang.Override
        public boolean hasLongValue() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional int64 longValue = 18;</code>
         * @return The longValue.
         */
        @java.lang.Override
        public long getLongValue() {
          return longValue_;
        }
        /**
         * <code>optional int64 longValue = 18;</code>
         * @param value The longValue to set.
         * @return This builder for chaining.
         */
        public Builder setLongValue(long value) {
          bitField0_ |= 0x00000020;
          longValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 longValue = 18;</code>
         * @return This builder for chaining.
         */
        public Builder clearLongValue() {
          bitField0_ = (bitField0_ & ~0x00000020);
          longValue_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.dunkware.stream.tick.proto.Tick.TickField)
      }

      // @@protoc_insertion_point(class_scope:com.dunkware.stream.tick.proto.Tick.TickField)
      private static final com.dunkware.utils.tick.proto.TickProto.Tick.TickField DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.dunkware.utils.tick.proto.TickProto.Tick.TickField();
      }

      public static com.dunkware.utils.tick.proto.TickProto.Tick.TickField getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<TickField>
          PARSER = new com.google.protobuf.AbstractParser<TickField>() {
        @java.lang.Override
        public TickField parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<TickField> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TickField> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.dunkware.utils.tick.proto.TickProto.Tick.TickField getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int TICKFIELDS_FIELD_NUMBER = 3;
    private java.util.List<com.dunkware.utils.tick.proto.TickProto.Tick.TickField> tickFields_;
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.dunkware.utils.tick.proto.TickProto.Tick.TickField> getTickFieldsList() {
      return tickFields_;
    }
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder> 
        getTickFieldsOrBuilderList() {
      return tickFields_;
    }
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    @java.lang.Override
    public int getTickFieldsCount() {
      return tickFields_.size();
    }
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    @java.lang.Override
    public com.dunkware.utils.tick.proto.TickProto.Tick.TickField getTickFields(int index) {
      return tickFields_.get(index);
    }
    /**
     * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
     */
    @java.lang.Override
    public com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder getTickFieldsOrBuilder(
        int index) {
      return tickFields_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTickFieldsCount(); i++) {
        if (!getTickFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, type_);
      }
      for (int i = 0; i < tickFields_.size(); i++) {
        output.writeMessage(3, tickFields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      for (int i = 0; i < tickFields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tickFields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.dunkware.utils.tick.proto.TickProto.Tick)) {
        return super.equals(obj);
      }
      com.dunkware.utils.tick.proto.TickProto.Tick other = (com.dunkware.utils.tick.proto.TickProto.Tick) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (!getTickFieldsList()
          .equals(other.getTickFieldsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (getTickFieldsCount() > 0) {
        hash = (37 * hash) + TICKFIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getTickFieldsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.dunkware.utils.tick.proto.TickProto.Tick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.dunkware.utils.tick.proto.TickProto.Tick prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.dunkware.stream.tick.proto.Tick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.dunkware.stream.tick.proto.Tick)
        com.dunkware.utils.tick.proto.TickProto.TickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.dunkware.utils.tick.proto.TickProto.Tick.class, com.dunkware.utils.tick.proto.TickProto.Tick.Builder.class);
      }

      // Construct using com.dunkware.stream.tick.proto.TickProto.Tick.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tickFieldsBuilder_ == null) {
          tickFields_ = java.util.Collections.emptyList();
        } else {
          tickFields_ = null;
          tickFieldsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.dunkware.utils.tick.proto.TickProto.internal_static_com_dunkware_stream_tick_proto_Tick_descriptor;
      }

      @java.lang.Override
      public com.dunkware.utils.tick.proto.TickProto.Tick getDefaultInstanceForType() {
        return com.dunkware.utils.tick.proto.TickProto.Tick.getDefaultInstance();
      }

      @java.lang.Override
      public com.dunkware.utils.tick.proto.TickProto.Tick build() {
        com.dunkware.utils.tick.proto.TickProto.Tick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.dunkware.utils.tick.proto.TickProto.Tick buildPartial() {
        com.dunkware.utils.tick.proto.TickProto.Tick result = new com.dunkware.utils.tick.proto.TickProto.Tick(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000001;
        }
        if (tickFieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            tickFields_ = java.util.Collections.unmodifiableList(tickFields_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tickFields_ = tickFields_;
        } else {
          result.tickFields_ = tickFieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.dunkware.utils.tick.proto.TickProto.Tick) {
          return mergeFrom((com.dunkware.utils.tick.proto.TickProto.Tick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.dunkware.utils.tick.proto.TickProto.Tick other) {
        if (other == com.dunkware.utils.tick.proto.TickProto.Tick.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (tickFieldsBuilder_ == null) {
          if (!other.tickFields_.isEmpty()) {
            if (tickFields_.isEmpty()) {
              tickFields_ = other.tickFields_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTickFieldsIsMutable();
              tickFields_.addAll(other.tickFields_);
            }
            onChanged();
          }
        } else {
          if (!other.tickFields_.isEmpty()) {
            if (tickFieldsBuilder_.isEmpty()) {
              tickFieldsBuilder_.dispose();
              tickFieldsBuilder_ = null;
              tickFields_ = other.tickFields_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tickFieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTickFieldsFieldBuilder() : null;
            } else {
              tickFieldsBuilder_.addAllMessages(other.tickFields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        for (int i = 0; i < getTickFieldsCount(); i++) {
          if (!getTickFields(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 26: {
                com.dunkware.utils.tick.proto.TickProto.Tick.TickField m =
                    input.readMessage(
                        com.dunkware.utils.tick.proto.TickProto.Tick.TickField.PARSER,
                        extensionRegistry);
                if (tickFieldsBuilder_ == null) {
                  ensureTickFieldsIsMutable();
                  tickFields_.add(m);
                } else {
                  tickFieldsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.dunkware.utils.tick.proto.TickProto.Tick.TickField> tickFields_ =
        java.util.Collections.emptyList();
      private void ensureTickFieldsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          tickFields_ = new java.util.ArrayList<com.dunkware.utils.tick.proto.TickProto.Tick.TickField>(tickFields_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dunkware.utils.tick.proto.TickProto.Tick.TickField, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder, com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder> tickFieldsBuilder_;

      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public java.util.List<com.dunkware.utils.tick.proto.TickProto.Tick.TickField> getTickFieldsList() {
        if (tickFieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tickFields_);
        } else {
          return tickFieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public int getTickFieldsCount() {
        if (tickFieldsBuilder_ == null) {
          return tickFields_.size();
        } else {
          return tickFieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public com.dunkware.utils.tick.proto.TickProto.Tick.TickField getTickFields(int index) {
        if (tickFieldsBuilder_ == null) {
          return tickFields_.get(index);
        } else {
          return tickFieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder setTickFields(
          int index, com.dunkware.utils.tick.proto.TickProto.Tick.TickField value) {
        if (tickFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTickFieldsIsMutable();
          tickFields_.set(index, value);
          onChanged();
        } else {
          tickFieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder setTickFields(
          int index, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder builderForValue) {
        if (tickFieldsBuilder_ == null) {
          ensureTickFieldsIsMutable();
          tickFields_.set(index, builderForValue.build());
          onChanged();
        } else {
          tickFieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder addTickFields(com.dunkware.utils.tick.proto.TickProto.Tick.TickField value) {
        if (tickFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTickFieldsIsMutable();
          tickFields_.add(value);
          onChanged();
        } else {
          tickFieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder addTickFields(
          int index, com.dunkware.utils.tick.proto.TickProto.Tick.TickField value) {
        if (tickFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTickFieldsIsMutable();
          tickFields_.add(index, value);
          onChanged();
        } else {
          tickFieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder addTickFields(
          com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder builderForValue) {
        if (tickFieldsBuilder_ == null) {
          ensureTickFieldsIsMutable();
          tickFields_.add(builderForValue.build());
          onChanged();
        } else {
          tickFieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder addTickFields(
          int index, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder builderForValue) {
        if (tickFieldsBuilder_ == null) {
          ensureTickFieldsIsMutable();
          tickFields_.add(index, builderForValue.build());
          onChanged();
        } else {
          tickFieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder addAllTickFields(
          java.lang.Iterable<? extends com.dunkware.utils.tick.proto.TickProto.Tick.TickField> values) {
        if (tickFieldsBuilder_ == null) {
          ensureTickFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tickFields_);
          onChanged();
        } else {
          tickFieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder clearTickFields() {
        if (tickFieldsBuilder_ == null) {
          tickFields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tickFieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public Builder removeTickFields(int index) {
        if (tickFieldsBuilder_ == null) {
          ensureTickFieldsIsMutable();
          tickFields_.remove(index);
          onChanged();
        } else {
          tickFieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder getTickFieldsBuilder(
          int index) {
        return getTickFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder getTickFieldsOrBuilder(
          int index) {
        if (tickFieldsBuilder_ == null) {
          return tickFields_.get(index);  } else {
          return tickFieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public java.util.List<? extends com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder> 
           getTickFieldsOrBuilderList() {
        if (tickFieldsBuilder_ != null) {
          return tickFieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tickFields_);
        }
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder addTickFieldsBuilder() {
        return getTickFieldsFieldBuilder().addBuilder(
            com.dunkware.utils.tick.proto.TickProto.Tick.TickField.getDefaultInstance());
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder addTickFieldsBuilder(
          int index) {
        return getTickFieldsFieldBuilder().addBuilder(
            index, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.getDefaultInstance());
      }
      /**
       * <code>repeated .com.dunkware.stream.tick.proto.Tick.TickField tickFields = 3;</code>
       */
      public java.util.List<com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder> 
           getTickFieldsBuilderList() {
        return getTickFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.dunkware.utils.tick.proto.TickProto.Tick.TickField, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder, com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder> 
          getTickFieldsFieldBuilder() {
        if (tickFieldsBuilder_ == null) {
          tickFieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.dunkware.utils.tick.proto.TickProto.Tick.TickField, com.dunkware.utils.tick.proto.TickProto.Tick.TickField.Builder, com.dunkware.utils.tick.proto.TickProto.Tick.TickFieldOrBuilder>(
                  tickFields_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          tickFields_ = null;
        }
        return tickFieldsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.dunkware.stream.tick.proto.Tick)
    }

    // @@protoc_insertion_point(class_scope:com.dunkware.stream.tick.proto.Tick)
    private static final com.dunkware.utils.tick.proto.TickProto.Tick DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.dunkware.utils.tick.proto.TickProto.Tick();
    }

    public static com.dunkware.utils.tick.proto.TickProto.Tick getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Tick>
        PARSER = new com.google.protobuf.AbstractParser<Tick>() {
      @java.lang.Override
      public Tick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Tick> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Tick> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.dunkware.utils.tick.proto.TickProto.Tick getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dunkware_stream_tick_proto_Tick_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_dunkware_stream_tick_proto_Tick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dunkware_stream_tick_proto_Tick_TickField_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_dunkware_stream_tick_proto_Tick_TickField_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ntick.proto\022\036com.dunkware.stream.tick.p" +
      "roto\"\277\002\n\004Tick\022\014\n\004type\030\001 \002(\005\022B\n\ntickField" +
      "s\030\003 \003(\0132..com.dunkware.stream.tick.proto" +
      ".Tick.TickField\032\250\001\n\tTickField\022\n\n\002id\030\001 \002(" +
      "\005\022@\n\004type\030\023 \002(\01622.com.dunkware.stream.ti" +
      "ck.proto.Tick.TickFieldType\022\020\n\010intValue\030" +
      "\017 \001(\005\022\023\n\013stringValue\030\020 \001(\t\022\023\n\013doubleValu" +
      "e\030\021 \001(\001\022\021\n\tlongValue\030\022 \001(\003\":\n\rTickFieldT" +
      "ype\022\007\n\003INT\020\000\022\n\n\006DOUBLE\020\001\022\n\n\006STRING\020\002\022\010\n\004" +
      "LONG\020\003B+\n\036com.dunkware.stream.tick.proto" +
      "B\tTickProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_dunkware_stream_tick_proto_Tick_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_dunkware_stream_tick_proto_Tick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_dunkware_stream_tick_proto_Tick_descriptor,
        new java.lang.String[] { "Type", "TickFields", });
    internal_static_com_dunkware_stream_tick_proto_Tick_TickField_descriptor =
      internal_static_com_dunkware_stream_tick_proto_Tick_descriptor.getNestedTypes().get(0);
    internal_static_com_dunkware_stream_tick_proto_Tick_TickField_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_dunkware_stream_tick_proto_Tick_TickField_descriptor,
        new java.lang.String[] { "Id", "Type", "IntValue", "StringValue", "DoubleValue", "LongValue", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
