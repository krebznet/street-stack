{"files":[{"content":"signal TRADE1(1); 
\nsignal SPY1(2);\n\nclass Momentum { \n\t\n\tfunction init() {
 \n\t\tfunctionRunner(run,3 SEC);\n\t\tfunctionRunner(spy,5 SEC);\n\t}\n\t\n\tfunction spy() { \n\t\tif(TickSymbol[0] == \"SPY\") { \n\t\t\tsignal(SPY1); \n\t\t}\n\t}\n\t\n\tfunction run() {
  \n\t\tif(Mtc30sec[0] > 50) { \n\t\t\tif(TickLast[0] > 3.0) { \n\t\t\t\tif(SmaRoc1x2min[0] > 0.49) { \n\t\t\t\t\tif(SmaRoc2x3min[0] > 0.49) {\n\t\t\t\t\t\tsignal(TRADE1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"content":"/**********************************************************\n *  TICK DATA INPUTS 100 \n * *********************************************************/  \n svar TickSymbol(1,STR) = tick(202,0,STR); // Security Trading Symbol  \n svar TickLast(2,DUB) = tick(202,1,DUB); // Current Price  \n svar TickVolume(3,LONG) = tick(202,27,LONG); // Current Volume \n svar TickTradeCount(4,INT) = tick(202,30,INT); // Current Trade Count \n\n /**********************************************************\n *  TICK DATA 1 SECOND SNAPSHOTS 200 \n * *********************************************************/\n svar TickLast1sec(100,DUB) = snapshot(TickLast[0]) 1 SEC; \n svar TickVolume1sec(101,LONG) = snapshot(TickVolume[0]) 1 SEC; \n svar TickTradeCount1sec(102,INT) = snapshot(TickTradeCount[0]) 1 SEC; \n\n/**********************************************************\n *  SIMPLE MOVING AVERAGE PRICE (SECONDS) 1,000 \n **********************************************************/\n svar Sma20sec(1020,DUB) = avg({TickLast1sec[0,19]}); // 20 sec \n svar Sma30sec(1030,DUB) = avg({TickLast1sec[0,29]}); // 30 sec \n svar Sma40sec(1040,DUB) = avg({TickLast1sec[0,39]}); // 40 sec \n svar Sma60sec(1050,DUB) = avg({TickLast1sec[0,49]}); // 50 sec\n \n/**********************************************************\n *  SIMPLE MOVING AVERAGE PRICE (MINUTES) 2,000 \n * *********************************************************/\n svar Sma1min(2001,DUB) = avg({TickLast1sec[0,59]}); // 1 minute\n svar Sma2min(2002,DUB) = avg({TickLast1sec[0,119]}); // 2 minute \n svar Sma3min(2003,DUB) = avg({TickLast1sec[0,179]}); // 3 minute \n svar Sma4min(2004,DUB) = avg({TickLast1sec[0,239]}); // 4 minute \n svar Sma5min(2005,DUB) = avg({TickLast1sec[0,299]}); // 5 minute \n\n /*******************************************************\n * MOVING VOLUME COUNTS (SECONDS) 5,000\n * *****************************************************/\n svar Mvc5sec(5005,LONG) = sub(TickVolume1sec[0],TickVolume1sec[4]);\n svar Mvc15sec(5010,LONG) = sub(TickVolume1sec[0],TickVolume1sec[14]);\n svar Mvc30sec(5030,LONG) = sub(TickVolume1sec[0],TickVolume1sec[29]);\n svar Mvc60sec(5060,LONG) = sub(TickVolume1sec[0],TickVolume1sec[59]);\n\n/*******************************************************\n * VOLUME COUNT BARS (SECONDS) 6,000\n ******************************************************/\n svar Vcb5sec(6005,LONG) = snapshot(sub(TickVolume1sec[0],TickVolume1sec[4])) 5 SEC;\n svar Vcb15sec(6015,LONG) = snapshot(sub(TickVolume1sec[0],TickVolume1sec[14])) 15 SEC;\n svar Vcb30sec(6030,LONG) = snapshot(sub(TickVolume1sec[0],TickVolume1sec[29])) 30 SEC;\n\n /*******************************************************\n * MOVING TRADE COUNTS (SECONDS) 7,000\n * *****************************************************/\n svar Mtc5sec(7005,LONG) = sub(TickTradeCount1sec[0],TickTradeCount1sec[4]);\n svar Mtc15sec(7015,LONG) = sub(TickTradeCount1sec[0],TickTradeCount1sec[14]);\n svar Mtc30sec(7030,LONG) = sub(TickTradeCount1sec[0],TickTradeCount1sec[29]);\n svar Mtc60sec(7060,LONG) = sub(TickTradeCount1sec[0],TickTradeCount1sec[59]);\n\n/*******************************************************\n * TRADE COUNT BARS (SECONDS) 8,000\n * *****************************************************/\n svar Tcb5sec(8005,LONG) = snapshot(sub(TickTradeCount1sec[0],TickTradeCount1sec[4])) 5 SEC;\n svar Tcb15sec(8015,LONG) = snapshot(sub(TickTradeCount1sec[0],TickTradeCount1sec[14])) 15 SEC;\n svar Tcb30sec(8030,LONG) = snapshot(sub(TickTradeCount1sec[0],TickTradeCount1sec[29])) 30 SEC;\n\n\n/*******************************************************\n * SMA RATE OF CHANGES (MINUTES) 40,000\n * *****************************************************/ \n // 1 minute increment\n svar SmaRoc1x2min(40102,DUB) = roc(Sma1min[0],Sma2min[0]);\n svar SmaRoc2x3min(40203,DUB) = roc(Sma2min[0],Sma3min[0]);\n svar SmaRoc3x4min(40304,DUB) = roc(Sma3min[0],Sma4min[0]);\n svar SmaRoc4x5min(40405,DUB) = roc(Sma4min[0],Sma5min[0]);\n"}]}